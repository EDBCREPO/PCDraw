:root {

  --color-dark: #000;
  --color-light: #fff;
  
  --color-mute: #F5F5F5;
  --color-mute-hover: #F5F5F5;
  --color-mute-click: #dddddd;

  --color-default: #fff;
  --color-default-hover: #fff;
  --color-default-click: #d1d1d1;

  --color-danger: #E91E63;
  --color-danger-hover: #E91E63;
  --color-danger-click: #d11b57;

  --color-primary: #536DFE;
  --color-primary-hover: #536DFE;
  --color-primary-click: #475edf;

  --color-success: #4fb2aa;
  --color-success-hover: #4fb2aa;
  --color-success-click: #429891;

  --color-warning: #FFC107;
  --color-warning-hover: #FFC107;
  --color-warning-click: #e7af06;

  --color-secondary: #212121;
  --color-secondary-hover: #212121;
  --color-secondary-click: #2f2e2e;

  --color-transparent: transparent;
  --color-transparent-mute: #F5F5F5;
  --color-transparent-danger: #E91E63;
  --color-transparent-success: #4fb2aa;
  --color-transparent-primary: #536DFE;
  --color-transparent-default: #ffffff;
  --color-transparent-warning: #FFC107;
  --color-transparent-secondary: #212121;
  --color-transparent-dark: rgba(0, 0, 0, 0.8);
  --color-transparent-light: rgba(255, 255, 255, 0.8);

}
/*
 * 1. Remove most spacing between table cells.
 * 2. Behave like a block element
 * 3. Style
 */
.uk-table {
  border-collapse: collapse;
  margin-bottom: 20px;
  border-spacing: 0;
  width: 100%;
}
/* Add margin if adjacent element */
* + .uk-table {
  margin-top: 20px;
}
/* Header cell
 ========================================================================== */
/*
 * 1. Style
 */
.uk-table th {
  text-transform: uppercase;
  vertical-align: bottom;
  padding: 16px 12px;
  text-align: left;
  /* 1 */
  font-size: 0.875rem;
  font-weight: normal;
  color: #999;
}
/* Cell
 ========================================================================== */
.uk-table td {
  padding: 16px 12px;
  vertical-align: top;
}
/*
 * Remove margin from the last-child
 */
.uk-table td > :last-child {
  margin-bottom: 0;
}
/* Footer
 ========================================================================== */
.uk-table tfoot {
  font-size: 0.875rem;
}
/* Caption
 ========================================================================== */
.uk-table caption {
  font-size: 0.875rem;
  text-align: left;
  color: #999;
}
/* Alignment modifier
 ========================================================================== */
.uk-table-middle,.uk-table-middle td {
  vertical-align: middle !important;
}
/* Style modifiers
 ========================================================================== */
/*
 * Divider
 */
.uk-table-divider > tr:not(:first-child),
.uk-table-divider > :not(:first-child) > tr,
.uk-table-divider > :first-child > tr:not(:first-child) {
  border-top: 1px solid #e5e5e5;
}
/*
 * Striped
 */
.uk-table-striped > tr:nth-of-type(odd),
.uk-table-striped tbody tr:nth-of-type(odd) {
  border-bottom: 1px solid #e5e5e5;
  border-top: 1px solid #e5e5e5;
  background: #f8f8f8;
}
/*
 * Hover
 */
.uk-table-hover > tr:hover,
.uk-table-hover tbody tr:hover {
  background: #ffd;
}
/* Active state
 ========================================================================== */
.uk-table > tr.uk-active,
.uk-table tbody tr.uk-active {
  background: #ffd;
}
/* Size modifier
 ========================================================================== */
.uk-table-small th,
.uk-table-small td {
  padding: 10px 12px;
}
.uk-table-large th,
.uk-table-large td {
  padding: 22px 12px;
}
/* Justify modifier
 ========================================================================== */
.uk-table-justify th:first-child,
.uk-table-justify td:first-child {
  padding-left: 0;
}
.uk-table-justify th:last-child,
.uk-table-justify td:last-child {
  padding-right: 0;
}
/* Cell size modifier
 ========================================================================== */
.uk-table-shrink {
  width: 1px;
}
.uk-table-expand {
  min-width: 150px;
}
/* Cell link modifier
 ========================================================================== */
/*
 * Does not work with `uk-table-justify` at the moment
 */
.uk-table-link {
  padding: 0 !important;
}
.uk-table-link > a {
  padding: 16px 12px;
  display: block;
}
.uk-table-small .uk-table-link > a {
  padding: 10px 12px;
}
/* Responsive table
 ========================================================================== */
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .uk-table-responsive tbody,
  .uk-table-responsive th,
  .uk-table-responsive td,
  .uk-table-responsive tr,
  .uk-table-responsive {
    display: block;
  }
  .uk-table-responsive thead {
    display: none;
  }
  .uk-table-responsive th,
  .uk-table-responsive td {
    white-space: normal !important;
    overflow: visible !important;
    max-width: none !important;
    min-width: 0 !important;
    width: auto !important;
  }
  .uk-table-responsive th:not(:first-child):not(.uk-table-link),
  .uk-table-responsive td:not(:first-child):not(.uk-table-link),
  .uk-table-responsive .uk-table-link:not(:first-child) > a {
    padding-top: 5px !important;
  }
  .uk-table-responsive th:not(:last-child):not(.uk-table-link),
  .uk-table-responsive td:not(:last-child):not(.uk-table-link),
  .uk-table-responsive .uk-table-link:not(:last-child) > a {
    padding-bottom: 5px !important;
  }
  .uk-table-justify.uk-table-responsive th,
  .uk-table-justify.uk-table-responsive td {
    padding-left: 0; padding-right: 0;
  }
}
.uk-table tbody tr {
  transition: background-color 0.1s linear;
}
.uk-table-striped > tr:nth-of-type(even):last-child,
.uk-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom: 1px solid #e5e5e5;
}


/*
 * 1. Remove default style.
 * 2. Define consistent box sizing.
 * 3. Remove `margin` in all browsers.
 * 4. Align to the center of the line box.
 * 5. Prevent content overflow if a fixed width is used.
 * 6. Take the full width.
 * 7. Remove white background in Chrome.
 */
.uk-range {
  /* 1 */
  -webkit-appearance: none;
  /* 2 */
  box-sizing: border-box;
  /* 3 */
  margin: 0;
  /* 4 */
  vertical-align: middle;
  /* 5 */
  max-width: 100%;
  /* 6 */
  width: 100%;
  /* 7 */
  background: transparent;
}
/* Focus */
.uk-range:focus {
  outline: none;
}
.uk-range::-moz-focus-outer {
  border: none;
}
/*
 * Improves consistency of cursor style for clickable elements
 */
.uk-range:not(:disabled)::-webkit-slider-thumb {
  cursor: pointer;
}
.uk-range:not(:disabled)::-moz-range-thumb {
  cursor: pointer;
}
/*
 * Track
 * 1. Safari doesn't have a focus state. Using active instead.
 */
/* Webkit */
.uk-range::-webkit-slider-runnable-track {
  background: #ebebeb;
  border-radius: 500px;
  height: 3px;
}
.uk-range:focus::-webkit-slider-runnable-track,
.uk-range:active::-webkit-slider-runnable-track {
  background: #dedede;
}
/* Firefox */
.uk-range::-moz-range-track {
  background: #ebebeb;
  border-radius: 500px;
  height: 3px;
}
.uk-range:focus::-moz-range-track {
  background: #dedede;
}
/*
 * Thumb
 * 1. Reset
 * 2. Style
 */
/* Webkit */
.uk-range::-webkit-slider-thumb {
  /* 1 */
  -webkit-appearance: none;
  margin-top: -7px;
  /* 2 */
  background: #fff;
  border-radius: 500px;
  height: 15px; width: 15px;
  border: 1px solid #cccccc;
}
/* Firefox */
.uk-range::-moz-range-thumb {
  /* 1 */
  border: none;
  /* 2 */
  margin-top: -7px;
  background: #fff;
  border-radius: 500px;
  height: 15px; width: 15px;
  border: 1px solid #cccccc;
}

/*
 * 1. Define consistent box sizing.
 *    Default is `content-box` with following exceptions set to `border-box`
 *    `select`, `input[type="checkbox"]` and `input[type="radio"]`
 *    `input[type="search"]` in Chrome, Safari and Opera
 *    `input[type="color"]` in Firefox
 * 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
 * 3. Remove `border-radius` in iOS.
 * 4. Change font properties to `inherit` in all browsers.
 */
.uk-textarea,.uk-radio,
.uk-input,.uk-select,
.uk-checkbox {
  /* 1 */
  box-sizing: border-box;
  /* 3 */
  border-radius: 0;
  /* 4 */
  font: inherit;
  /* 2 */
  margin: 0;
}
/*
 * Show the overflow in Edge.
 */
.uk-input {
  overflow: visible;
}
/*
 * Remove the inheritance of text transform in Firefox.
 */
.uk-select {
  text-transform: none;
}
/*
 * 1. Change font properties to `inherit` in all browsers
 * 2. Don't inherit the `font-weight` and use `bold` instead.
 * NOTE: Both declarations don't work in Chrome, Safari and Opera.
 */
.uk-select optgroup {
  /* 1 */
  font: inherit;
  /* 2 */
  font-weight: bold;
}
/*
 * Remove the default vertical scrollbar in IE 10+.
 */
.uk-textarea {
  overflow: auto;
}
/*
 * Remove the inner padding and cancel buttons in Chrome on OS X and Safari on OS X.
 */
.uk-input[type="search"]::-webkit-search-cancel-button,
.uk-input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
.uk-input[type="number"]::-webkit-inner-spin-button,
.uk-input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
/*
 * Removes placeholder transparency in Firefox.
 */
.uk-input::-moz-placeholder,
.uk-textarea::-moz-placeholder {
  opacity: 1;
}
/*
 * Improves consistency of cursor style for clickable elements
 */
.uk-radio:not(:disabled),
.uk-checkbox:not(:disabled) {
  cursor: pointer;
}
/*
 * Define consistent border, margin, and padding.
 */
.uk-fieldset {
  border: none;
  padding: 0;
  margin: 0;
}
/* Input, select and textarea
 * Allowed: `text`, `password`, `datetime`, `datetime-local`, `date`,  `month`,
            `time`, `week`, `number`, `email`, `url`, `search`, `tel`, `color`
 * Disallowed: `range`, `radio`, `checkbox`, `file`, `submit`, `reset` and `image`
 ========================================================================== */
/*
 * Remove default style in iOS.
 */
.uk-input,.uk-textarea {
  -webkit-appearance: none;
}
/*
 * 1. Prevent content overflow if a fixed width is used
 * 2. Take the full width
 * 3. Reset default
 * 4. Style
 */
.uk-input,.uk-select,
.uk-textarea {
  /* 1 */
  width: 100%;
  /* 2 */
  border: 0 none;
  /* 3 */
  max-width: 100%;
  /* 4 */
  color: black;
  padding: 0 10px;
  border: 1px solid #e5e5e5;
  transition: 0.2s ease-in-out;
  background:  var(--color-transparent-light);
  transition-property: color, background-color, border;
}
/*
 * Single-line
 * 1. Allow any element to look like an `input` or `select` element
 * 2. Make sure line-height is not larger than height
 *    Also needed to center the text vertically
 */
.uk-input,
.uk-select:not([multiple]):not([size]) {
  height: 40px;
  vertical-align: middle;
  /* 1 */
  display: inline-block;
}
/* 2 */
.uk-input:not(input),
.uk-select:not(select) {
  line-height: 38px;
}
/*
 * Multi-line
 */
.uk-select[multiple],
.uk-select[size],
.uk-textarea {
  padding-top: 6px;
  padding-bottom: 6px;
  vertical-align: top;
}
.uk-select[multiple],
.uk-select[size] {
  resize: vertical;
}
/* Focus */
.uk-input:focus,
.uk-select:focus,
.uk-textarea:focus {
  outline: none;
  background-color: #fff;
  border-color: #e5e5e5;
  color: #666;
}
/* Disabled */
.uk-input:disabled,
.uk-select:disabled,
.uk-textarea:disabled {
  background-color: #f8f8f8;
  border-color: #e5e5e5;
  color: #999;
}
/*
 * Placeholder
 */
.uk-input::placeholder {
  color: #999;
}
.uk-textarea::placeholder {
  color: #999;
}
/* Style modifier (`uk-input`, `uk-select` and `uk-textarea`)
 ========================================================================== */
/*
 * Small
 */
.uk-form-small {
  font-size: 0.875rem;
}
/* Single-line */
.uk-form-small:not(textarea):not([multiple]):not([size]) {
  height: 30px;
  padding-left: 8px;
  padding-right: 8px;
}
/* Multi-line */
textarea.uk-form-small,
[multiple].uk-form-small,
[size].uk-form-small {
  padding: 5px 8px;
}
.uk-form-small:not(select):not(input):not(textarea) {
  line-height: 28px;
}
/*
 * Large
 */
.uk-form-large {
  font-size: 1.25rem;
}
/* Single-line */
.uk-form-large:not(textarea):not([multiple]):not([size]) {
  height: 55px;
  padding-left: 12px;
  padding-right: 12px;
}
/* Multi-line */
textarea.uk-form-large,
[multiple].uk-form-large,
[size].uk-form-large {
  padding: 7px 12px;
}
.uk-form-large:not(select):not(input):not(textarea) {
  line-height: 53px;
}
/* Style modifier (`uk-input`, `uk-select` and `uk-textarea`)
 ========================================================================== */

/* TODO: css compiled */

      .uk-form-mute,
      .uk-form-mute:focus {
        color: var(--color-mute);
        border-color: var(--color-mute);
      }
    

      .uk-form-danger,
      .uk-form-danger:focus {
        color: var(--color-danger);
        border-color: var(--color-danger);
      }
    

      .uk-form-success,
      .uk-form-success:focus {
        color: var(--color-success);
        border-color: var(--color-success);
      }
    

      .uk-form-default,
      .uk-form-default:focus {
        color: var(--color-default);
        border-color: var(--color-default);
      }
    

      .uk-form-primary,
      .uk-form-primary:focus {
        color: var(--color-primary);
        border-color: var(--color-primary);
      }
    

      .uk-form-warning,
      .uk-form-warning:focus {
        color: var(--color-warning);
        border-color: var(--color-warning);
      }
    

      .uk-form-secondary,
      .uk-form-secondary:focus {
        color: var(--color-secondary);
        border-color: var(--color-secondary);
      }
    
/* TODO: css compiled */

/*
 * Blank
 */
.uk-form-blank {
  background: none;
  border-color: transparent;
}
.uk-form-blank:focus {
  border-color: #e5e5e5;
  border-style: solid;
}
/* Width modifiers (`uk-input`, `uk-select` and `uk-textarea`)
 ========================================================================== */
/*
 * Fixed widths
 * Different widths for mini sized `input` and `select` elements
 */
input.uk-form-width-xsmall {
  width: 50px;
}
select.uk-form-width-xsmall {
  width: 75px;
}
.uk-form-width-small {
  width: 130px;
}
.uk-form-width-medium {
  width: 200px;
}
.uk-form-width-large {
  width: 500px;
}
/* Select
 ========================================================================== */
/*
 * 1. Remove default style. Also works in Firefox
 * 2. Style
 * 3. Set `color` for options in the select dropdown, because the inherited `color` might be too light.
 */
.uk-select:not([multiple]):not([size]) {
  /* 1 */
  -webkit-appearance: none;
  -moz-appearance: none;
  /* 2 */
  padding-right: 20px;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
  background-repeat: no-repeat;
  background-position: 100% 50%;
}
/* 3 */
.uk-select:not([multiple]):not([size]) option {
  color: #666;
}
/*
 * Disabled
 */
.uk-select:not([multiple]):not([size]):disabled {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
/* Datalist
 ========================================================================== */
/*
 * 1. Remove default style in Chrome
 */
.uk-input[list] {
  padding-right: 20px;
  background-repeat: no-repeat;
  background-position: 100% 50%;
}
.uk-input[list]:hover,
.uk-input[list]:focus {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%2012%208%206%2016%206%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
/* 1 */
.uk-input[list]::-webkit-calendar-picker-indicator {
  display: none !important;
}
/* Radio and checkbox
 ========================================================================== */
/*
 * 1. Style
 * 2. Make box more robust so it clips the child element
 * 3. Vertical alignment
 * 4. Remove default style
 * 5. Fix black background on iOS
 * 6. Center icons
 */
.uk-radio,.uk-checkbox {
  /* 1 */
  display: inline-block;
  height: 16px;
  width: 16px;
  /* 2 */
  overflow: hidden;
  /* 3 */
  margin-top: -4px;
  vertical-align: middle;
  /* 4 */
  -webkit-appearance: none;
  -moz-appearance: none;
  /* 5 */
  background-color: transparent;
  /* 6 */
  background-repeat: no-repeat;
  background-position: 50% 50%;
  border: 1px solid #cccccc;
  transition: 0.2s ease-in-out;
  transition-property: background-color, border;
}
.uk-radio {
  border-radius: 50%;
}
/* Focus */
.uk-radio:focus,.uk-checkbox:focus {
  background-color: rgba(0, 0, 0, 0);
  border-color: var(--color-primary);
  outline: none;
}
/*
 * Checked
 */
.uk-radio:checked,
.uk-checkbox:checked,
.uk-checkbox:indeterminate {
  background-color: var(--color-primary);
  border-color: transparent;
}
/* Focus */
.uk-radio:checked:focus,
.uk-checkbox:checked:focus,
.uk-checkbox:indeterminate:focus {
  background-color: var(--color-primary);
}
/*
 * Icons
 */
.uk-radio:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23fff%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-checkbox:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23fff%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-checkbox:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23fff%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
/*
 * Disabled
 */
.uk-radio:disabled,
.uk-checkbox:disabled {
  background-color: #f8f8f8;
  border-color: #e5e5e5;
}
.uk-radio:disabled:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23999%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-checkbox:disabled:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23999%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-checkbox:disabled:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23999%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
/* Legend
 ========================================================================== */
/*
 * Legend
 * 1. Behave like block element
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove padding so people aren't caught out if they zero out fieldsets.
 * 4. Style
 */
.uk-legend {
  /* 1 */
  width: 100%;
  /* 2 */
  color: inherit;
  /* 3 */
  padding: 0;
  /* 4 */
  font-size: 1.5rem;
  line-height: 1.4;
}
/* Custom controls
 ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 */
.uk-form-custom {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  vertical-align: middle;
}
/*
 * 1. Position and resize the form control to always cover its container
 * 2. Required for Firefox for positioning to the left
 * 3. Required for Webkit to make `height` work
 * 4. Hide controle and show cursor
 * 5. Needed for the cursor
 * 6. Clip height caused by 5. Needed for Webkit only
 */
.uk-form-custom select,
.uk-form-custom input[type="file"] {
  /* 1 */
  position: absolute;
  top: 0;
  z-index: 1;
  width: 100%;
  height: 100%;
  /* 2 */
  left: 0;
  /* 3 */
  -webkit-appearance: none;
  /* 4 */
  opacity: 0;
  cursor: pointer;
}
.uk-form-custom input[type="file"] {
  /* 5 */
  font-size: 500px;
  /* 6 */
  overflow: hidden;
}
/* Label
 ========================================================================== */
.uk-form-label {
  color: #333;
  font-size: 0.875rem;
}
/* Layout
 ========================================================================== */
/*
 * Stacked
 */
.uk-form-stacked .uk-form-label {
  display: block;
  margin-bottom: 5px;
}
/*
 * Horizontal
 */
/* Tablet portrait and smaller */
@media (max-width: 959px) {
  /* Behave like `uk-form-stacked` */
  .uk-form-horizontal .uk-form-label {
    display: block;
    margin-bottom: 5px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-form-horizontal .uk-form-label {
    width: 200px;
    margin-top: 7px;
    float: left;
  }
  .uk-form-horizontal .uk-form-controls {
    margin-left: 215px;
  }
  /* Better vertical alignment if controls are checkboxes and radio buttons with text */
  .uk-form-horizontal .uk-form-controls-text {
    padding-top: 7px;
  }
}
/* Icons
 ========================================================================== */
/*
 * 1. Set position
 * 2. Set width
 * 3. Center icon vertically and horizontally
 * 4. Style
 */
.uk-form-icon {
  /* 1 */
  position: absolute;
  top: 0; bottom: 0;
  left: 0;
  /* 2 */
  width: 40px;
  /* 3 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  /* 4 */
  color: #999;
}
/*
 * Required for `a`.
 */
.uk-form-icon:hover {
  color: #666;
}
/*
 * Make `input` element clickable through icon, e.g. if it's a `span`
 */
.uk-form-icon:not(a):not(button):not(input) {
  pointer-events: none;
}
/*
 * Input padding
 */
.uk-form-icon:not(.uk-form-icon-flip) ~ .uk-input {
  padding-left: 40px !important;
}
/*
 * Position modifier
 */
.uk-form-icon-flip {
  right: 0;
  left: auto;
}
.uk-form-icon-flip ~ .uk-input {
  padding-right: 40px !important;
}


/*
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Address `overflow` set to `hidden` in IE.
 * 4. Correct `font` properties and `color` not being inherited for `button`.
 * 5. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 6. Remove default style for `input type="submit"`in iOS.
 * 7. Style
 * 8. `line-height` is used to create a height because it also centers the text vertically for `a` elements.
 *    Better would be to use height and flexbox to center the text vertically but flexbox doesn't work in Firefox on `button` elements.
 * 9. Align text if button has a width
 * 10. Required for `a`.
 */
 .uk-button {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  overflow: visible;
  /* 4 */
  font: inherit;
  color: inherit;
  /* 5 */
  text-transform: none;
  /* 6 */
  -webkit-appearance: none;
  border-radius: 0;
  /* 7 */
  padding: 0 30px;
  font-size: 0.875rem;
  display: inline-block;
  box-sizing: border-box;
  vertical-align: middle;
  /* 8 */
  line-height: 38px;
  /* 9 */
  text-align: center;
  /* 10 */
  text-decoration: none;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  background-color: transparent;
  color: var(--color-secondary);
  transition-property: color, background-color, border-color;
}
.uk-button:not(:disabled) {
  cursor: pointer;
}
/*
 * Remove the inner border and padding in Firefox.
 */
.uk-button::-moz-focus-inner {
  border: 0; padding: 0;
}
/* Hover */
.uk-button:hover {
  /* 9 */
  text-decoration: none;
  color: var(--color-secondary); 
}
.uk-button:active {
  color: var(--color-secondary-click);
}
/* OnClick + Active */
/* Style modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-button.uk-mute {
        border: 1px solid var(--color-mute);
        color: var(--color-mute);
      }
      
        /* Hover */
      .uk-button.uk-mute:hover,
      .uk-button.uk-mute.uk-enphasis {
        background-color: var(--color-transparent-mute);
        color: var(--color-secondary);
      }
      
      /* Hover */
      .uk-button.uk-mute.uk-enphasis:hover {
        background-color: var(--color-transparent-mute);
        border-color: var(--color-transparent-mute);
        color: var(--color-secondary);
      }
      
      .uk-button.uk-enphasis.uk-mute:active,
      .uk-button.uk-enphasis.uk-mute.uk-active{
          background-color: var(--color-mute-click);
          border-color: var(--color-mute-click);
          color: var(--color-secondary);
      }
      
      /* OnClick + Active */
      .uk-button.uk-mute:active,
      .uk-button.uk-mute.uk-active {
        background-color: var(--color-mute-click);
        border-color: var(--color-mute-click);
        color: var(--color-secondary);
      }
    

      .uk-button.uk-danger {
        border: 1px solid var(--color-danger);
        color: var(--color-danger);
      }
      
        /* Hover */
      .uk-button.uk-danger:hover,
      .uk-button.uk-danger.uk-enphasis {
        background-color: var(--color-transparent-danger);
        color: var(--color-default);
      }
      
      /* Hover */
      .uk-button.uk-danger.uk-enphasis:hover {
        background-color: var(--color-transparent-danger);
        border-color: var(--color-transparent-danger);
        color: var(--color-default);
      }
      
      .uk-button.uk-enphasis.uk-danger:active,
      .uk-button.uk-enphasis.uk-danger.uk-active{
          background-color: var(--color-danger-click);
          border-color: var(--color-danger-click);
          color: var(--color-default);
      }
      
      /* OnClick + Active */
      .uk-button.uk-danger:active,
      .uk-button.uk-danger.uk-active {
        background-color: var(--color-danger-click);
        border-color: var(--color-danger-click);
        color: var(--color-default);
      }
    

      .uk-button.uk-success {
        border: 1px solid var(--color-success);
        color: var(--color-success);
      }
      
        /* Hover */
      .uk-button.uk-success:hover,
      .uk-button.uk-success.uk-enphasis {
        background-color: var(--color-transparent-success);
        color: var(--color-default);
      }
      
      /* Hover */
      .uk-button.uk-success.uk-enphasis:hover {
        background-color: var(--color-transparent-success);
        border-color: var(--color-transparent-success);
        color: var(--color-default);
      }
      
      .uk-button.uk-enphasis.uk-success:active,
      .uk-button.uk-enphasis.uk-success.uk-active{
          background-color: var(--color-success-click);
          border-color: var(--color-success-click);
          color: var(--color-default);
      }
      
      /* OnClick + Active */
      .uk-button.uk-success:active,
      .uk-button.uk-success.uk-active {
        background-color: var(--color-success-click);
        border-color: var(--color-success-click);
        color: var(--color-default);
      }
    

      .uk-button.uk-default {
        border: 1px solid var(--color-default);
        color: var(--color-default);
      }
      
        /* Hover */
      .uk-button.uk-default:hover,
      .uk-button.uk-default.uk-enphasis {
        background-color: var(--color-transparent-default);
        color: var(--color-secondary);
      }
      
      /* Hover */
      .uk-button.uk-default.uk-enphasis:hover {
        background-color: var(--color-transparent-default);
        border-color: var(--color-transparent-default);
        color: var(--color-secondary);
      }
      
      .uk-button.uk-enphasis.uk-default:active,
      .uk-button.uk-enphasis.uk-default.uk-active{
          background-color: var(--color-default-click);
          border-color: var(--color-default-click);
          color: var(--color-secondary);
      }
      
      /* OnClick + Active */
      .uk-button.uk-default:active,
      .uk-button.uk-default.uk-active {
        background-color: var(--color-default-click);
        border-color: var(--color-default-click);
        color: var(--color-secondary);
      }
    

      .uk-button.uk-primary {
        border: 1px solid var(--color-primary);
        color: var(--color-primary);
      }
      
        /* Hover */
      .uk-button.uk-primary:hover,
      .uk-button.uk-primary.uk-enphasis {
        background-color: var(--color-transparent-primary);
        color: var(--color-default);
      }
      
      /* Hover */
      .uk-button.uk-primary.uk-enphasis:hover {
        background-color: var(--color-transparent-primary);
        border-color: var(--color-transparent-primary);
        color: var(--color-default);
      }
      
      .uk-button.uk-enphasis.uk-primary:active,
      .uk-button.uk-enphasis.uk-primary.uk-active{
          background-color: var(--color-primary-click);
          border-color: var(--color-primary-click);
          color: var(--color-default);
      }
      
      /* OnClick + Active */
      .uk-button.uk-primary:active,
      .uk-button.uk-primary.uk-active {
        background-color: var(--color-primary-click);
        border-color: var(--color-primary-click);
        color: var(--color-default);
      }
    

      .uk-button.uk-warning {
        border: 1px solid var(--color-warning);
        color: var(--color-warning);
      }
      
        /* Hover */
      .uk-button.uk-warning:hover,
      .uk-button.uk-warning.uk-enphasis {
        background-color: var(--color-transparent-warning);
        color: var(--color-secondary);
      }
      
      /* Hover */
      .uk-button.uk-warning.uk-enphasis:hover {
        background-color: var(--color-transparent-warning);
        border-color: var(--color-transparent-warning);
        color: var(--color-secondary);
      }
      
      .uk-button.uk-enphasis.uk-warning:active,
      .uk-button.uk-enphasis.uk-warning.uk-active{
          background-color: var(--color-warning-click);
          border-color: var(--color-warning-click);
          color: var(--color-secondary);
      }
      
      /* OnClick + Active */
      .uk-button.uk-warning:active,
      .uk-button.uk-warning.uk-active {
        background-color: var(--color-warning-click);
        border-color: var(--color-warning-click);
        color: var(--color-secondary);
      }
    

      .uk-button.uk-secondary {
        border: 1px solid var(--color-secondary);
        color: var(--color-secondary);
      }
      
        /* Hover */
      .uk-button.uk-secondary:hover,
      .uk-button.uk-secondary.uk-enphasis {
        background-color: var(--color-transparent-secondary);
        color: var(--color-default);
      }
      
      /* Hover */
      .uk-button.uk-secondary.uk-enphasis:hover {
        background-color: var(--color-transparent-secondary);
        border-color: var(--color-transparent-secondary);
        color: var(--color-default);
      }
      
      .uk-button.uk-enphasis.uk-secondary:active,
      .uk-button.uk-enphasis.uk-secondary.uk-active{
          background-color: var(--color-secondary-click);
          border-color: var(--color-secondary-click);
          color: var(--color-default);
      }
      
      /* OnClick + Active */
      .uk-button.uk-secondary:active,
      .uk-button.uk-secondary.uk-active {
        background-color: var(--color-secondary-click);
        border-color: var(--color-secondary-click);
        color: var(--color-default);
      }
    
/* TODO: css compiled */


/*
 * Disabled
 * The same for all style modifiers
 */
 
.uk-button:disabled {
  background-color: transparent;
  border-color: #e5e5e5;
  color: #999;
}

/* Size modifiers
 ========================================================================== */
.uk-button-small {
  padding: 0 15px;
  line-height: 28px;
  font-size: 0.875rem;
}
.uk-button-large {
  padding: 0 40px;
  line-height: 53px;
  font-size: 0.875rem;
}
/* Text modifiers
 ========================================================================== */
/*
 * Text
 * 1. Reset
 * 2. Style
 */
.uk-button.uk-text {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  position: relative;
  color: var(--color-secondary);
}
.uk-button.uk-text::before {
  left: 0;
  bottom: 0;
  right: 100%;
  content: "";
  position: absolute;
  transition: right 0.3s ease-out;
  border-bottom: 1px solid var(--color-secondary);
}
/* Hover */
.uk-button.uk-text:hover { color: var(--color-secondary); }
.uk-button.uk-text:hover::before { right: 0; }
/* Disabled */
.uk-button.uk-text:disabled { color: var(--color-mute); }
.uk-button.uk-text:disabled::before { display: none; }

/* color */

            .uk-button.uk-text.uk-mute {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-mute:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-mute::before {
              border-bottom: 1px solid var(--color-mute);
            }
        
            .uk-button.uk-text.uk-danger {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-danger:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-danger::before {
              border-bottom: 1px solid var(--color-danger);
            }
        
            .uk-button.uk-text.uk-success {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-success:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-success::before {
              border-bottom: 1px solid var(--color-success);
            }
        
            .uk-button.uk-text.uk-default {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-default:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-default::before {
              border-bottom: 1px solid var(--color-default);
            }
        
            .uk-button.uk-text.uk-primary {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-primary:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-primary::before {
              border-bottom: 1px solid var(--color-primary);
            }
        
            .uk-button.uk-text.uk-warning {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-warning:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-warning::before {
              border-bottom: 1px solid var(--color-warning);
            }
        
            .uk-button.uk-text.uk-secondary {
                border-color: transparent;
            }
            .uk-button.uk-text.uk-secondary:hover {
                background-color: transparent;
            }
            .uk-button.uk-text.uk-secondary::before {
              border-bottom: 1px solid var(--color-secondary);
            }
        

/*
 * Link
 * 1. Reset
 * 2. Style
 */
.uk-button.uk-link {
  /* 1 */
  padding: 0;
  line-height: 1.5;
  background: none;
  /* 2 */
  border-color: transparent;
  color: var(--color-secondary);
}
/* Hover */
.uk-button.uk-link:hover {
  color: var(--color-secondary-click);
  text-decoration: none;
}
/* Disabled */
.uk-button.uk-link:disabled {
  color: var(--color-mute);
  text-decoration: none;
}

/* color */

            .uk-button.uk-link.uk-mute:hover {
                color: var(--color-mute-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-mute:disabled {
                color: var(--color-mute-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-danger:hover {
                color: var(--color-danger-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-danger:disabled {
                color: var(--color-danger-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-success:hover {
                color: var(--color-success-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-success:disabled {
                color: var(--color-success-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-default:hover {
                color: var(--color-default-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-default:disabled {
                color: var(--color-default-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-primary:hover {
                color: var(--color-primary-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-primary:disabled {
                color: var(--color-primary-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-warning:hover {
                color: var(--color-warning-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-warning:disabled {
                color: var(--color-warning-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        
            .uk-button.uk-link.uk-secondary:hover {
                color: var(--color-secondary-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
            .uk-button.uk-link.uk-secondary:disabled {
                color: var(--color-secondary-click);
                background-color: transparent;
                border-color: transparent;
                text-decoration: none;
            }
        

/* Group
 ========================================================================== */
/*
 * 1. Using `flex` instead of `inline-block` to prevent whitespace betweent child elements
 * 2. Behave like button
 * 3. Create position context
 */
.uk-button-group {
  /* 1 */
  display: inline-flex;
  /* 2 */
  vertical-align: middle;
  /* 3 */
  position: relative;
}
/* Group
     ========================================================================== */
/*
     * Collapse border
     */
.uk-button.uk-group > .uk-button:nth-child(n+2),
.uk-button.uk-group > div:nth-child(n+2) .uk-button {
  margin-left: -1px;
}
/*
     * Create position context to superimpose the successor elements border
     * Known issue: If you use an `a` element as button and an icon inside,
     * the active state will not work if you click the icon inside the button
     * Workaround: Just use a `button` or `input` element as button
     */
.uk-button.uk-group .uk-button:hover,
.uk-button.uk-group .uk-button:active,
.uk-button.uk-group .uk-button.uk-active {
  position: relative;
  z-index: 1;
}

/*-────────────────────────────────────────────────────────────────────────────────────-*/



        @keyframes uk-animation-primary-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-default);
                background-color: var(--color-primary); 
                border-color: var(--color-primary);
            }
        }
        
        .uk-primary-enphasis-hover:hover { 
            animation-name: uk-animation-primary-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-secondary-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-default);
                background-color: var(--color-secondary); 
                border-color: var(--color-secondary);
            }
        }
        
        .uk-secondary-enphasis-hover:hover { 
            animation-name: uk-animation-secondary-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-success-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-default);
                background-color: var(--color-success); 
                border-color: var(--color-success);
            }
        }
        
        .uk-success-enphasis-hover:hover { 
            animation-name: uk-animation-success-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-warning-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-secondary);
                background-color: var(--color-warning); 
                border-color: var(--color-warning);
            }
        }
        
        .uk-warning-enphasis-hover:hover { 
            animation-name: uk-animation-warning-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-danger-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-default);
                background-color: var(--color-danger); 
                border-color: var(--color-danger);
            }
        }
        
        .uk-danger-enphasis-hover:hover { 
            animation-name: uk-animation-danger-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-default-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-secondary);
                background-color: var(--color-default); 
                border-color: var(--color-default);
            }
        }
        
        .uk-default-enphasis-hover:hover { 
            animation-name: uk-animation-default-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-mute-enphasis-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            }
            to {
                color: var(--color-secondary);
                background-color: var(--color-mute); 
                border-color: var(--color-mute);
            }
        }
        
        .uk-mute-enphasis-hover:hover { 
            animation-name: uk-animation-mute-enphasis-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

/*-────────────────────────────────────────────────────────────────────────────────────-*/



        @keyframes uk-animation-primary-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-primary);
                background-color: transparent; 
                color: var(--color-primary);
            }
        }
        
        .uk-primary-hover:hover { 
            animation-name: uk-animation-primary-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-secondary-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-secondary);
                background-color: transparent; 
                color: var(--color-secondary);
            }
        }
        
        .uk-secondary-hover:hover { 
            animation-name: uk-animation-secondary-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-success-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-success);
                background-color: transparent; 
                color: var(--color-success);
            }
        }
        
        .uk-success-hover:hover { 
            animation-name: uk-animation-success-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-warning-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-warning);
                background-color: transparent; 
                color: var(--color-warning);
            }
        }
        
        .uk-warning-hover:hover { 
            animation-name: uk-animation-warning-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-danger-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-danger);
                background-color: transparent; 
                color: var(--color-danger);
            }
        }
        
        .uk-danger-hover:hover { 
            animation-name: uk-animation-danger-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-default-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-default);
                background-color: transparent; 
                color: var(--color-default);
            }
        }
        
        .uk-default-hover:hover { 
            animation-name: uk-animation-default-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

        @keyframes uk-animation-mute-hover {
            from { 
                background-color: auto; 
                border-color: auto;
                color: auto;
            } to {
                border-color: var(--color-mute);
                background-color: transparent; 
                color: var(--color-mute);
            }
        }
        
        .uk-mute-hover:hover { 
            animation-name: uk-animation-mute-hover; 
            animation-fill-mode: forwards;
            animation-direction: normal;
            animation-duration: 0.5s;
        }

    

/*-────────────────────────────────────────────────────────────────────────────────────-*/

/*
 * 1. Add the correct vertical alignment in all browsers.
 * 2. Behave like a block element.
 * 3. Remove borders in Firefox.
 * 4. Remove default style in Chrome, Safari and Edge.
 * 5. Style
 */
 .uk-progress {
  /* 1 */
  vertical-align: baseline;
  /* 2 */
  display: block;
  width: 100%;
  /* 3 */
  border: 0;
  /* 5 */
  border-radius: 500px;
  margin-bottom: 20px;
  overflow: hidden;
  height: 15px;
}
/* Add margin if adjacent element */
* + .uk-progress {
  margin-top: 20px;
}
/*
 * Show background color set on `uk-progress` in Chrome, Safari and Edge.
 */
.uk-progress::-webkit-progress-bar {
  background-color: rgba(145, 145, 145, 0.296);
  transition: width 0.6s ease;
}
.uk-progress::-moz-progress-bar {
  background-color: rgba(145, 145, 145, 0.296);
  transition: width 0.6s ease;
}
.uk-progress::-webkit-progress-value {
  background-color: rgba(145, 145, 145, 0.296);
  transition: width 0.6s ease;
}

/* TODO: css compiled */

      .uk-progress.uk-mute::-webkit-progress-value {
        background-color: var(--color-mute);
      }
    

      .uk-progress.uk-danger::-webkit-progress-value {
        background-color: var(--color-danger);
      }
    

      .uk-progress.uk-success::-webkit-progress-value {
        background-color: var(--color-success);
      }
    

      .uk-progress.uk-default::-webkit-progress-value {
        background-color: var(--color-default);
      }
    

      .uk-progress.uk-primary::-webkit-progress-value {
        background-color: var(--color-primary);
      }
    

      .uk-progress.uk-warning::-webkit-progress-value {
        background-color: var(--color-warning);
      }
    

      .uk-progress.uk-secondary::-webkit-progress-value {
        background-color: var(--color-secondary);
      }
    
/* TODO: css compiled */

/*
 * 1. Make it work with `100vh` and height in general
 */
.uk-section {
  display: flow-root;
  box-sizing: border-box;
  /* 1 */
  padding-top: 40px;
  padding-bottom: 40px;
}
/* Desktop and bigger */
@media (min-width: 960px) {
  .uk-section {
    padding-top: 70px;
    padding-bottom: 70px;
  }
}
/*
 * Remove margin from the last-child
 */
.uk-section > :last-child {
  margin-bottom: 0;
}
/* Size modifiers
 ========================================================================== */
/*
 * XSmall
 */
.uk-section-xsmall {
  padding-top: 20px;
  padding-bottom: 20px;
}
/*
 * Small
 */
.uk-section-small {
  padding-top: 40px;
  padding-bottom: 40px;
}
/*
 * Large
 */
.uk-section-large {
  padding-top: 70px;
  padding-bottom: 70px;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-section-large {
    padding-top: 140px;
    padding-bottom: 140px;
  }
}
/*
 * XLarge
 */
.uk-section-xlarge {
  padding-top: 140px;
  padding-bottom: 140px;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-section-xlarge {
    padding-top: 210px;
    padding-bottom: 210px;
  }
}
/* Style modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-section.uk-mute { background: var(--color-mute); }
    

      .uk-section.uk-danger { background: var(--color-danger); }
    

      .uk-section.uk-success { background: var(--color-success); }
    

      .uk-section.uk-default { background: var(--color-default); }
    

      .uk-section.uk-primary { background: var(--color-primary); }
    

      .uk-section.uk-warning { background: var(--color-warning); }
    

      .uk-section.uk-secondary { background: var(--color-secondary); }
    
/* TODO: css compiled */

/* Overlap modifier
 ========================================================================== */
/*
 * Reserved modifier to make a section overlap another section with an border image
 * Implemented by the theme
 */

/*
 * 1. Box sizing has to be `content-box` so the max-width is always the same and
 *    unaffected by the padding on different breakpoints. It's important for the size modifiers.
 */
.uk-container {
  display: flow-root;
  /* 1 */
  box-sizing: content-box;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 15px;
  padding-right: 15px;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-container {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-container {
    padding-left: 40px;
    padding-right: 40px;
  }
}
/*
 * Remove margin from the last-child
 */
.uk-container > :last-child {
  margin-bottom: 0;
}
/*
 * Remove padding from nested containers
 */
.uk-container .uk-container {
  padding-left: 0;
  padding-right: 0;
}
/* Size modifier
 ========================================================================== */
.uk-container-xsmall {
  max-width: 750px;
}
.uk-container-small {
  max-width: 900px;
}
.uk-container-large {
  max-width: 1400px;
}
.uk-container-xlarge {
  max-width: 1600px;
}
.uk-container-expand {
  max-width: none;
}
/* Expand modifier
 ========================================================================== */
/*
 * Expand one side only
 */
.uk-container-expand-left {
  margin-left: 0;
}
.uk-container-expand-right {
  margin-right: 0;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-container-expand-left.uk-container-xsmall,
  .uk-container-expand-right.uk-container-xsmall {
    max-width: calc(50% + (750px / 2) - 30px);
  }
  .uk-container-expand-left.uk-container-small,
  .uk-container-expand-right.uk-container-small {
    max-width: calc(50% + (900px / 2) - 30px);
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-container-expand-left,
  .uk-container-expand-right {
    max-width: calc(50% + (1200px / 2) - 40px);
  }
  .uk-container-expand-left.uk-container-xsmall,
  .uk-container-expand-right.uk-container-xsmall {
    max-width: calc(50% + (750px / 2) - 40px);
  }
  .uk-container-expand-left.uk-container-small,
  .uk-container-expand-right.uk-container-small {
    max-width: calc(50% + (900px / 2) - 40px);
  }
  .uk-container-expand-left.uk-container-large,
  .uk-container-expand-right.uk-container-large {
    max-width: calc(50% + (1400px / 2) - 40px);
  }
  .uk-container-expand-left.uk-container-xlarge,
  .uk-container-expand-right.uk-container-xlarge {
    max-width: calc(50% + (1600px / 2) - 40px);
  }
}
/* Item
 ========================================================================== */
/*
 * Utility classes to reset container padding on the left or right side
 * Note: It has to be negative margin on the item, because it's specific to the item.
 */
.uk-container-item-padding-remove-left,
.uk-container-item-padding-remove-right {
  width: calc(100% + 15px);
}
.uk-container-item-padding-remove-left {
  margin-left: -15px;
}
.uk-container-item-padding-remove-right {
  margin-right: -15px;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-container-item-padding-remove-left,
  .uk-container-item-padding-remove-right {
    width: calc(100% + 30px);
  }
  .uk-container-item-padding-remove-left {
    margin-left: -30px;
  }
  .uk-container-item-padding-remove-right {
    margin-right: -30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-container-item-padding-remove-left,
  .uk-container-item-padding-remove-right {
    width: calc(100% + 40px);
  }
  .uk-container-item-padding-remove-left {
    margin-left: -40px;
  }
  .uk-container-item-padding-remove-right {
    margin-right: -40px;
  }
}

.uk-tile {
  display: flow-root;
  position: relative;
  padding-top: 40px;
  padding-left: 15px;
  padding-right: 15px;
  padding-bottom: 40px;
  box-sizing: border-box;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-tile {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-tile {
    padding-top: 70px;
    padding-left: 40px;
    padding-right: 40px;
    padding-bottom: 70px;
  }
}
/*
 * Remove margin from the last-child
 */
.uk-tile > :last-child {
  margin-bottom: 0;
}
/* Size modifiers
 ========================================================================== */
/*
 * XSmall
 */
.uk-tile-xsmall {
  padding-top: 20px;
  padding-bottom: 20px;
}
/*
 * Small
 */
.uk-tile-small {
  padding-top: 40px;
  padding-bottom: 40px;
}
/*
 * Large
 */
.uk-tile-large {
  padding-top: 70px;
  padding-bottom: 70px;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-tile-large {
    padding-top: 140px;
    padding-bottom: 140px;
  }
}
/*
 * XLarge
 */
.uk-tile-xlarge {
  padding-top: 140px;
  padding-bottom: 140px;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-tile-xlarge {
    padding-top: 210px;
    padding-bottom: 210px;
  }
}
/* Style modifiers
 ========================================================================== */
 
/* TODO: css compiled */

      .uk-title.uk-mute::-webkit-progress-value {
        background-color: var(--color-mute);
      }
    

      .uk-title.uk-danger::-webkit-progress-value {
        background-color: var(--color-danger);
      }
    

      .uk-title.uk-success::-webkit-progress-value {
        background-color: var(--color-success);
      }
    

      .uk-title.uk-default::-webkit-progress-value {
        background-color: var(--color-default);
      }
    

      .uk-title.uk-primary::-webkit-progress-value {
        background-color: var(--color-primary);
      }
    

      .uk-title.uk-warning::-webkit-progress-value {
        background-color: var(--color-warning);
      }
    

      .uk-title.uk-secondary::-webkit-progress-value {
        background-color: var(--color-secondary);
      }
    
/* TODO: css compiled */

 .uk-card {
  position: relative;
  box-sizing: border-box;
  transition: box-shadow 0.1s ease-in-out;
}
/* Sections
 ========================================================================== */
.uk-card-body {
  display: flow-root;
  padding: 30px 30px;
}
.uk-card-header {
  display: flow-root;
  padding: 15px 30px;
}
.uk-card-footer {
  display: flow-root;
  padding: 15px 30px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-card-body {
    padding: 40px 40px;
  }
  .uk-card-header {
    padding: 20px 40px;
  }
  .uk-card-footer {
    padding: 20px 40px;
  }
}
/*
 * Remove margin from the last-child
 */
.uk-card-body > :last-child,
.uk-card-header > :last-child,
.uk-card-footer > :last-child {
  margin-bottom: 0;
}
/* Media
 ========================================================================== */
/*
 * Reserved alignment modifier to style the media element, e.g. with `border-radius`
 * Implemented by the theme
 */
/* Title
 ========================================================================== */
.uk-card-title {
  font-size: 1.5rem;
  line-height: 1.4;
}
/* Badge
 ========================================================================== */
/*
 * 1. Position
 * 2. Size
 * 3. Style
 * 4. Center child vertically
 */
.uk-card-badge {
  /* 1 */
  position: absolute;
  right: 15px;
  z-index: 1;
  top: 15px;
  /* 2 */
  height: 22px;
  padding: 0 10px;
  /* 3 */
  border: solid 1px var(--color-secondary);
  color: var(--color-secondary);
  background: transparent;
  font-size: 0.875rem;
  /* 4 */
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: 0;
  border-radius: 2px;
  text-transform: uppercase;
}

/*
* badge color
*/

.uk-card-badge{ border-color: var(--color-secondary); color: var(--color-secondary); }
.uk-card-badge.uk-enphasis{ background: var(--color-secondary); color: var(--color-default); }

/* TODO: css compiled */

      .uk-card-badge.uk-mute{ border-color: var(--color-mute); color: var(--color-mute); }
      .uk-card-badge.uk-mute.uk-enphasis{ background: var(--color-mute); color: var(--color-default); }
    

      .uk-card-badge.uk-danger{ border-color: var(--color-danger); color: var(--color-danger); }
      .uk-card-badge.uk-danger.uk-enphasis{ background: var(--color-danger); color: var(--color-default); }
    

      .uk-card-badge.uk-success{ border-color: var(--color-success); color: var(--color-success); }
      .uk-card-badge.uk-success.uk-enphasis{ background: var(--color-success); color: var(--color-default); }
    

      .uk-card-badge.uk-default{ border-color: var(--color-default); color: var(--color-default); }
      .uk-card-badge.uk-default.uk-enphasis{ background: var(--color-default); color: var(--color-secondary); }
    

      .uk-card-badge.uk-primary{ border-color: var(--color-primary); color: var(--color-primary); }
      .uk-card-badge.uk-primary.uk-enphasis{ background: var(--color-primary); color: var(--color-default); }
    

      .uk-card-badge.uk-warning{ border-color: var(--color-warning); color: var(--color-warning); }
      .uk-card-badge.uk-warning.uk-enphasis{ background: var(--color-warning); color: var(--color-secondary); }
    

      .uk-card-badge.uk-secondary{ border-color: var(--color-secondary); color: var(--color-secondary); }
      .uk-card-badge.uk-secondary.uk-enphasis{ background: var(--color-secondary); color: var(--color-default); }
    
/* TODO: css compiled */

/*
* badge color correction
*/

/*
 * Remove margin from adjacent element
 */
.uk-card-badge:first-child + * { margin-top: 0; }
/* Hover modifier
 ========================================================================== */
.uk-card-hover:not(.uk-card-default):not(.uk-card-primary):not(.uk-card-secondary):hover {
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
  background-color: #fff;
}
/* Style modifiers
 ========================================================================== */

/* TODO: css compiled */
 

      .uk-card.uk-mute {
        /* color: var(--color-secondary); */
        background-color: var(--color-mute);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-mute .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-mute.uk-card-hover:hover {
        background-color: var(--color-mute);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-mute .uk-card-header {
        border-bottom: 1px solid var(--color-mute);
      }
      .uk-card.uk-mute .uk-card-footer {
        border-top: 1px solid var(--color-mute);
      }

    


      .uk-card.uk-danger {
        /* color: var(--color-secondary); */
        background-color: var(--color-danger);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-danger .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-danger.uk-card-hover:hover {
        background-color: var(--color-danger);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-danger .uk-card-header {
        border-bottom: 1px solid var(--color-danger);
      }
      .uk-card.uk-danger .uk-card-footer {
        border-top: 1px solid var(--color-danger);
      }

    


      .uk-card.uk-success {
        /* color: var(--color-secondary); */
        background-color: var(--color-success);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-success .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-success.uk-card-hover:hover {
        background-color: var(--color-success);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-success .uk-card-header {
        border-bottom: 1px solid var(--color-success);
      }
      .uk-card.uk-success .uk-card-footer {
        border-top: 1px solid var(--color-success);
      }

    


      .uk-card.uk-default {
        /* color: var(--color-secondary); */
        background-color: var(--color-default);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-default .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-default.uk-card-hover:hover {
        background-color: var(--color-default);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-default .uk-card-header {
        border-bottom: 1px solid var(--color-default);
      }
      .uk-card.uk-default .uk-card-footer {
        border-top: 1px solid var(--color-default);
      }

    


      .uk-card.uk-primary {
        /* color: var(--color-secondary); */
        background-color: var(--color-primary);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-primary .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-primary.uk-card-hover:hover {
        background-color: var(--color-primary);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-primary .uk-card-header {
        border-bottom: 1px solid var(--color-primary);
      }
      .uk-card.uk-primary .uk-card-footer {
        border-top: 1px solid var(--color-primary);
      }

    


      .uk-card.uk-warning {
        /* color: var(--color-secondary); */
        background-color: var(--color-warning);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-warning .uk-card-title {
        /*color: var(--color-secondary);*/
      }
      .uk-card.uk-warning.uk-card-hover:hover {
        background-color: var(--color-warning);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-warning .uk-card-header {
        border-bottom: 1px solid var(--color-warning);
      }
      .uk-card.uk-warning .uk-card-footer {
        border-top: 1px solid var(--color-warning);
      }

    


      .uk-card.uk-secondary {
        /* color: var(--color-default); */
        background-color: var(--color-secondary);
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
      }
      .uk-card.uk-secondary .uk-card-title {
        /*color: var(--color-default);*/
      }
      .uk-card.uk-secondary.uk-card-hover:hover {
        background-color: var(--color-secondary);
        box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
      }
      .uk-card.uk-secondary .uk-card-header {
        border-bottom: 1px solid var(--color-secondary);
      }
      .uk-card.uk-secondary .uk-card-footer {
        border-top: 1px solid var(--color-secondary);
      }

    
/* TODO: css compiled */
 
/* Size modifier
 ========================================================================== */
/*
 * Small
 */
.uk-card-small.uk-card-body,
.uk-card-small .uk-card-body {
  padding: 20px 20px;
}
.uk-card-small .uk-card-header {
  padding: 13px 20px;
}
.uk-card-small .uk-card-footer {
  padding: 13px 20px;
}
/*
 * Large
 */
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-card-large.uk-card-body,
  .uk-card-large .uk-card-body {
    padding: 70px 70px;
  }
  .uk-card-large .uk-card-header {
    padding: 35px 70px;
  }
  .uk-card-large .uk-card-footer {
    padding: 35px 70px;
  }
}
/*
     * Default
     */
.uk-card-body > .uk-nav-default {
  margin-left: -30px;
  margin-right: -30px;
}
.uk-card-body > .uk-nav-default:only-child {
  margin-top: -15px;
  margin-bottom: -15px;
}
.uk-card-body > .uk-nav-default > li > a,
.uk-card-body > .uk-nav-default .uk-nav-header,
.uk-card-body > .uk-nav-default .uk-nav-divider {
  padding-left: 30px;
  padding-right: 30px;
}
.uk-card-body > .uk-nav-default .uk-nav-sub {
  padding-left: 45px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-card-body > .uk-nav-default {
    margin-left: -40px;
    margin-right: -40px;
  }
  .uk-card-body > .uk-nav-default:only-child {
    margin-top: -25px;
    margin-bottom: -25px;
  }
  .uk-card-body > .uk-nav-default > li > a,
  .uk-card-body > .uk-nav-default .uk-nav-header,
  .uk-card-body > .uk-nav-default .uk-nav-divider {
    padding-left: 40px;
    padding-right: 40px;
  }
  .uk-card-body > .uk-nav-default .uk-nav-sub {
    padding-left: 55px;
  }
}
/*
     * Small
     */
.uk-card-small > .uk-nav-default {
  margin-left: -20px;
  margin-right: -20px;
}
.uk-card-small > .uk-nav-default:only-child {
  margin-top: -5px;
  margin-bottom: -5px;
}
.uk-card-small > .uk-nav-default > li > a,
.uk-card-small > .uk-nav-default .uk-nav-header,
.uk-card-small > .uk-nav-default .uk-nav-divider {
  padding-left: 20px;
  padding-right: 20px;
}
.uk-card-small > .uk-nav-default .uk-nav-sub {
  padding-left: 35px;
}
/*
     * Large
     */
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-card-large > .uk-nav-default {
    margin: 0;
  }
  .uk-card-large > .uk-nav-default:only-child {
    margin: 0;
  }
  .uk-card-large > .uk-nav-default > li > a,
  .uk-card-large > .uk-nav-default .uk-nav-header,
  .uk-card-large > .uk-nav-default .uk-nav-divider {
    padding-left: 0;
    padding-right: 0;
  }
  .uk-card-large > .uk-nav-default .uk-nav-sub {
    padding-left: 15px;
  }
}


/*
 * Note: 1. - 7. is required for `button` elements. Needed for Close and Form Icon component.
 * 1. Remove margins in Chrome, Safari and Opera.
 * 2. Remove borders for `button`.
 * 3. Remove border-radius in Chrome.
 * 4. Address `overflow` set to `hidden` in IE.
 * 5. Correct `font` properties and `color` not being inherited for `button`.
 * 6. Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 7. Remove default `button` padding and background color
 * 8. Style
 * 9. Fill all SVG elements with the current text color if no `fill` attribute is set
 * 10. Let the container fit the height of the icon
 */
 .uk-icon {
  /* 1 */
  margin: 0;
  /* 2 */
  border: none;
  /* 3 */
  border-radius: 0;
  /* 4 */
  overflow: visible;
  /* 5 */
  font: inherit;
  color: inherit;
  /* 6 */
  text-transform: none;
  /* 7. */
  padding: 0;
  background-color: transparent;
  /* 8 */
  display: inline-block;
  /* 9 */
  fill: currentcolor;
  /* 10 */
  line-height: 0;
  color: var(--color-mute);
}
/* Required for `button`. */
button.uk-icon:not(:disabled) {
  cursor: pointer;
}
/*
 * Remove the inner border and padding in Firefox.
 */
.uk-icon::-moz-focus-inner {
  border: 0;
  padding: 0;
}
/*
 * Set the fill and stroke color of all SVG elements to the current text color
 */
.uk-icon:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
  fill: currentcolor;
}
.uk-icon:not(.uk-preserve) [stroke*='#']:not(.uk-preserve) {
  stroke: currentcolor;
}
/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */
.uk-icon > * {
  transform: translate(0, 0);
}
/* Image modifier
 ========================================================================== */
/*
 * Display images in icon dimensions
 * 1. Required for `span` with background image
 * 2. Required for `image`
 */
.uk-icon-image {
  width: 20px;
  height: 20px;
  /* 1 */
  background-position: 50% 50%;
  background-repeat: no-repeat;
  background-size: contain;
  vertical-align: middle;
  /* 2 */
  object-fit: scale-down;
  max-width: none;
}
/* Style modifiers
 ========================================================================== */

/*
 * Button
 * 1. Center icon vertically and horizontally
 */
.uk-icon.uk-button {
  width: 36px;
  height: 36px;
  /* 1 */
  box-sizing: border-box;
  vertical-align: middle;
  /* 1 */
  align-items: center;
  display: inline-flex;
  justify-content: center;
  /* 1 */
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}


/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

.uk-border { border: solid 5px; }
.uk-border-small { border: solid 2px; }
.uk-border-medium { border: solid 8px; }
.uk-border-large { border: solid 10px; }
.uk-border-xlarge { border: solid 20px; }
.uk-border-2xlarge { border: solid 40px; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


        .uk-border-dark.uk-border { 
        /*  filter: drop-shadow(5px 5px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
        .uk-border-dark.uk-border-small { 
        /*  filter: drop-shadow(2px 2px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
        .uk-border-dark.uk-border-medium { 
        /*  filter: drop-shadow(8px 8px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
        .uk-border-dark.uk-border-large { 
        /*  filter: drop-shadow(10px 10px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
        .uk-border-dark.uk-border-xlarge { 
        /*  filter: drop-shadow(20px 20px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
        .uk-border-dark.uk-border-2xlarge { 
        /*  filter: drop-shadow(40px 40px 0px var(--color-secondary)); */
            border-color: var(--color-secondary) !important; 
        }
    

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


        .uk-border-light.uk-border { 
        /*  filter: drop-shadow(5px 5px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
        .uk-border-light.uk-border-small { 
        /*  filter: drop-shadow(2px 2px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
        .uk-border-light.uk-border-medium { 
        /*  filter: drop-shadow(8px 8px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
        .uk-border-light.uk-border-large { 
        /*  filter: drop-shadow(10px 10px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
        .uk-border-light.uk-border-xlarge { 
        /*  filter: drop-shadow(20px 20px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
        .uk-border-light.uk-border-2xlarge { 
        /*  filter: drop-shadow(40px 40px 0px var(--color-default)); */
            border-color: var(--color-default) !important; 
        }
    

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


            .uk-border-mute.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
            .uk-border-mute.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
            .uk-border-mute.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
            .uk-border-mute.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
            .uk-border-mute.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
            .uk-border-mute.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-mute)); */
                border-color: var(--color-mute) !important; 
            }
        
            .uk-border-danger.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
            .uk-border-danger.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
            .uk-border-danger.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
            .uk-border-danger.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
            .uk-border-danger.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
            .uk-border-danger.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-danger)); */
                border-color: var(--color-danger) !important; 
            }
        
            .uk-border-success.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
            .uk-border-success.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
            .uk-border-success.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
            .uk-border-success.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
            .uk-border-success.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
            .uk-border-success.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-success)); */
                border-color: var(--color-success) !important; 
            }
        
            .uk-border-default.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
            .uk-border-default.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
            .uk-border-default.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
            .uk-border-default.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
            .uk-border-default.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
            .uk-border-default.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-default)); */
                border-color: var(--color-default) !important; 
            }
        
            .uk-border-primary.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
            .uk-border-primary.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
            .uk-border-primary.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
            .uk-border-primary.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
            .uk-border-primary.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
            .uk-border-primary.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-primary)); */
                border-color: var(--color-primary) !important; 
            }
        
            .uk-border-warning.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
            .uk-border-warning.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
            .uk-border-warning.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
            .uk-border-warning.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
            .uk-border-warning.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
            .uk-border-warning.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-warning)); */
                border-color: var(--color-warning) !important; 
            }
        
            .uk-border-secondary.uk-border { 
            /*  filter: drop-shadow(5px 5px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
            .uk-border-secondary.uk-border-small { 
            /*  filter: drop-shadow(2px 2px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
            .uk-border-secondary.uk-border-medium { 
            /*  filter: drop-shadow(8px 8px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
            .uk-border-secondary.uk-border-large { 
            /*  filter: drop-shadow(10px 10px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
            .uk-border-secondary.uk-border-xlarge { 
            /*  filter: drop-shadow(20px 20px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
            .uk-border-secondary.uk-border-2xlarge { 
            /* filter: drop-shadow(40px 40px 0px var(--color-secondary)); */
                border-color: var(--color-secondary) !important; 
            }
        

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/*
 * Adopts `uk-icon`
 */
.uk-close {
  color: #999;
  transition: 0.1s ease-in-out;
  background-color: transparent;
  transition-property: color, opacity;
}
/* Hover */
.uk-close:hover {
  color: #666;
}


/*
 * Adopts `uk-icon`
 */
/* SVG
 ========================================================================== */
 .uk-spinner > * {
  animation: uk-spinner-rotate 1.4s linear infinite;
}
@keyframes uk-spinner-rotate {
  100% { transform: rotate(270deg); }
  0% { transform: rotate(0deg); }
}

/*
 * Circle
 */
 
.uk-spinner > * > * {
  animation: uk-spinner-dash 1.4s ease-in-out infinite;
  transform-origin: center;
  stroke-dasharray: 88px;
  stroke-linecap: round;
  stroke-dashoffset: 0;
  stroke-width: 5;
}

/*
 * Circle
 */
@keyframes uk-spinner-dash {
  0% { stroke-dashoffset: 88px; }
  50% {
    stroke-dashoffset: 22px;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 88px;
    transform: rotate(450deg);
  }
}

/*
* Color
*/

/* TODO: css compiled */

      .uk-spinner.uk-mute { color: var(--color-mute); }
    

      .uk-spinner.uk-danger { color: var(--color-danger); }
    

      .uk-spinner.uk-success { color: var(--color-success); }
    

      .uk-spinner.uk-default { color: var(--color-default); }
    

      .uk-spinner.uk-primary { color: var(--color-primary); }
    

      .uk-spinner.uk-warning { color: var(--color-warning); }
    

      .uk-spinner.uk-secondary { color: var(--color-secondary); }
    
/* TODO: css compiled */

/*
 * Addopts `uk-icon`
 */
.uk-totop {
  padding: 5px;
  color: #999;
  transition: color 0.1s ease-in-out;
}
/* Hover */
.uk-totop:hover {
  color: #666;
}
/* OnClick */
.uk-totop:active {
  color: #333;
}

/*
 * Addopts `uk-icon`
 */
.uk-marker {
  padding: 5px;
  color: #fff;
  background: #222;
  border-radius: 500px;
}
/* Hover */
.uk-marker:hover {
  color: #fff;
}

.uk-alert {
  padding: 15px 29px 15px 15px;
  background: #f8f8f8;
  margin-bottom: 20px;
  position: relative;
  color: #666;
}
/* Add margin if adjacent element */
* + .uk-alert {
  margin-top: 20px;
}
/*
 * Remove margin from the last-child
 */
.uk-alert > :last-child {
  margin-bottom: 0;
}
/* Close
 * Adopts `uk-close`
 ========================================================================== */
.uk-alert-close {
  position: absolute;
  top: 20px;
  right: 15px;
  color: inherit;
  opacity: 0.4;
}
/*
 * Remove margin from adjacent element
 */
.uk-alert-close:first-child + * {
  margin-top: 0;
}
/*
 * Hover
 */
.uk-alert-close:hover {
  color: inherit;
  opacity: 0.8;
}
/* Style modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-alert-mute {
        background: var(--color-mute);
        color: var(--color-default);
      }
    

      .uk-alert-danger {
        background: var(--color-danger);
        color: var(--color-default);
      }
    

      .uk-alert-success {
        background: var(--color-success);
        color: var(--color-default);
      }
    

      .uk-alert-default {
        background: var(--color-default);
        color: var(--color-secondary);
      }
    

      .uk-alert-primary {
        background: var(--color-primary);
        color: var(--color-default);
      }
    

      .uk-alert-warning {
        background: var(--color-warning);
        color: var(--color-default);
      }
    

      .uk-alert-secondary {
        background: var(--color-secondary);
        color: var(--color-default);
      }
    
/* TODO: css compiled */

/*
     * Content
     */
.uk-alert h1,
.uk-alert h2,
.uk-alert h3,
.uk-alert h4,
.uk-alert h5,
.uk-alert h6 {
  color: inherit;
}
.uk-alert a:not([class]) {
  color: inherit;
  text-decoration: underline;
}
.uk-alert a:not([class]):hover {
  color: inherit;
  text-decoration: underline;
}

.uk-placeholder {
  margin-bottom: 20px;
  padding: 30px 30px;
  background: transparent;
  border: 1px dashed #e5e5e5;
}
/* Add margin if adjacent element */
* + .uk-placeholder {
  margin-top: 20px;
}
/*
 * Remove margin from the last-child
 */
.uk-placeholder > :last-child {
  margin-bottom: 0;
}

/*
 * 1. Style
 * 2. Center child vertically and horizontally
 */
.uk-badge {
  height: 18px;
  padding: 0 5px;
  min-width: 18px;
  border-radius: 500px;
  vertical-align: middle;
  box-sizing: border-box;
  /* 1 */
  background: var(--color-secondary);
  color: var(--color-default);
  font-size: 11px;
  /* 2 */
  justify-content: center;
  display: inline-flex;
  align-items: center;
  line-height: 0;
}
/*
 * Required for `a`
 */
.uk-badge:hover {
  text-decoration: none;
}

/*
  badge color
*/

/* TODO: css compiled */

      .uk-badge.uk-mute{ 
        border: solid 1px var(--color-mute) !important; 
        color: var(--color-mute) !important;
        background: transparent !important;
      }
      .uk-badge.uk-mute.uk-enphasis{ 
        background: var(--color-mute) !important; 
        color: var(--color-secondary) !important; 
      }
    

      .uk-badge.uk-danger{ 
        border: solid 1px var(--color-danger) !important; 
        color: var(--color-danger) !important;
        background: transparent !important;
      }
      .uk-badge.uk-danger.uk-enphasis{ 
        background: var(--color-danger) !important; 
        color: var(--color-default) !important; 
      }
    

      .uk-badge.uk-success{ 
        border: solid 1px var(--color-success) !important; 
        color: var(--color-success) !important;
        background: transparent !important;
      }
      .uk-badge.uk-success.uk-enphasis{ 
        background: var(--color-success) !important; 
        color: var(--color-default) !important; 
      }
    

      .uk-badge.uk-default{ 
        border: solid 1px var(--color-default) !important; 
        color: var(--color-default) !important;
        background: transparent !important;
      }
      .uk-badge.uk-default.uk-enphasis{ 
        background: var(--color-default) !important; 
        color: var(--color-secondary) !important; 
      }
    

      .uk-badge.uk-primary{ 
        border: solid 1px var(--color-primary) !important; 
        color: var(--color-primary) !important;
        background: transparent !important;
      }
      .uk-badge.uk-primary.uk-enphasis{ 
        background: var(--color-primary) !important; 
        color: var(--color-default) !important; 
      }
    

      .uk-badge.uk-warning{ 
        border: solid 1px var(--color-warning) !important; 
        color: var(--color-warning) !important;
        background: transparent !important;
      }
      .uk-badge.uk-warning.uk-enphasis{ 
        background: var(--color-warning) !important; 
        color: var(--color-secondary) !important; 
      }
    

      .uk-badge.uk-secondary{ 
        border: solid 1px var(--color-secondary) !important; 
        color: var(--color-secondary) !important;
        background: transparent !important;
      }
      .uk-badge.uk-secondary.uk-enphasis{ 
        background: var(--color-secondary) !important; 
        color: var(--color-default) !important; 
      }
    
/* TODO: css compiled */

.uk-label {
  /*color: #fff;*/
  padding: 0 10px;
  line-height: 1.5;
  border-radius: 2px;
  white-space: nowrap;
  font-size: 0.875rem;
  display: inline-block;
  vertical-align: middle;
  text-transform: uppercase;
  /*background: var(--color-primary);*/
}
/* Color modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-label-mute {
        background-color: var(--color--mute);
        color: var(--color--secondary);
      }
    

      .uk-label-danger {
        background-color: var(--color--danger);
        color: var(--color--secondary);
      }
    

      .uk-label-success {
        background-color: var(--color--success);
        color: var(--color--secondary);
      }
    

      .uk-label-default {
        background-color: var(--color--default);
        color: var(--color--secondary);
      }
    

      .uk-label-primary {
        background-color: var(--color--primary);
        color: var(--color--secondary);
      }
    

      .uk-label-warning {
        background-color: var(--color--warning);
        color: var(--color--secondary);
      }
    

      .uk-label-secondary {
        background-color: var(--color--secondary);
        color: var(--color--default);
      }
    
/* TODO: css compiled */

.uk-overlay { padding: 30px 30px; }
/*
 * Remove margin from the last-child
 */
.uk-overlay > :last-child { margin-bottom: 0; }
/* Icon
 ========================================================================== */
/* Style modifiers
 ========================================================================== */
/*
 * Default
 */
.uk-overlay.uk-dark { background: var(--color-transparent-dark); }
.uk-overlay.uk-light { background: var(--color-transparent-light); }


            .uk-overlay.uk-default { background: var(--color-transparent-default); }
        

            .uk-overlay.uk-primary { background: var(--color-transparent-primary); }
        

            .uk-overlay.uk-secondary { background: var(--color-transparent-secondary); }
        

            .uk-overlay.uk-danger { background: var(--color-transparent-danger); }
        

            .uk-overlay.uk-mute { background: var(--color-transparent-mute); }
        

            .uk-overlay.uk-success { background: var(--color-transparent-success); }
        

            .uk-overlay.uk-warning { background: var(--color-transparent-warning); }
        

.uk-article {
  display: flow-root;
}
/*
 * Remove margin from the last-child
 */
.uk-article > :last-child {
  margin-bottom: 0;
}
/* Adjacent sibling
 ========================================================================== */
.uk-article + .uk-article {
  margin-top: 70px;
}
/* Title
 ========================================================================== */
.uk-article-title {
  font-size: 2.23125rem;
  line-height: 1.2;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-article-title {
    font-size: 2.625rem;
  }
}
/* Meta
 ========================================================================== */
.uk-article-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
.uk-article-meta a {
  color: #999;
}
.uk-article-meta a:hover {
  color: #666;
  text-decoration: none;
}
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

.uk-rounded { border-radius: 5px !important; }
.uk-rounded-small { border-radius: 2px !important; }
.uk-rounded-medium { border-radius: 8px !important; }
.uk-rounded-large { border-radius: 10px !important; }
.uk-rounded-xlarge { border-radius: 20px !important; }
.uk-rounded-2xlarge { border-radius: 40px !important; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


            .uk-rounded-remove-top {
                border-top-left-radius: initial !important;
                border-top-right-radius: initial !important;
            }
        
            .uk-rounded-remove-bottom {
                border-bottom-left-radius: initial !important;
                border-bottom-right-radius: initial !important;
            }
        

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


            .uk-rounded-remove-left {
                border-top-left-radius: initial !important;
                border-bottom-left-radius: initial !important;
            }
        
            .uk-rounded-remove-right {
                border-top-right-radius: initial !important;
                border-bottom-right-radius: initial !important;
            }
        

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


            .uk-rounded-remove-top-left {
                border-top-left-radius: initial !important;
            }
        
            .uk-rounded-remove-top-right {
                border-top-right-radius: initial !important;
            }
        
            .uk-rounded-remove-bottom-left {
                border-bottom-left-radius: initial !important;
            }
        
            .uk-rounded-remove-bottom-right {
                border-bottom-right-radius: initial !important;
            }
        

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/* Sections
 ========================================================================== */
.uk-comment-body {
  display: flow-root;
  word-wrap: break-word;
  overflow-wrap: break-word;
}
.uk-comment-header {
  margin-bottom: 20px;
  display: flow-root;
}
/*
 * Remove margin from the last-child
 */
.uk-comment-header > :last-child,
.uk-comment-body > :last-child {
  margin-bottom: 0;
}
/* Title
 ========================================================================== */
.uk-comment-title {
  font-size: 1.25rem;
  line-height: 1.4;
}
/* Meta
 ========================================================================== */
.uk-comment-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
/* Avatar
 ========================================================================== */
/* List
 ========================================================================== */
.uk-comment-list {
  padding: 0;
  list-style: none;
}
/* Adjacent siblings */
.uk-comment-list > :nth-child(n+2) {
  margin-top: 70px;
}
/*
 * Sublists
 * Note: General sibling selector allows reply block between comment and sublist
 */
.uk-comment-list .uk-comment ~ ul {
  margin: 70px 0 0 0;
  padding-left: 30px;
  list-style: none;
}
/* Tablet and bigger */
@media (min-width: 960px) {
  .uk-comment-list .uk-comment ~ ul {
    padding-left: 100px;
  }
}
/* Adjacent siblings */
.uk-comment-list .uk-comment ~ ul > :nth-child(n+2) {
  margin-top: 70px;
}
/* Style modifier
 ========================================================================== */
.uk-comment-primary {
  padding: 30px;
  background-color: #f8f8f8;
}

/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Reset `form`
 */
.uk-search {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  margin: 0;
}
/* Input
 ========================================================================== */
/*
 * Remove the inner padding and cancel buttons in Chrome on OS X and Safari on OS X.
 */
.uk-search-input::-webkit-search-cancel-button,
.uk-search-input::-webkit-search-decoration {
  -webkit-appearance: none;
}
/*
 * Removes placeholder transparency in Firefox.
 */
.uk-search-input::-moz-placeholder {
  opacity: 1;
}
/*
 * 1. Define consistent box sizing.
 * 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
 * 3. Remove `border-radius` in iOS.
 * 4. Change font properties to `inherit` in all browsers
 * 5. Show the overflow in Edge.
 * 6. Remove default style in iOS.
 * 7. Vertical alignment
 * 8. Take the full container width
 * 9. Style
 */
.uk-search-input {
  /* 1 */
  box-sizing: border-box;
  /* 2 */
  margin: 0;
  /* 3 */
  border-radius: 0;
  /* 4 */
  font: inherit;
  /* 5 */
  overflow: visible;
  /* 6 */
  -webkit-appearance: none;
  /* 7 */
  vertical-align: middle;
  /* 8 */
  width: 100%;
  /* 9 */
  border: none;
  color: #666;
}
.uk-search-input:focus {
  outline: none;
}
/* Placeholder */
.uk-search-input::placeholder {
  color: #999;
}
/* Icon (Adopts `uk-icon`)
 ========================================================================== */
/*
 * Position above input
 * 1. Set position
 * 2. Center icon vertically and horizontally
 * 3. Style
 */
.uk-search .uk-search-icon {
  /* 1 */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
  /* 3 */
  color: #999;
}
/*
 * Required for `a`.
 */
.uk-search .uk-search-icon:hover {
  color: #999;
}
/*
 * Make `input` element clickable through icon, e.g. if it's a `span`
 */
.uk-search .uk-search-icon:not(a):not(button):not(input) {
  pointer-events: none;
}
/*
 * Position modifier
 */
.uk-search .uk-search-icon-flip {
  right: 0;
  left: auto;
}
/* Default modifier
 ========================================================================== */
.uk-search-default {
  width: 240px;
}
/*
 * Input
 */
.uk-search-default .uk-search-input {
  height: 40px;
  padding-left: 10px;
  padding-right: 10px;
  background: transparent;
  border: 1px solid #e5e5e5;
}
/* Focus */
.uk-search-default .uk-search-input:focus {
  background-color: rgba(0, 0, 0, 0);
  border-color: var(--color-primary);
}
/*
 * Icon
 */
.uk-search-default .uk-search-icon {
  width: 40px;
}
.uk-search-default .uk-search-icon:not(.uk-search-icon-flip) ~ .uk-search-input {
  padding-left: 40px;
}
.uk-search-default .uk-search-icon-flip ~ .uk-search-input {
  padding-right: 40px;
}
/* Navbar modifier
 ========================================================================== */
.uk-search-navbar {
  width: 400px;
}
/*
 * Input
 */
.uk-search-navbar .uk-search-input {
  height: 40px;
  background: transparent;
  font-size: 1.5rem;
}
/* Focus */
/*
 * Icon
 */
.uk-search-navbar .uk-search-icon {
  width: 40px;
}
.uk-search-navbar .uk-search-icon:not(.uk-search-icon-flip) ~ .uk-search-input {
  padding-left: 40px;
}
.uk-search-navbar .uk-search-icon-flip ~ .uk-search-input {
  padding-right: 40px;
}
/* Large modifier
 ========================================================================== */
.uk-search-large {
  width: 500px;
}
/*
 * Input
 */
.uk-search-large .uk-search-input {
  height: 80px;
  background: transparent;
  font-size: 2.625rem;
}
/* Focus */
/*
 * Icon
 */
.uk-search-large .uk-search-icon {
  width: 80px;
}
.uk-search-large .uk-search-icon:not(.uk-search-icon-flip) ~ .uk-search-input {
  padding-left: 80px;
}
.uk-search-large .uk-search-icon-flip ~ .uk-search-input {
  padding-right: 80px;
}
/* Toggle
 ========================================================================== */
.uk-search-toggle {
  color: #999;
}
/* Hover */
.uk-search-toggle:hover {
  color: #666;
}

.uk-accordion {
  padding: 0;
  list-style: none;
}
/* Item
 ========================================================================== */
.uk-accordion > :nth-child(n+2) {
  margin-top: 20px;
}
/* Title
 ========================================================================== */
.uk-accordion-title {
  font-size: 1.25rem;
  line-height: 1.4;
  overflow: hidden;
  display: block;
  color: #333;
}
.uk-accordion-title::before {
  content: "";
  width: 1.4em;
  float: right;
  height: 1.4em;
  margin-left: 10px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%221%22%20height%3D%2213%22%20x%3D%226%22%20y%3D%220%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-open > .uk-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
/* Hover */
.uk-accordion-title:hover {
  color: #666;
  text-decoration: none;
}
/* Content
 ========================================================================== */
.uk-accordion-content {
  display: flow-root;
  margin-top: 20px;
}
/*
 * Remove margin from the last-child
 */
.uk-accordion-content > :last-child {
  margin-bottom: 0;
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Set a default width
 */
.uk-drop {
  /* 1 */
  display: none;
  /* 2 */
  z-index: 1020;
  position: absolute;
  --uk-position-offset: 20px;
  --uk-position-viewport-offset: 15px;
  /* 3 */
  box-sizing: border-box;
  width: 300px;
}
/* Show */
.uk-drop.uk-open {
  display: block;
}
/* Grid modifiers
 ========================================================================== */
.uk-drop-stack .uk-drop-grid > * {
  width: 100% !important;
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Set a default width
 * 4. Style
 */
.uk-dropdown {
  /* 1 */
  display: none;
  /* 2 */
  z-index: 1020;
  position: absolute;
  --uk-position-offset: 10px;
  --uk-position-viewport-offset: 15px;
  /* 3 */
  box-sizing: border-box;
  min-width: 200px;
  /* 4 */
  padding: 25px;
  background: #fff;
  color: #666;
  box-shadow: 0 5px 12px rgba(0, 0, 0, 0.15);
}
/* Show */
.uk-dropdown.uk-open {
  display: block;
}
/*
 * Remove margin from the last-child
 */
.uk-dropdown > :last-child {
  margin-bottom: 0;
}
/* Size modifier
 ========================================================================== */
.uk-dropdown-large {
  padding: 40px;
}
/* Nav
 * Adopts `uk-nav`
 ========================================================================== */
.uk-dropdown-nav {
  font-size: 0.875rem;
}
/*
 * Items
 */
.uk-dropdown-nav > li > a {
  color: #999;
}
/* Hover + Active */
.uk-dropdown-nav > li > a:hover,
.uk-dropdown-nav > li.uk-active > a {
  color: #666;
}
/*
 * Subtitle
 */
.uk-dropdown-nav .uk-nav-subtitle {
  font-size: 12px;
}
/*
 * Header
 */
.uk-dropdown-nav .uk-nav-header {
  color: #333;
}
/*
 * Divider
 */
.uk-dropdown-nav .uk-nav-divider {
  border-top: 1px solid #e5e5e5;
}
/*
 * Sublists
 */
.uk-dropdown-nav .uk-nav-sub a {
  color: #999;
}
.uk-dropdown-nav .uk-nav-sub a:hover,
.uk-dropdown-nav .uk-nav-sub li.uk-active > a {
  color: #666;
}
/* Grid modifiers
 ========================================================================== */
.uk-dropdown-stack .uk-dropdown-grid > * {
  width: 100% !important;
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Style
 */
.uk-dropbar {
  --uk-position-offset: 0;
  --uk-position-shift-offset: 0;
  --uk-position-viewport-offset: 0;
  /* 1 */
  display: none;
  /* 2 */
  position: absolute;
  z-index: 1020;
  /* 3 */
  padding: 25px 15px 25px 15px;
  box-sizing: border-box;
  background: #fff;
  color: #666;
}
/* Show */
.uk-dropbar.uk-open {
  display: block;
}
/*
 * Remove margin from the last-child
 */
.uk-dropbar > :last-child {
  margin-bottom: 0;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-dropbar {
    padding-left: 30px;
    padding-right: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-dropbar {
    padding-left: 40px;
    padding-right: 40px;
  }
}
/* Size modifier
 ========================================================================== */
.uk-dropbar-large {
  padding-top: 40px;
  padding-bottom: 40px;
}
/* Direction modifier
 ========================================================================== */
.uk-dropbar-top {
  box-shadow: 0 12px 7px -6px rgba(0, 0, 0, 0.05);
}
.uk-dropbar-bottom {
  box-shadow: 0 -12px 7px -6px rgba(0, 0, 0, 0.05);
}
.uk-dropbar-left {
  box-shadow: 12px 0 7px -6px rgba(0, 0, 0, 0.05);
}
.uk-dropbar-right {
  box-shadow: -12px 0 7px -6px rgba(0, 0, 0, 0.05);
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Allow scrolling for the modal dialog
 * 4. Horizontal padding
 * 5. Mask the background page
 * 6. Fade-in transition
 */
.uk-modal {
  /* 1 */
  display: none;
  position: fixed;
  /* 2 */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 1010;
  /* 3 */
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
  /* 4 */
  padding: 15px 15px;
  /* 5 */
  background: rgba(0, 0, 0, 0.6);
  /* 6 */
  opacity: 0;
  color: var(--color-secondary);
  transition: opacity 0.15s linear;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-modal {
    padding: 50px 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-modal {
    padding-left: 40px;
    padding-right: 40px;
  }
}
/*
 * Open
 */
.uk-modal.uk-open {
  opacity: 1;
}
/* Page
 ========================================================================== */
/*
 * Prevent scrollbars
 */
.uk-modal-page {
  overflow: hidden;
}
/* Dialog
 ========================================================================== */
/*
 * 1. Create position context for spinner and close button
 * 2. Dimensions
 * 3. `!important` is needed to overwrite `uk-width-auto`. See `#modal-media-image` in tests
 * 4. Style
 * 5. Slide-in transition
 */
.uk-modal-dialog {
  /* 1 */
  position: relative;
  /* 2 */
  box-sizing: border-box;
  margin: 0 auto;
  width: 600px;
  /* 3 */
  max-width: 100% !important;
  background: var(--color-default);
  /* 5 */
  opacity: 0;
  transition: 0.3s linear;
  transform: translateY(-100px);
  transition-property: opacity, transform;
}
/*
 * Open
 */
.uk-open > .uk-modal-dialog {
  opacity: 1;
  transform: translateY(0);
}
/* Size modifier
 ========================================================================== */
/*
 * Container size
 * Take the same size as the Container component
 */
.uk-modal-container .uk-modal-dialog {
  width: 1200px;
}
/*
 * Full size
 * 1. Remove padding and background from modal
 * 2. Reset all default declarations from modal dialog
 */
/* 1 */
.uk-modal-full {
  padding: 0;
  background: none;
}
/* 2 */
.uk-modal-full .uk-modal-dialog {
  margin: 0;
  width: 100%;
  max-width: 100%;
  transform: translateY(0);
}
/* Sections
 ========================================================================== */
.uk-modal-body {
  display: flow-root;
  padding: 20px 20px;
}
.uk-modal-header {
  display: flow-root;
  padding: 10px 20px;
  background: var(--color-default);
  border-bottom: 1px solid var(--color-secondary-click);
}
.uk-modal-footer {
  display: flow-root;
  padding: 10px 20px;
  background: var(--color-default);
  border-top: 1px solid var(--color-secondary-click);
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-modal-body {
    padding: 30px 30px;
  }
  .uk-modal-header {
    padding: 15px 30px;
  }
  .uk-modal-footer {
    padding: 15px 30px;
  }
}
/*
 * Remove margin from the last-child
 */
.uk-modal-body > :last-child,
.uk-modal-header > :last-child,
.uk-modal-footer > :last-child {
  margin-bottom: 0;
}
/* Title
 ========================================================================== */
.uk-modal-title {
  font-size: 2rem;
  line-height: 1.3;
}
/* Close
 * Adopts `uk-close`
 ========================================================================== */
[class*='uk-modal-close-'] {
  position: absolute;
  z-index: 1010;
  top: 10px;
  right: 10px;
  padding: 5px;
}
/*
 * Remove margin from adjacent element
 */
[class*='uk-modal-close-']:first-child + * {
  margin-top: 0;
}
/*
 * Hover
 */
/*
 * Default
 */
/*
 * Outside
 * 1. Prevent scrollbar on small devices
 */
.uk-modal-close-outside {
  top: 0;
  /* 1 */
  right: -5px;
  color: #ffffff;
  transform: translate(0, -100%);
}
.uk-modal-close-outside:hover {
  color: #fff;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  /* 1 */
  .uk-modal-close-outside {
    right: 0;
    transform: translate(100%, -100%);
  }
}
/*
 * Full
 */
.uk-modal-close-full {
  top: 0;
  right: 0;
  padding: 20px;
  background: #fff;
}

/* COLOR =================================================================== */

/* TODO: css compiled */

      .uk-modal.uk-mute>*{ 
        background: var(--color-mute-click); 
      }
      .uk-modal.uk-mute *{
        color: var(--color-secondary);
      }
    

      .uk-modal.uk-danger>*{ 
        background: var(--color-danger-click); 
      }
      .uk-modal.uk-danger *{
        color: var(--color-default);
      }
    

      .uk-modal.uk-success>*{ 
        background: var(--color-success-click); 
      }
      .uk-modal.uk-success *{
        color: var(--color-default);
      }
    

      .uk-modal.uk-default>*{ 
        background: var(--color-default-click); 
      }
      .uk-modal.uk-default *{
        color: var(--color-secondary);
      }
    

      .uk-modal.uk-primary>*{ 
        background: var(--color-primary-click); 
      }
      .uk-modal.uk-primary *{
        color: var(--color-default);
      }
    

      .uk-modal.uk-warning>*{ 
        background: var(--color-warning-click); 
      }
      .uk-modal.uk-warning *{
        color: var(--color-secondary);
      }
    

      .uk-modal.uk-secondary>*{ 
        background: var(--color-secondary-click); 
      }
      .uk-modal.uk-secondary *{
        color: var(--color-default);
      }
    
/* TODO: css compiled */

/*
 * 1. Prevent tab highlighting on iOS.
 */
.uk-slideshow {
  /* 1 */
  -webkit-tap-highlight-color: transparent;
}
/* Items
 ========================================================================== */
/*
 * 1. Create position and stacking context
 * 2. Reset list
 * 3. Clip child elements
 * 4. Prevent displaying the callout information on iOS.
 * 5. Disable horizontal panning gestures
 */
.uk-slideshow-items {
  /* 1 */
  position: relative;
  z-index: 0;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  overflow: hidden;
  /* 4 */
  -webkit-touch-callout: none;
  /* 5 */
  touch-action: pan-y;
}
/* Item
 ========================================================================== */
/*
 * 1. Position items above each other
 * 2. Take the full width
 * 3. Clip child elements, e.g. for `uk-cover`
 * 4. Optimize animation
 */
.uk-slideshow-items > * {
  /* 1 */
  position: absolute;
  top: 0;
  left: 0;
  /* 2 */
  right: 0;
  bottom: 0;
  /* 3 */
  overflow: hidden;
  /* 4 */
  will-change: transform, opacity;
}
/*
 * Hide not active items
 */
.uk-slideshow-items > :not(.uk-active) {
  display: none;
}

/*
 * 1. Prevent tab highlighting on iOS.
 */
.uk-slider {
  /* 1 */
  -webkit-tap-highlight-color: transparent;
}
/* Container
 ========================================================================== */
/*
 * Clip child elements
 */
.uk-slider-container {
  overflow: hidden;
}
/*
 * Widen container to prevent box-shadows from clipping, `large-box-shadow`
 */
.uk-slider-container-offset {
  margin: -11px -25px -39px -25px;
  padding: 11px 25px 39px 25px;
}
/* Items
 ========================================================================== */
/*
 * 1. Optimize animation
 * 2. Create a containing block. In Safari it's neither created by `transform` nor `will-change`.
 * 3. Disable horizontal panning gestures
 */
.uk-slider-items {
  /* 1 */
  will-change: transform;
  /* 2 */
  position: relative;
  /* 3 */
  touch-action: pan-y;
}
/*
 * 1. Reset list style without interfering with grid
 * 2. Prevent displaying the callout information on iOS.
 */
.uk-slider-items:not(.uk-grid) {
  display: flex;
  /* 1 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 2 */
  -webkit-touch-callout: none;
}
.uk-slider-items.uk-grid {
  flex-wrap: nowrap;
}
/* Item
 ========================================================================== */
/*
 * 1. Let items take content dimensions (0 0 auto)
 *    `max-width` needed to keep image responsiveness and prevent content overflow
 * 3. Create position context
 */
.uk-slider-items > * {
  /* 1 */
  flex: none;
  max-width: 100%;
  /* 3 */
  position: relative;
}

/*
 * 1. Create position context so it's t the same like when fixed.
 * 2. More robust if padding and border are used and the sticky height is transitioned
 */
.uk-sticky {
  /* 1 */
  position: relative;
  /* 2 */
  box-sizing: border-box;
}
/*
 * 1. Force new layer to resolve frame rate issues on devices with lower frame rates
 */
.uk-sticky-fixed {
  z-index: 980;
  margin: 0 !important;
  /* 1 */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
}
/*
 * Faster animations
 */
.uk-sticky[class*='uk-animation-'] {
  animation-duration: 0.2s;
}
.uk-sticky.uk-animation-reverse {
  animation-duration: 0.2s;
}
/*
 * Placeholder
 * Make content clickable for sticky cover and reveal effects
 */
.uk-sticky-placeholder {
  pointer-events: none;
}
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

.uk-shadow { box-shadow: 0 5px 8px var( --color-dark ) !important; }
.uk-shadow-small { box-shadow: 0 2px 8px var( --color-dark ) !important; }
.uk-shadow-large { box-shadow: 0 15px 8px var( --color-dark ) !important; }
.uk-shadow-medium { box-shadow: 0 10px 8px var( --color-dark ) !important; }
.uk-shadow-xlarge { box-shadow: 0 20px 8px var( --color-dark ) !important; }
.uk-shadow-2xlarge { box-shadow: 0 40px 8px var( --color-dark ) !important; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

.uk-shadow-light { box-shadow: 0 5px 8px var( --color-light ) !important; }
.uk-shadow-light-small { box-shadow: 0 2px 8px var( --color-light ) !important; }
.uk-shadow-light-large { box-shadow: 0 15px 8px var( --color-light ) !important; }
.uk-shadow-light-medium { box-shadow: 0 10px 8px var( --color-light ) !important; }
.uk-shadow-light-xlarge { box-shadow: 0 20px 8px var( --color-light ) !important; }
.uk-shadow-light-2xlarge { box-shadow: 0 40px 8px var( --color-light ) !important; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


            .uk-shadow-default { box-shadow: 0 5px 8px var( --color-default ) !important; }
            .uk-shadow-default-small { box-shadow: 0 2px 8px var( --color-default ) !important; }
            .uk-shadow-default-large { box-shadow: 0 15px 8px var( --color-default ) !important; }
            .uk-shadow-default-medium { box-shadow: 0 10px 8px var( --color-default ) !important; }
            .uk-shadow-default-xlarge { box-shadow: 0 20px 8px var( --color-default ) !important; }
            .uk-shadow-default-2xlarge { box-shadow: 0 40px 8px var( --color-default ) !important; }
        

            .uk-shadow-primary { box-shadow: 0 5px 8px var( --color-primary ) !important; }
            .uk-shadow-primary-small { box-shadow: 0 2px 8px var( --color-primary ) !important; }
            .uk-shadow-primary-large { box-shadow: 0 15px 8px var( --color-primary ) !important; }
            .uk-shadow-primary-medium { box-shadow: 0 10px 8px var( --color-primary ) !important; }
            .uk-shadow-primary-xlarge { box-shadow: 0 20px 8px var( --color-primary ) !important; }
            .uk-shadow-primary-2xlarge { box-shadow: 0 40px 8px var( --color-primary ) !important; }
        

            .uk-shadow-secondary { box-shadow: 0 5px 8px var( --color-secondary ) !important; }
            .uk-shadow-secondary-small { box-shadow: 0 2px 8px var( --color-secondary ) !important; }
            .uk-shadow-secondary-large { box-shadow: 0 15px 8px var( --color-secondary ) !important; }
            .uk-shadow-secondary-medium { box-shadow: 0 10px 8px var( --color-secondary ) !important; }
            .uk-shadow-secondary-xlarge { box-shadow: 0 20px 8px var( --color-secondary ) !important; }
            .uk-shadow-secondary-2xlarge { box-shadow: 0 40px 8px var( --color-secondary ) !important; }
        

            .uk-shadow-danger { box-shadow: 0 5px 8px var( --color-danger ) !important; }
            .uk-shadow-danger-small { box-shadow: 0 2px 8px var( --color-danger ) !important; }
            .uk-shadow-danger-large { box-shadow: 0 15px 8px var( --color-danger ) !important; }
            .uk-shadow-danger-medium { box-shadow: 0 10px 8px var( --color-danger ) !important; }
            .uk-shadow-danger-xlarge { box-shadow: 0 20px 8px var( --color-danger ) !important; }
            .uk-shadow-danger-2xlarge { box-shadow: 0 40px 8px var( --color-danger ) !important; }
        

            .uk-shadow-mute { box-shadow: 0 5px 8px var( --color-mute ) !important; }
            .uk-shadow-mute-small { box-shadow: 0 2px 8px var( --color-mute ) !important; }
            .uk-shadow-mute-large { box-shadow: 0 15px 8px var( --color-mute ) !important; }
            .uk-shadow-mute-medium { box-shadow: 0 10px 8px var( --color-mute ) !important; }
            .uk-shadow-mute-xlarge { box-shadow: 0 20px 8px var( --color-mute ) !important; }
            .uk-shadow-mute-2xlarge { box-shadow: 0 40px 8px var( --color-mute ) !important; }
        

            .uk-shadow-success { box-shadow: 0 5px 8px var( --color-success ) !important; }
            .uk-shadow-success-small { box-shadow: 0 2px 8px var( --color-success ) !important; }
            .uk-shadow-success-large { box-shadow: 0 15px 8px var( --color-success ) !important; }
            .uk-shadow-success-medium { box-shadow: 0 10px 8px var( --color-success ) !important; }
            .uk-shadow-success-xlarge { box-shadow: 0 20px 8px var( --color-success ) !important; }
            .uk-shadow-success-2xlarge { box-shadow: 0 40px 8px var( --color-success ) !important; }
        

            .uk-shadow-warning { box-shadow: 0 5px 8px var( --color-warning ) !important; }
            .uk-shadow-warning-small { box-shadow: 0 2px 8px var( --color-warning ) !important; }
            .uk-shadow-warning-large { box-shadow: 0 15px 8px var( --color-warning ) !important; }
            .uk-shadow-warning-medium { box-shadow: 0 10px 8px var( --color-warning ) !important; }
            .uk-shadow-warning-xlarge { box-shadow: 0 20px 8px var( --color-warning ) !important; }
            .uk-shadow-warning-2xlarge { box-shadow: 0 40px 8px var( --color-warning ) !important; }
        

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
/*
 * 1. Hide by default
 * 2. Set position
 */
.uk-offcanvas {
  /* 1 */
  display: none;
  /* 2 */
  top: 0;
  left: 0;
  bottom: 0;
  z-index: 1000;
  position: fixed;
}
/*
 * Flip modifier
 */
.uk-offcanvas-flip .uk-offcanvas {
  right: 0; left: auto;
}
/* Bar
 ========================================================================== */
/*
 * 1. Set position
 * 2. Size and style
 * 3. Allow scrolling
 */
.uk-offcanvas-bar {
  /* 1 */
  top: 0;
  bottom: 0;
  left: -270px;
  position: absolute;
  /* 2 */
  width: 270px;
  padding: 20px 20px;
  box-sizing: border-box;
  background: var(--color-default);
  /* 3 */
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}
.uk-offcanvas-bar *{
  color: var(--color-secondary)!important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-offcanvas-bar {
    left: -350px;
    width: 350px;
    padding: 30px 30px;
  }
}
/* Flip modifier */
.uk-offcanvas-flip .uk-offcanvas-bar {
  left: auto;
  right: -270px;
}
/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .uk-offcanvas-flip .uk-offcanvas-bar {
    right: -350px;
  }
}
/*
 * Open
 */
.uk-open > .uk-offcanvas-bar {
  left: 0;
}
.uk-offcanvas-flip .uk-open > .uk-offcanvas-bar {
  left: auto;
  right: 0;
}
/*
 * Slide Animation (Used in slide and push mode)
 */
.uk-offcanvas-bar-animation {
  transition: left 0.3s ease-out;
}
.uk-offcanvas-flip .uk-offcanvas-bar-animation {
  transition-property: right;
}
/*
 * Reveal Animation
 * 1. Set position
 * 2. Clip the bar
 * 3. Animation
 * 4. Reset position
 */
.uk-offcanvas-reveal {
  /* 1 */
  top: 0;
  left: 0;
  bottom: 0;
  /* 2 */
  width: 0;
  overflow: hidden;
  /* 3 */
  position: absolute;
  transition: width 0.3s ease-out;
}
.uk-offcanvas-reveal .uk-offcanvas-bar {
  /* 4 */
  left: 0;
}
.uk-offcanvas-flip .uk-offcanvas-reveal .uk-offcanvas-bar {
  /* 4 */
  left: auto;
  right: 0;
}
.uk-open > .uk-offcanvas-reveal {
  width: 270px;
}
/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .uk-open > .uk-offcanvas-reveal {
    width: 350px;
  }
}
/*
 * Flip modifier
 */
.uk-offcanvas-flip .uk-offcanvas-reveal {
  right: 0; left: auto;
}
/* Close
 * Adopts `uk-close`
 ========================================================================== */
.uk-offcanvas-close {
  position: absolute;
  z-index: 1000;
  top: 5px;
  right: 5px;
  padding: 5px;
}
/* Tablet landscape and bigger */
@media (min-width: 640px) {
  .uk-offcanvas-close {
    top: 10px;
    right: 10px;
  }
}
/*
 * Remove margin from adjacent element
 */
.uk-offcanvas-close:first-child + * {
  margin-top: 0;
}
/* Overlay
 ========================================================================== */
/*
 * Overlay the whole page. Needed for the `::before`
 * 1. Using `100vw` so no modification is needed when off-canvas is flipped
 * 2. Allow for closing with swipe gesture on devices with pointer events.
 */
.uk-offcanvas-overlay {
  /* 1 */
  width: 100vw;
  /* 2 */
  touch-action: none;
}
/*
 * 1. Mask the whole page
 * 2. Fade-in transition
 */
.uk-offcanvas-overlay::before {
  /* 1 */
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  content: "";
  position: absolute;
  background: rgba(0, 0, 0, 0.1);
  /* 2 */
  opacity: 0;
  transition: opacity 0.15s linear;
}
.uk-offcanvas-overlay.uk-open::before {
  opacity: 1;
}
/* Prevent scrolling
 ========================================================================== */
/*
 * Prevent horizontal scrollbar when the content is slide-out
 * Has to be on the `html` element too to make it work on the `body`
 */
.uk-offcanvas-page,
.uk-offcanvas-container {
  overflow-x: hidden;
}
/* Container
 ========================================================================== */
/*
 * Prepare slide-out animation (Used in reveal and push mode)
 * Using `position: left` instead of `transform` because position `fixed` elements like sticky navbars
 * lose their fixed state and behaves like `absolute` within a transformed container
 * 1. Provide a fixed width and prevent shrinking
 */
.uk-offcanvas-container {
  position: relative;
  left: 0;
  transition: left 0.3s ease-out;
  /* 1 */
  box-sizing: border-box;
  width: 100%;
}
/*
 * Activate slide-out animation
 */
:not(.uk-offcanvas-flip).uk-offcanvas-container-animation {
  left: 270px;
}
.uk-offcanvas-flip.uk-offcanvas-container-animation {
  left: -270px;
}
/* Tablet landscape and bigger */
@media (min-width: 640px) {
  :not(.uk-offcanvas-flip).uk-offcanvas-container-animation {
    left: 350px;
  }
  .uk-offcanvas-flip.uk-offcanvas-container-animation {
    left: -350px;
  }
}

/* COLOR =================================================================== */

/* TODO: css compiled */

      .uk-offcanvas.uk-mute>*{ 
        background: var(--color-mute-click); 
      }
      .uk-offcanvas.uk-mute *{
        color: var(--color-secondary)!important;
      }
    

      .uk-offcanvas.uk-danger>*{ 
        background: var(--color-danger-click); 
      }
      .uk-offcanvas.uk-danger *{
        color: var(--color-default)!important;
      }
    

      .uk-offcanvas.uk-success>*{ 
        background: var(--color-success-click); 
      }
      .uk-offcanvas.uk-success *{
        color: var(--color-default)!important;
      }
    

      .uk-offcanvas.uk-default>*{ 
        background: var(--color-default-click); 
      }
      .uk-offcanvas.uk-default *{
        color: var(--color-secondary)!important;
      }
    

      .uk-offcanvas.uk-primary>*{ 
        background: var(--color-primary-click); 
      }
      .uk-offcanvas.uk-primary *{
        color: var(--color-default)!important;
      }
    

      .uk-offcanvas.uk-warning>*{ 
        background: var(--color-warning-click); 
      }
      .uk-offcanvas.uk-warning *{
        color: var(--color-secondary)!important;
      }
    

      .uk-offcanvas.uk-secondary>*{ 
        background: var(--color-secondary-click); 
      }
      .uk-offcanvas.uk-secondary *{
        color: var(--color-default)!important;
      }
    
/* TODO: css compiled */

/*
 * Reset list
 */
.uk-switcher {
  margin: 0;
  padding: 0;
  list-style: none;
}
/* Items
 ========================================================================== */
/*
 * Hide not active items
 */
.uk-switcher > :not(.uk-active) {
  display: none;
}
/*
 * Remove margin from the last-child
 */
.uk-switcher > * > :last-child {
  margin-bottom: 0;
}

.uk-leader {
  overflow: hidden;
}
/*
 * 1. Place element in text flow
 * 2. Never break into a new line
 * 3. Get a string back with as many repeating characters to fill the container
 * 4. Prevent wrapping. Overflowing characters will be clipped by the container
 */
.uk-leader-fill::after {
  /* 1 */
  display: inline-block;
  margin-left: 15px;
  /* 2 */
  width: 0;
  /* 3 */
  content: attr(data-fill);
  /* 4 */
  white-space: nowrap;
}
/*
 * Hide if media does not match
 */
.uk-leader-fill.uk-leader-hide::after {
  display: none;
}
/*
 * Pass fill character to JS
 */
:root {
  --uk-leader-fill-content: .;
}

/*
 * 1. Set position
 * 2. Dimensions
 */
.uk-notification {
  /* 1 */
  position: fixed;
  top: 10px;
  left: 10px;
  z-index: 1040;
  /* 2 */
  box-sizing: border-box;
  width: 350px;
}
/* Position modifiers
========================================================================== */
.uk-notification-top-right,
.uk-notification-bottom-right {
  left: auto;
  right: 10px;
}
.uk-notification-top-center,
.uk-notification-bottom-center {
  left: 50%;
  margin-left: -175px;
}
.uk-notification-bottom-left,
.uk-notification-bottom-right,
.uk-notification-bottom-center {
  top: auto;
  bottom: 10px;
}
/* Responsiveness
========================================================================== */
/* Phones portrait and smaller */
@media (max-width: 639px) {
  .uk-notification {
    left: 10px;
    right: 10px;
    width: auto;
    margin: 0;
  }
}
/* Message
========================================================================== */
.uk-notification-message {
  padding: 15px;
  cursor: pointer;
  line-height: 1.4;
  font-size: 1.25rem;
  position: relative;
  border-radius: 10px;
  color: var(--color-secondary);
  background: var(--color-default);
}
* + .uk-notification-message {
  margin-top: 10px;
}
/* Close
 * Adopts `uk-close`
 ========================================================================== */
.uk-notification-close {
  display: none;
  position: absolute;
  top: 20px;
  right: 15px;
}
.uk-notification-message:hover .uk-notification-close {
  display: block;
}
/* Style modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-notification-message-mute {
        background-color: var(--color-mute);
        color: var(--color-default);
      }
    

      .uk-notification-message-danger {
        background-color: var(--color-danger);
        color: var(--color-default);
      }
    

      .uk-notification-message-success {
        background-color: var(--color-success);
        color: var(--color-default);
      }
    

      .uk-notification-message-default {
        background-color: var(--color-default);
        color: var(--color-secondary);
      }
    

      .uk-notification-message-primary {
        background-color: var(--color-primary);
        color: var(--color-default);
      }
    

      .uk-notification-message-warning {
        background-color: var(--color-warning);
        color: var(--color-default);
      }
    

      .uk-notification-message-secondary {
        background-color: var(--color-secondary);
        color: var(--color-default);
      }
    
/* TODO: css compiled */

/*
 * 1. Hide by default
 * 2. Position
 * 3. Remove tooltip from document flow to keep the UIkit container from changing its size when injected into the document initially
 * 4. Dimensions
 * 5. Style
 */
.uk-tooltip {
  /* 1 */
  display: none;
  /* 2 */
  z-index: 1030;
  position: absolute;
  --uk-position-offset: 10px;
  --uk-position-viewport-offset: 10;
  /* 3 */
  top: 0;
  /* 4 */
  box-sizing: border-box;
  max-width: 200px;
  padding: 3px 6px;
  /* 5 */
  background: #666;
  border-radius: 2px;
  font-size: 12px;
  color: #fff;
}
/* Show */
.uk-tooltip.uk-active {
  display: block;
}

.uk-sortable {
  position: relative;
}
/*
 * Remove margin from the last-child
 */
.uk-sortable > :last-child {
  margin-bottom: 0;
}
/* Drag
 ========================================================================== */
.uk-sortable-drag {
  position: fixed !important;
  z-index: 1050 !important;
  pointer-events: none;
}
/* Placeholder
 ========================================================================== */
.uk-sortable-placeholder {
  opacity: 0;
  pointer-events: none;
}
/* Empty modifier
 ========================================================================== */
.uk-sortable-empty {
  min-height: 50px;
}
/* Handle
 ========================================================================== */
/* Hover */
.uk-sortable-handle:hover {
  cursor: move;
}

/* Item
 ========================================================================== */
/* Number
 ========================================================================== */
/*
 * 1. Make numbers all of the same size to prevent jumping. Must be supported by the font.
 * 2. Style
 */
.uk-countdown-number {
  /* 1 */
  font-variant-numeric: tabular-nums;
  /* 2 */
  font-size: 2rem;
  line-height: 0.8;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-countdown-number {
    font-size: 4rem;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-countdown-number {
    font-size: 6rem;
  }
}
/* Separator
 ========================================================================== */
.uk-countdown-separator {
  font-size: 1rem;
  line-height: 1.6;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-countdown-separator {
    font-size: 2rem;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-countdown-separator {
    font-size: 3rem;
  }
}
/* Label
 ========================================================================== */

/*
 * 1. Allow cells to wrap into the next line
 * 2. Reset list
 */
.uk-grid {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
}
/*
 * Grid cell
 * Note: Space is allocated solely based on content dimensions, but shrinks: 0 1 auto
 * Reset margin for e.g. paragraphs
 */
.uk-grid > * {
  margin: 0;
}
/*
 * Remove margin from the last-child
 */
.uk-grid > * > :last-child {
  margin-bottom: 0;
}
/* Gutter
 ========================================================================== */
/*
 * Default
 */
/* Horizontal */
.uk-grid {
  margin-left: -30px;
}
.uk-grid > * {
  padding-left: 30px;
}
/* Vertical */
.uk-grid + .uk-grid,
.uk-grid > .uk-grid-margin,
* + .uk-grid-margin {
  margin-top: 30px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .uk-grid {
    margin-left: -40px;
  }
  .uk-grid > * {
    padding-left: 40px;
  }
  /* Vertical */
  .uk-grid + .uk-grid,
  .uk-grid > .uk-grid-margin,
  * + .uk-grid-margin {
    margin-top: 40px;
  }
}
/*
 * Small
 */
/* Horizontal */
.uk-grid-small,
.uk-grid-column-small {
  margin-left: -15px;
}
.uk-grid-small > *,
.uk-grid-column-small > * {
  padding-left: 15px;
}
/* Vertical */
.uk-grid + .uk-grid-small,
.uk-grid + .uk-grid-row-small,
.uk-grid-small > .uk-grid-margin,
.uk-grid-row-small > .uk-grid-margin,
* + .uk-grid-margin-small {
  margin-top: 15px;
}
/*
 * Medium
 */
/* Horizontal */
.uk-grid-medium,
.uk-grid-column-medium {
  margin-left: -30px;
}
.uk-grid-medium > *,
.uk-grid-column-medium > * {
  padding-left: 30px;
}
/* Vertical */
.uk-grid + .uk-grid-medium,
.uk-grid + .uk-grid-row-medium,
.uk-grid-medium > .uk-grid-margin,
.uk-grid-row-medium > .uk-grid-margin,
* + .uk-grid-margin-medium {
  margin-top: 30px;
}
/*
 * Large
 */
/* Horizontal */
.uk-grid-large,
.uk-grid-column-large {
  margin-left: -40px;
}
.uk-grid-large > *,
.uk-grid-column-large > * {
  padding-left: 40px;
}
/* Vertical */
.uk-grid + .uk-grid-large,
.uk-grid + .uk-grid-row-large,
.uk-grid-large > .uk-grid-margin,
.uk-grid-row-large > .uk-grid-margin,
* + .uk-grid-margin-large {
  margin-top: 40px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .uk-grid-large,
  .uk-grid-column-large {
    margin-left: -70px;
  }
  .uk-grid-large > *,
  .uk-grid-column-large > * {
    padding-left: 70px;
  }
  /* Vertical */
  .uk-grid + .uk-grid-large,
  .uk-grid + .uk-grid-row-large,
  .uk-grid-large > .uk-grid-margin,
  .uk-grid-row-large > .uk-grid-margin,
  * + .uk-grid-margin-large {
    margin-top: 70px;
  }
}
/*
 * Collapse
 */
/* Horizontal */
.uk-grid-collapse,
.uk-grid-column-collapse {
  margin-left: 0;
}
.uk-grid-collapse > *,
.uk-grid-column-collapse > * {
  padding-left: 0;
}
/* Vertical */
.uk-grid + .uk-grid-collapse,
.uk-grid + .uk-grid-row-collapse,
.uk-grid-collapse > .uk-grid-margin,
.uk-grid-row-collapse > .uk-grid-margin {
  margin-top: 0;
}
/* Divider
 ========================================================================== */
.uk-grid-divider > * {
  position: relative;
}
.uk-grid-divider > :not(.uk-first-column)::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  border-left: 1px solid #e5e5e5;
}
/* Vertical */
.uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  border-top: 1px solid #e5e5e5;
}
/*
 * Default
 */
/* Horizontal */
.uk-grid-divider {
  margin-left: -60px;
}
.uk-grid-divider > * {
  padding-left: 60px;
}
.uk-grid-divider > :not(.uk-first-column)::before {
  left: 30px;
}
/* Vertical */
.uk-grid-divider.uk-grid-stack > .uk-grid-margin {
  margin-top: 60px;
}
.uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
  top: -30px;
  left: 60px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .uk-grid-divider {
    margin-left: -80px;
  }
  .uk-grid-divider > * {
    padding-left: 80px;
  }
  .uk-grid-divider > :not(.uk-first-column)::before {
    left: 40px;
  }
  /* Vertical */
  .uk-grid-divider.uk-grid-stack > .uk-grid-margin {
    margin-top: 80px;
  }
  .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
    top: -40px;
    left: 80px;
  }
}
/*
 * Small
 */
/* Horizontal */
.uk-grid-divider.uk-grid-small,
.uk-grid-divider.uk-grid-column-small {
  margin-left: -30px;
}
.uk-grid-divider.uk-grid-small > *,
.uk-grid-divider.uk-grid-column-small > * {
  padding-left: 30px;
}
.uk-grid-divider.uk-grid-small > :not(.uk-first-column)::before,
.uk-grid-divider.uk-grid-column-small > :not(.uk-first-column)::before {
  left: 15px;
}
/* Vertical */
.uk-grid-divider.uk-grid-small.uk-grid-stack > .uk-grid-margin,
.uk-grid-divider.uk-grid-row-small.uk-grid-stack > .uk-grid-margin {
  margin-top: 30px;
}
.uk-grid-divider.uk-grid-small.uk-grid-stack > .uk-grid-margin::before {
  top: -15px;
  left: 30px;
}
.uk-grid-divider.uk-grid-row-small.uk-grid-stack > .uk-grid-margin::before {
  top: -15px;
}
.uk-grid-divider.uk-grid-column-small.uk-grid-stack > .uk-grid-margin::before {
  left: 30px;
}
/*
 * Medium
 */
/* Horizontal */
.uk-grid-divider.uk-grid-medium,
.uk-grid-divider.uk-grid-column-medium {
  margin-left: -60px;
}
.uk-grid-divider.uk-grid-medium > *,
.uk-grid-divider.uk-grid-column-medium > * {
  padding-left: 60px;
}
.uk-grid-divider.uk-grid-medium > :not(.uk-first-column)::before,
.uk-grid-divider.uk-grid-column-medium > :not(.uk-first-column)::before {
  left: 30px;
}
/* Vertical */
.uk-grid-divider.uk-grid-medium.uk-grid-stack > .uk-grid-margin,
.uk-grid-divider.uk-grid-row-medium.uk-grid-stack > .uk-grid-margin {
  margin-top: 60px;
}
.uk-grid-divider.uk-grid-medium.uk-grid-stack > .uk-grid-margin::before {
  top: -30px;
  left: 60px;
}
.uk-grid-divider.uk-grid-row-medium.uk-grid-stack > .uk-grid-margin::before {
  top: -30px;
}
.uk-grid-divider.uk-grid-column-medium.uk-grid-stack > .uk-grid-margin::before {
  left: 60px;
}
/*
 * Large
 */
/* Horizontal */
.uk-grid-divider.uk-grid-large,
.uk-grid-divider.uk-grid-column-large {
  margin-left: -80px;
}
.uk-grid-divider.uk-grid-large > *,
.uk-grid-divider.uk-grid-column-large > * {
  padding-left: 80px;
}
.uk-grid-divider.uk-grid-large > :not(.uk-first-column)::before,
.uk-grid-divider.uk-grid-column-large > :not(.uk-first-column)::before {
  left: 40px;
}
/* Vertical */
.uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin,
.uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin {
  margin-top: 80px;
}
.uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin::before {
  top: -40px;
  left: 80px;
}
.uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin::before {
  top: -40px;
}
.uk-grid-divider.uk-grid-column-large.uk-grid-stack > .uk-grid-margin::before {
  left: 80px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  /* Horizontal */
  .uk-grid-divider.uk-grid-large,
  .uk-grid-divider.uk-grid-column-large {
    margin-left: -140px;
  }
  .uk-grid-divider.uk-grid-large > *,
  .uk-grid-divider.uk-grid-column-large > * {
    padding-left: 140px;
  }
  .uk-grid-divider.uk-grid-large > :not(.uk-first-column)::before,
  .uk-grid-divider.uk-grid-column-large > :not(.uk-first-column)::before {
    left: 70px;
  }
  /* Vertical */
  .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin,
  .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin {
    margin-top: 140px;
  }
  .uk-grid-divider.uk-grid-large.uk-grid-stack > .uk-grid-margin::before {
    top: -70px;
    left: 140px;
  }
  .uk-grid-divider.uk-grid-row-large.uk-grid-stack > .uk-grid-margin::before {
    top: -70px;
  }
  .uk-grid-divider.uk-grid-column-large.uk-grid-stack > .uk-grid-margin::before {
    left: 140px;
  }
}
/* Match child of a grid cell
 ========================================================================== */
/*
 * Behave like a block element
 * 1. Wrap into the next line
 * 2. Take the full width, at least 100%. Only if no class from the Width component is set.
 * 3. Expand width even if larger than 100%, e.g. because of negative margin (Needed for nested grids)
 */
.uk-grid-match > *,
.uk-grid-item-match {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
}
.uk-grid-match > * > :not([class*='uk-width']),
.uk-grid-item-match > :not([class*='uk-width']) {
  /* 2 */
  box-sizing: border-box;
  width: 100%;
  /* 3 */
  flex: auto;
}

/*
 * Reset
 */
.uk-nav,
.uk-nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
/*
* 1. Center content vertically, e.g. an icon
* 2. Imitate white space gap when using flexbox
* 3. Reset link
 */
.uk-nav li > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3*/
  text-decoration: none;
}
/*
 * Items
 * Must target `a` elements to exclude other elements (e.g. lists)
 */
.uk-nav > li > a {
  padding: 5px 0;
}
/* Sublists
 ========================================================================== */
/*
 * Level 2
 * `ul` needed for higher specificity to override padding
 */
ul.uk-nav-sub {
  padding: 5px 0 5px 15px;
}
/*
 * Level 3 and deeper
 */
.uk-nav-sub ul {
  padding-left: 15px;
}
/*
 * Items
 */
.uk-nav-sub a {
  padding: 2px 0;
}
/* Parent icon
 ========================================================================== */
.uk-nav-parent-icon {
  margin-left: auto;
}
.uk-nav > li > a[aria-expanded="true"] .uk-nav-parent-icon {
  transform: rotate(180deg);
}
/* Header
 ========================================================================== */
.uk-nav-header {
  padding: 5px 0;
  text-transform: uppercase;
  font-size: 0.875rem;
}
.uk-nav-header:not(:first-child) {
  margin-top: 20px;
}
/* Divider
 ========================================================================== */
.uk-nav .uk-nav-divider {
  margin: 5px 0;
}

/* TODO: Compiled Css Code */

/* TODO: Compiled Css Code */

/* Default modifier
 ========================================================================== */
.uk-nav-default {
  font-size: 0.875rem;
  line-height: 1.5;
}
/*
 * Items
 */
.uk-nav-default > li > a {
  color: #999;
}
/* Hover */
.uk-nav-default > li > a:hover {
  color: #666;
}
/* Active */
.uk-nav-default > li.uk-active > a {
  color: #333;
}
/*
 * Subtitle
 */
.uk-nav-default .uk-nav-subtitle {
  font-size: 12px;
}
/*
 * Header
 */
.uk-nav-default .uk-nav-header {
  color: #333;
}
/*
 * Divider
 */
.uk-nav-default .uk-nav-divider {
  border-top: 1px solid #e5e5e5;
}
/*
 * Sublists
 */
.uk-nav-default .uk-nav-sub {
  font-size: 0.875rem;
  line-height: 1.5;
}
.uk-nav-default .uk-nav-sub a {
  color: #999;
}
.uk-nav-default .uk-nav-sub a:hover {
  color: #666;
}
.uk-nav-default .uk-nav-sub li.uk-active > a {
  color: #333;
}
/* Primary modifier
 ========================================================================== */
.uk-nav-primary {
  font-size: 1.5rem;
  line-height: 1.5;
}
/*
 * Items
 */
.uk-nav-primary > li > a {
  color: #999;
}
/* Hover */
.uk-nav-primary > li > a:hover {
  color: #666;
}
/* Active */
.uk-nav-primary > li.uk-active > a {
  color: #333;
}
/*
 * Subtitle
 */
.uk-nav-primary .uk-nav-subtitle {
  font-size: 1.25rem;
}
/*
 * Header
 */
.uk-nav-primary .uk-nav-header {
  color: #333;
}
/*
 * Divider
 */
.uk-nav-primary .uk-nav-divider {
  border-top: 1px solid #e5e5e5;
}
/*
 * Sublists
 */
.uk-nav-primary .uk-nav-sub {
  font-size: 1.25rem;
  line-height: 1.5;
}
.uk-nav-primary .uk-nav-sub a {
  color: #999;
}
.uk-nav-primary .uk-nav-sub a:hover {
  color: #666;
}
.uk-nav-primary .uk-nav-sub li.uk-active > a {
  color: #333;
}
/* Secondary modifier
 ========================================================================== */
.uk-nav-secondary {
  font-size: 16px;
  line-height: 1.5;
}
.uk-nav-secondary > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider) {
  margin-top: 0;
}
/*
 * Items
 */
.uk-nav-secondary > li > a {
  color: #333;
  padding: 10px 10px;
}
/* Hover */
.uk-nav-secondary > li > a:hover {
  color: #333;
  background-color: #f8f8f8;
}
/* Active */
.uk-nav-secondary > li.uk-active > a {
  color: #333;
  background-color: #f8f8f8;
}
/*
 * Subtitle
 */
.uk-nav-secondary .uk-nav-subtitle {
  font-size: 0.875rem;
  color: #999;
}
/* Hover */
.uk-nav-secondary > li > a:hover .uk-nav-subtitle {
  color: #666;
}
/* Active */
.uk-nav-secondary > li.uk-active > a .uk-nav-subtitle {
  color: #333;
}
/*
 * Header
 */
.uk-nav-secondary .uk-nav-header {
  color: #333;
}
/*
 * Divider
 */
.uk-nav-secondary .uk-nav-divider {
  border-top: 1px solid #e5e5e5;
}
/*
 * Sublists
 */
.uk-nav-secondary .uk-nav-sub {
  font-size: 0.875rem;
  line-height: 1.5;
}
.uk-nav-secondary .uk-nav-sub a {
  color: #999;
}
.uk-nav-secondary .uk-nav-sub a:hover {
  color: #666;
}
.uk-nav-secondary .uk-nav-sub li.uk-active > a {
  color: #333;
}
/* Alignment modifier
 ========================================================================== */
/*
 * 1. Center header
 * 2. Center items
 */
/* 1 */
.uk-nav-center {
  text-align: center;
}
/* 2 */
.uk-nav-center li > a {
  justify-content: center;
}
/* Sublists */
.uk-nav-center .uk-nav-sub,
.uk-nav-center .uk-nav-sub ul {
  padding-left: 0;
}
/* Parent icon  */
.uk-nav-center .uk-nav-parent-icon {
  margin-left: 4px;
}
/* Style modifier
 ========================================================================== */
/*
 * Divider
 * Naming is in plural to prevent conflicts with divider sub object.
 */
.uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider) {
  margin-top: 5px;
  padding-top: 5px;
  border-top: 1px solid #e5e5e5;
}


/*
 * 1. Create position context to center navbar group
 */
 .uk-navbar {
  display: flex;
  /* 1 */
  position: relative;
}
/* Container
 ========================================================================== */

 .uk-navbar-container:not(.uk-transparent) { background: var(--color-mute); }

/* TODO: compiled hr color */

      .uk-navbar-container.uk-mute{ background: var(--color-mute); }
    

      .uk-navbar-container.uk-danger{ background: var(--color-danger); }
    

      .uk-navbar-container.uk-success{ background: var(--color-success); }
    

      .uk-navbar-container.uk-default{ background: var(--color-default); }
    

      .uk-navbar-container.uk-primary{ background: var(--color-primary); }
    

      .uk-navbar-container.uk-warning{ background: var(--color-warning); }
    

      .uk-navbar-container.uk-secondary{ background: var(--color-secondary); }
    

      .uk-navbar-container.uk-trasnparent{ background: var(--color-trasnparent); }
    

/* Groups
 ========================================================================== */
/*
 * 1. Align navs and items vertically if they have a different height
 */
.uk-navbar-left,
.uk-navbar-right,
[class*='uk-navbar-center'] {
  display: flex;
  gap: 30px;
  /* 1 */
  align-items: center;
}
/*
 * Horizontal alignment
 * 1. Create position context for centered navbar with sub groups (left/right)
 * 2. Fix text wrapping if content is larger than 50% of the container.
 * 3. Needed for dropdowns because a new position context is created
 *    `z-index` must be smaller than off-canvas
 * 4. Align sub groups for centered navbar
 */
.uk-navbar-right {
  margin-left: auto;
}
.uk-navbar-center:only-child {
  margin-left: auto;
  margin-right: auto;
  /* 1 */
  position: relative;
}
.uk-navbar-center:not(:only-child) {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* 2 */
  width: max-content;
  box-sizing: border-box;
  /* 3 */
  z-index: 990;
}
/* 4 */
.uk-navbar-center-left,
.uk-navbar-center-right {
  position: absolute;
  top: 0;
}
.uk-navbar-center-left {
  right: calc(100% + 30px);
}
.uk-navbar-center-right {
  left: calc(100% + 30px);
}
[class*='uk-navbar-center-'] {
  width: max-content;
  box-sizing: border-box;
}
/* Nav
 ========================================================================== */
/*
 * 1. Reset list
 */
.uk-navbar-nav {
  display: flex;
  gap: 30px;
  /* 1 */
  margin: 0;
  padding: 0;
  list-style: none;
}
/*
 * Allow items to wrap into the next line
 * Only not `absolute` positioned groups
 */
.uk-navbar-left,
.uk-navbar-right,
.uk-navbar-center:only-child {
  flex-wrap: wrap;
}
/*
 * Items
 * 1. Center content vertically and horizontally
 * 2. Imitate white space gap when using flexbox
 * 3. Dimensions
 * 4. Style
 * 5. Required for `a`
 */
.uk-navbar-nav > li > a,
.uk-navbar-item,
.uk-navbar-toggle {
  /* 1 */
  display: flex;
  justify-content: center;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  box-sizing: border-box;
  min-height: 80px;
  /* 4 */
  font-size: 0.875rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 5 */
  text-decoration: none;
}
/*
 * Nav items
 */
.uk-navbar-nav > li > a {
  padding: 0 0;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  color: var(--color-secondary);
  transition-property: color, background-color;
}
/*
 * Hover
 * Apply hover style also if dropdown is opened
 */
.uk-navbar-nav > li:hover > a,
.uk-navbar-nav > li > a[aria-expanded="true"] {
  color: var(--color-secondary);
}
/* OnClick */
.uk-navbar-nav > li > a:active {
  color: var(--color-secondary-click);
}
/* Active */
.uk-navbar-nav > li.uk-active > a {
  color: var(--color-secondary-click);
}
/* Parent icon modifier
 ========================================================================== */
.uk-navbar-parent-icon {
  margin-left: 4px;
}
.uk-navbar-nav > li > a[aria-expanded="true"] .uk-navbar-parent-icon {
  transform: rotate(180deg);
}
/* Item
 ========================================================================== */
.uk-navbar-item {
  color: var(--color-secondary);
  padding: 0 0;
}
/*
 * Remove margin from the last-child
 */
.uk-navbar-item > :last-child {
  margin-bottom: 0;
}
/* Toggle
 ========================================================================== */
.uk-navbar-toggle {
  color: var(--color-secondary);
  padding: 0 0;
}
.uk-navbar-toggle:hover,
.uk-navbar-toggle[aria-expanded="true"] {
  color: var(--color-secondary);
  text-decoration: none;
}
/*
 * Icon
 * Adopts `uk-icon`
 */
/* Hover */
/* Subtitle
 ========================================================================== */
.uk-navbar-subtitle {
  font-size: 0.875rem;
}
/* Justify modifier
 ========================================================================== */
.uk-navbar-justify .uk-navbar-left,
.uk-navbar-justify .uk-navbar-right,
.uk-navbar-justify .uk-navbar-nav,
.uk-navbar-justify .uk-navbar-nav > li,
.uk-navbar-justify .uk-navbar-item,
.uk-navbar-justify .uk-navbar-toggle {
  flex-grow: 1;
}
/* Style modifiers
 ========================================================================== */
/* Dropdown
 ========================================================================== */
/*
 * Adopts `uk-dropdown`
 * 1. Hide by default
 * 2. Set position
 * 3. Set a default width
 * 4. Style
 */
.uk-navbar-dropdown {
  /* 1 */
  display: none;
  /* 2 */
  position: absolute;
  z-index: 1020;
  --uk-position-offset: 15px;
  --uk-position-shift-offset: 0;
  --uk-position-viewport-offset: 15px;
  /* 3 */
  box-sizing: border-box;
  width: 200px;
  /* 4 */
  padding: 25px;
  color: var(--color-secondary);
  background: var(--color-default);
  box-shadow: 0 5px 12px rgba(0, 0, 0, 0.15);
}
/* Show */
.uk-navbar-dropdown.uk-open {
  display: block;
}
/*
 * Remove margin from the last-child
 */
.uk-navbar-dropdown > :last-child {
  margin-bottom: 0;
}
/*
 * Grid
 * Adopts `uk-grid`
 */
/* Gutter Horizontal */
.uk-navbar-dropdown-grid {
  margin-left: -30px;
}
.uk-navbar-dropdown-grid > * {
  padding-left: 30px;
}
/* Gutter Vertical */
.uk-navbar-dropdown-grid > .uk-grid-margin {
  margin-top: 30px;
}
/* Stack */
.uk-navbar-dropdown-stack .uk-navbar-dropdown-grid > * {
  width: 100% !important;
}
/*
 * Width modifier
 */
.uk-navbar-dropdown-width-2:not(.uk-navbar-dropdown-stack) {
  width: 400px;
}
.uk-navbar-dropdown-width-3:not(.uk-navbar-dropdown-stack) {
  width: 600px;
}
.uk-navbar-dropdown-width-4:not(.uk-navbar-dropdown-stack) {
  width: 800px;
}
.uk-navbar-dropdown-width-5:not(.uk-navbar-dropdown-stack) {
  width: 1000px;
}
/*
 * Size modifier
 */
.uk-navbar-dropdown-large {
  --uk-position-shift-offset: 0;
  padding: 40px;
}
/*
 * Dropbar modifier
 * 1. Reset dropdown width to prevent to early shifting
 * 2. Reset style
 * 3. Padding
 */
.uk-navbar-dropdown-dropbar {
  /* 1 */
  width: auto;
  /* 2 */
  background: transparent;
  /* 3 */
  padding: 25px 0 25px 0;
  --uk-position-offset: 0;
  --uk-position-shift-offset: 0;
  --uk-position-viewport-offset: 15px;
  box-shadow: none;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-navbar-dropdown-dropbar {
    --uk-position-viewport-offset: 30px;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-navbar-dropdown-dropbar {
    --uk-position-viewport-offset: 40px;
  }
}
.uk-navbar-dropdown-dropbar-large {
  --uk-position-shift-offset: 0;
  padding-top: 40px;
  padding-bottom: 40px;
}
/* Dropdown Nav
 * Adopts `uk-nav`
 ========================================================================== */
.uk-navbar-dropdown-nav {
  font-size: 0.875rem;
}
/*
 * Items
 */
.uk-navbar-dropdown-nav > li > a {
  color: var(--color-secondary);
}
/* Hover */
.uk-navbar-dropdown-nav > li > a:hover {
  color: var(--color-secondary);
}
/* Active */
.uk-navbar-dropdown-nav > li.uk-active > a {
  color: var(--color-secondary-click);
}
/*
 * Subtitle
 */
.uk-navbar-dropdown-nav .uk-nav-subtitle {
  font-size: 12px;
}
/*
 * Header
 */
.uk-navbar-dropdown-nav .uk-nav-header {
  color: var(--color-secondary-click);
}
/*
 * Divider
 */
.uk-navbar-dropdown-nav .uk-nav-divider {
  border-top: 1px solid #e5e5e5;
}
/*
 * Sublists
 */
.uk-navbar-dropdown-nav .uk-nav-sub a {
  color: var(--color-secondary);
}
.uk-navbar-dropdown-nav .uk-nav-sub a:hover {
  color: var(--color-secondary);
}
.uk-navbar-dropdown-nav .uk-nav-sub li.uk-active > a {
  color: var(--color-secondary-click);
}
/* Dropbar
 ========================================================================== */
/*
 * 1. Reset dropbar
 * 2. Width
 */
.uk-navbar-dropbar {
  /* 1 */
  display: block !important;
  z-index: 980;
  padding: 0;
  /* 2 */
  left: 0;
  right: 0;
}


/*
 * 1. Set `font-size` to support `rem` units
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Style
 */
html {
  /* 1 */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-weight: normal;
  line-height: 1.5;
  font-size: 16px;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 3 */
  background: var(--color-default);
  color: var(--color-secondary);
}
/*
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

*{ 
    -webkit-tap-highlight-color: transparent;
    -moz-tap-highlight-color: transparent;
    -ms-tap-highlight-color: transparent;
    tap-highlight-color: transparent;
}

/* Links
 ========================================================================== */
/*
 * Style
 */
a,
.uk-link {
  color: var(--color-primary);
  text-decoration: none;
  cursor: pointer;
}
a:hover,
.uk-link:hover,
.uk-link-toggle:hover .uk-link {
  color: var(--color-primary);
  text-decoration: underline;
}
/* Text-level semantics
 ========================================================================== */
/*
 * 1. Add the correct text decoration in Edge.
 * 2. The shorthand declaration `underline dotted` is not supported in Safari.
 */
abbr[title] {
  /* 1 */
  text-decoration: underline dotted;
  /* 2 */
  -webkit-text-decoration-style: dotted;
}
/*
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}
/*
 * 1. Consolas has a better baseline in running text compared to `Courier`
 * 2. Correct the odd `em` font sizing in all browsers.
 * 3. Style
 */
:not(pre) > code,
:not(pre) > kbd,
:not(pre) > samp {
  /* 1 */
  font-family: Consolas, monaco, monospace;
  /* 2 */
  font-size: 0.875rem;
  /* 3 */
  background: var(--color-default);
  color: var(--color-danger);
  white-space: nowrap;
  padding: 2px 6px;
}
/*
 * Emphasize
 */
em {
  color: var(--color-danger);
}
/*
 * Insert
 */
ins {
  background: var(--color-default);
  color: var(--color-secondary);
  text-decoration: none;
}
/*
 * Mark
 */
mark {
  background: var(--color-default);
  color: var(--color-secondary);
}
/*
 * Quote
 */
q {
  font-style: italic;
}
/*
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}
/*
 * Prevents `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
/* Embedded content
 ========================================================================== */
/*
 * Remove the gap between the element and the bottom of its parent container.
 */
audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}
/*
 * 1. Constrain the element to its parent width.
 * 2. Preserve the intrinsic aspect ratio and auto-scale the height of an image if the `height` attribute is present.
 * 3. Take border and padding into account.
 */
canvas,
img,
svg,
video {
  /* 1 */
  max-width: 100%;
  /* 2 */
  height: auto;
  /* 3 */
  box-sizing: border-box;
  /* 4 */
  filter: contrast(1.05);
}
/*
 * Deprecated: only needed for `img` elements with `uk-img`
 * 1. Hide `alt` text for lazy load images.
 * 2. Fix lazy loading images if parent element is set to `display: inline` and has `overflow: hidden`.
 */
img:not([src]) {
  /* 1 */
  visibility: hidden;
  /* 2 */
  min-width: 1px;
}
/*
 * Iframe
 * Remove border in all browsers
 */
iframe {
  border: 0;
}
/* Block elements
 ========================================================================== */
/*
 * Margins
 */
p,
ul,
ol,
dl,
pre,
address,
fieldset,
figure {
  margin: 0 0 20px 0;
}
/* Add margin if adjacent element */
* + p,
* + ul,
* + ol,
* + dl,
* + pre,
* + address,
* + fieldset,
* + figure {
  margin-top: 20px;
}
/* Headings
 ========================================================================== */
h1,
.uk-h1,
h2,
.uk-h2,
h3,
.uk-h3,
h4,
.uk-h4,
h5,
.uk-h5,
h6,
.uk-h6,
.uk-heading-small,
.uk-heading-medium,
.uk-heading-large,
.uk-heading-xlarge,
.uk-heading-2xlarge {
  margin: 0 0 20px 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  color: var(--color-secondary);
  text-transform: none;
  font-weight: normal;
}
/* Add margin if adjacent element */
* + h1,
* + .uk-h1,
* + h2,
* + .uk-h2,
* + h3,
* + .uk-h3,
* + h4,
* + .uk-h4,
* + h5,
* + .uk-h5,
* + h6,
* + .uk-h6,
* + .uk-heading-small,
* + .uk-heading-medium,
* + .uk-heading-large,
* + .uk-heading-xlarge,
* + .uk-heading-2xlarge {
  margin-top: 40px;
}
/*
 * Sizes
 */
h1,
.uk-h1 {
  font-size: 2.23125rem;
  line-height: 1.2;
}
h2,
.uk-h2 {
  font-size: 1.7rem;
  line-height: 1.3;
}
h3,
.uk-h3 {
  font-size: 1.5rem;
  line-height: 1.4;
}
h4,
.uk-h4 {
  font-size: 1.25rem;
  line-height: 1.4;
}
h5,
.uk-h5 {
  font-size: 16px;
  line-height: 1.4;
}
h6,
.uk-h6 {
  font-size: 0.875rem;
  line-height: 1.4;
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  h1,
  .uk-h1 {
    font-size: 2.625rem;
  }
  h2,
  .uk-h2 {
    font-size: 2rem;
  }
}
/* Lists
 ========================================================================== */
ul,
ol {
  padding-left: 30px;
}
/*
 * Reset margin for nested lists
 */
ul > li > ul,
ul > li > ol,
ol > li > ol,
ol > li > ul {
  margin: 0;
}
/* Description lists
 ========================================================================== */
dt {
  font-weight: bold;
}
dd {
  margin-left: 0;
}
/* Horizontal rules
 ========================================================================== */
/*
 * 1. Show the overflow in Chrome, Edge and IE.
 * 2. Add the correct text-align in Edge and IE.
 * 3. Style
 */
hr,
.uk-hr {
  /* 1 */
  overflow: visible;
  /* 2 */
  text-align: inherit;
  /* 3 */
  border: 0;
  margin: 0 0 20px 0;
  border-top: 1px solid var(--color-default);
}

/* TODO: compiled hr color */

      hr.uk-mute, .uk-hr.uk-mute {
        border-color: var(--color-mute-click) !important;
      }
    

      hr.uk-danger, .uk-hr.uk-danger {
        border-color: var(--color-danger-click) !important;
      }
    

      hr.uk-success, .uk-hr.uk-success {
        border-color: var(--color-success-click) !important;
      }
    

      hr.uk-default, .uk-hr.uk-default {
        border-color: var(--color-default-click) !important;
      }
    

      hr.uk-primary, .uk-hr.uk-primary {
        border-color: var(--color-primary-click) !important;
      }
    

      hr.uk-warning, .uk-hr.uk-warning {
        border-color: var(--color-warning-click) !important;
      }
    

      hr.uk-secondary, .uk-hr.uk-secondary {
        border-color: var(--color-secondary-click) !important;
      }
    
/* TODO: compiled hr color */


/* Add margin if adjacent element */
* + hr,
* + .uk-hr {
  margin-top: 20px;
}
/* Address
 ========================================================================== */
address {
  font-style: normal;
}
/* Blockquotes
 ========================================================================== */
blockquote {
  line-height: 1.5;
  margin: 0 0 20px 0;
  font-size: 1.25rem;
  font-style: italic;
  color: var(--color-secondary);
}
/* Add margin if adjacent element */
* + blockquote {
  margin-top: 20px;
}
/*
 * Content
 */
blockquote p:last-of-type {
  margin-bottom: 0;
}
blockquote footer {
  line-height: 1.5;
  margin-top: 10px;
  font-size: 0.875rem;
  color: var(--color-secondary);
}
blockquote footer::before {
  content: "— ";
}
/* Preformatted text
 ========================================================================== */
/*
 * 1. Contain overflow in all browsers.
 */
pre {
  font: 0.875rem / 1.5 Consolas, monaco, monospace;
  color: var(--color-secondary);
  -moz-tab-size: 4;
  tab-size: 4;
  /* 1 */
  padding: 10px;
  overflow: auto;
  border-radius: 3px;
  background: var(--color-default);
  border: 1px solid var(--color-default);
}
pre code {
  font-family: Consolas, monaco, monospace;
}
/* Focus
 ========================================================================== */
:focus {
  outline: none;
}
:focus-visible {
  outline: 2px dotted var(--color-secondary);
}
/* Selection pseudo-element
 ========================================================================== */
::selection {
  background: var(--color-primary);
  color: var(--color-default);
  text-shadow: none;
}
/* HTML5 elements
 ========================================================================== */
/*
 * 1. Add the correct display in Edge, IE 10+, and Firefox.
 * 2. Add the correct display in IE.
 */
details,
main {
  /* 2 */
  display: block;
}
/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}
/*
 * Add the correct display in IE.
 */
template {
  display: none;
}
/* Pass media breakpoints to JS
 ========================================================================== */
/*
 * Breakpoints
 */
:root {
  --uk-breakpoint-s: 640px;
  --uk-breakpoint-m: 960px;
  --uk-breakpoint-l: 1200px;
  --uk-breakpoint-xl: 1600px;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Center items vertically if they have a different height
 * 3. Gutter
 * 4. Reset list
 */
.uk-subnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  align-items: center;
  /* 3 */
  margin-left: -20px;
  /* 4 */
  padding: 0;
  list-style: none;
}
/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.uk-subnav > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 20px;
  /* 3 */
  position: relative;
}
/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * Using `:first-child` instead of `a` to support `span` elements for text
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Style
 */
.uk-subnav > * > :first-child {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  color: #999;
  font-size: 0.875rem;
  text-transform: uppercase;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}
/* Hover */
.uk-subnav > * > a:hover {
  color: #666;
  text-decoration: none;
}
/* Active */
.uk-subnav > .uk-active > a {
  color: #333;
}
/* Divider modifier
 ========================================================================== */
/*
 * Set gutter
 */
.uk-subnav-divider {
  margin-left: -41px;
}
/*
 * Align items and divider vertically
 */
.uk-subnav-divider > * {
  display: flex;
  align-items: center;
}
/*
 * Divider
 * 1. `nth-child` makes it also work without JS if it's only one row
 */
.uk-subnav-divider > ::before {
  content: "";
  height: 1.5em;
  margin-left: 0px;
  margin-right: 20px;
  border-left: 1px solid transparent;
}
/* 1 */
.uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before {
  border-left-color: #e5e5e5;
}
/* Pill modifier
 ========================================================================== */
.uk-subnav-pill > * > :first-child {
  padding: 5px 10px;
  background: transparent;
  color: #999;
}
/* Hover */
.uk-subnav-pill > * > a:hover {
  background-color: #f8f8f8;
  color: #666;
}
/* OnClick */
.uk-subnav-pill > * > a:active {
  background-color: #f8f8f8;
  color: #666;
}
/* Active */
.uk-subnav-pill > .uk-active > a {
  background-color: #1e87f0;
  color: #fff;
}
/* Disabled
 * The same for all style modifiers
 ========================================================================== */
.uk-subnav > .uk-disabled > a {
  color: #999;
}

/*
 * Reset list
 */
.uk-breadcrumb {
  padding: 0;
  list-style: none;
}
/*
 * 1. Doesn't generate any box and replaced by child boxes
 */
.uk-breadcrumb > * {
  display: contents;
}
/* Items
 ========================================================================== */
.uk-breadcrumb > * > * {
  font-size: 0.875rem;
  color: #999;
}
/* Hover */
.uk-breadcrumb > * > :hover {
  color: #666;
  text-decoration: none;
}
/* Disabled */
/* Active */
.uk-breadcrumb > :last-child > span,
.uk-breadcrumb > :last-child > a:not([href]) {
  color: #666;
}
/*
 * Divider
 * `nth-child` makes it also work without JS if it's only one row
 * 1. Remove space between inline block elements.
 * 2. Style
 */
.uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before {
  content: "/";
  display: inline-block;
  /* 1 */
  margin: 0 20px 0 calc(20px - 4px);
  /* 2 */
  font-size: 0.875rem;
  color: #999;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Gutter
 * 3. Reset list
 */
.uk-pagination {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin-left: 0;
  /* 3 */
  padding: 0;
  list-style: none;
}
/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.uk-pagination > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 0;
  /* 3 */
  position: relative;
}
/* Items
 ========================================================================== */
/*
 * 1. Prevent gap if child element is `inline-block`, e.g. an icon
 * 2. Style
 */
.uk-pagination > * > * {
  /* 1 */
  display: block;
  /* 2 */
  padding: 5px 10px;
  color: #999;
  transition: color 0.1s ease-in-out;
}
/* Hover */
.uk-pagination > * > :hover {
  color: #666;
  text-decoration: none;
}
/* Active */
.uk-pagination > .uk-active > * {
  color: #666;
}
/* Disabled */
.uk-pagination > .uk-disabled > * {
  color: #999;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Gutter
 * 3. Reset list
 */
.uk-tab {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin-left: -20px;
  /* 3 */
  padding: 0;
  list-style: none;
  position: relative;
}
.uk-tab::before {
  content: "";
  position: absolute;
  bottom: 0;
  left: 20px;
  right: 0;
  border-bottom: 1px solid #e5e5e5;
}
/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 * 3. Create position context for dropdowns
 */
.uk-tab > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 20px;
  /* 3 */
  position: relative;
}
/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * 1. Center content vertically, e.g. an icon
 * 2. Imitate white space gap when using flexbox
 * 3. Center content if a width is set
 * 4. Style
 */
.uk-tab > * > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  justify-content: center;
  /* 4 */
  padding: 5px 10px;
  color: #999;
  border-bottom: 1px solid transparent;
  font-size: 0.875rem;
  text-transform: uppercase;
  transition: color 0.1s ease-in-out;
}
/* Hover */
.uk-tab > * > a:hover {
  color: #666;
  text-decoration: none;
}
/* Active */
.uk-tab > .uk-active > a {
  color: #333;
  border-color: var(--color-primary);
}
/* Disabled */
.uk-tab > .uk-disabled > a {
  color: #999;
}
/* Position modifier
 ========================================================================== */
/*
 * Bottom
 */
.uk-tab-bottom::before {
  top: 0;
  bottom: auto;
}
.uk-tab-bottom > * > a {
  border-top: 1px solid transparent;
  border-bottom: none;
}
/*
 * Left + Right
 * 1. Reset Gutter
 */
.uk-tab-left,
.uk-tab-right {
  flex-direction: column;
  /* 1 */
  margin-left: 0;
}
/* 1 */
.uk-tab-left > *,
.uk-tab-right > * {
  padding-left: 0;
}
.uk-tab-left::before {
  top: 0;
  bottom: 0;
  left: auto;
  right: 0;
  border-left: 1px solid #e5e5e5;
  border-bottom: none;
}
.uk-tab-right::before {
  top: 0;
  bottom: 0;
  left: 0;
  right: auto;
  border-left: 1px solid #e5e5e5;
  border-bottom: none;
}
.uk-tab-left > * > a {
  justify-content: left;
  border-right: 1px solid transparent;
  border-bottom: none;
}
.uk-tab-right > * > a {
  justify-content: left;
  border-left: 1px solid transparent;
  border-bottom: none;
}
.uk-tab .uk-dropdown {
  margin-left: 30px;
}

/*
 * Adopts `uk-icon`
 */
.uk-slidenav {
  padding: 5px 10px;
  color: rgba(102, 102, 102, 0.5);
  transition: color 0.1s ease-in-out;
}
/* Hover */
.uk-slidenav:hover {
  color: rgba(102, 102, 102, 0.9);
}
/* OnClick */
.uk-slidenav:active {
  color: rgba(102, 102, 102, 0.5);
}
/* Icon modifier
 ========================================================================== */
/*
 * Previous
 */
/*
 * Next
 */
/* Size modifier
 ========================================================================== */
.uk-slidenav-large {
  padding: 10px 10px;
}
/* Container
 ========================================================================== */
.uk-slidenav-container {
  display: flex;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.uk-dotnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -12px;
}
/*
 * 1. Space is allocated solely based on content dimensions: 0 0 auto
 * 2. Gutter
 */
.uk-dotnav > * {
  /* 1 */
  flex: none;
  /* 2 */
  padding-left: 12px;
}
/* Items
 ========================================================================== */
/*
 * Items
 * 1. Hide text if present
 */
.uk-dotnav > * > * {
  display: block;
  box-sizing: border-box;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: transparent;
  /* 1 */
  text-indent: 100%;
  overflow: hidden;
  white-space: nowrap;
  transition: 0.2s ease-in-out;
  border: 1px solid rgba(102, 102, 102, 0.4);
  transition-property: background-color, border-color;
}
/* Hover */
.uk-dotnav > * > :hover {
  background-color: rgba(102, 102, 102, 0.6);
  border-color: transparent;
}
/* OnClick */
.uk-dotnav > * > :active {
  background-color: rgba(102, 102, 102, 0.2);
  border-color: transparent;
}
/* Active */
.uk-dotnav > .uk-active > * {
  background-color: rgba(102, 102, 102, 0.6);
  border-color: transparent;
}
/* Modifier: 'uk-dotnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.uk-dotnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -12px;
}
/* 2 */
.uk-dotnav-vertical > * {
  padding-left: 0;
  padding-top: 12px;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.uk-thumbnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -15px;
}
/*
 * Space is allocated based on content dimensions, but shrinks: 0 1 auto
 * 1. Gutter
 */
.uk-thumbnav > * {
  /* 1 */
  padding-left: 15px;
}
/* Items
 ========================================================================== */
/*
 * Items
 */
.uk-thumbnav > * > * {
  display: inline-block;
  position: relative;
}
.uk-thumbnav > * > *::after {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(255, 255, 255, 0.4);
  transition: background-color 0.1s ease-in-out;
}
/* Hover */
.uk-thumbnav > * > :hover::after {
  background-color: transparent;
}
/* Active */
.uk-thumbnav > .uk-active > *::after {
  background-color: transparent;
}
/* Modifier: 'uk-thumbnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.uk-thumbnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -15px;
}
/* 2 */
.uk-thumbnav-vertical > * {
  padding-left: 0;
  padding-top: 15px;
}

/*
 * 1. Allow items to wrap into the next line
 * 2. Reset list
 * 3. Gutter
 */
.uk-iconnav {
  display: flex;
  /* 1 */
  flex-wrap: wrap;
  /* 2 */
  margin: 0;
  padding: 0;
  list-style: none;
  /* 3 */
  margin-left: -10px;
}
/*
 * Space is allocated based on content dimensions, but shrinks: 0 1 auto
 * 1. Gutter
 */
.uk-iconnav > * {
  /* 1 */
  padding-left: 10px;
}
/* Items
 ========================================================================== */
/*
 * Items must target `a` elements to exclude other elements (e.g. dropdowns)
 * 1. Center content vertically if there is still some text
 * 2. Imitate white space gap when using flexbox
 * 3. Force text not to affect item height
 * 4. Style
 * 5. Required for `a` if there is still some text
 */
.uk-iconnav > * > a {
  /* 1 */
  display: flex;
  align-items: center;
  /* 2 */
  column-gap: 0.25em;
  /* 3 */
  line-height: 0;
  /* 4 */
  color: #999;
  /* 5 */
  text-decoration: none;
  font-size: 0.875rem;
  transition: 0.1s ease-in-out;
  transition-property: color, background-color;
}
/* Hover */
.uk-iconnav > * > a:hover {
  color: #666;
}
/* Active */
.uk-iconnav > .uk-active > a {
  color: #666;
}
/* Modifier: 'uk-iconnav-vertical'
 ========================================================================== */
/*
 * 1. Change direction
 * 2. Gutter
 */
.uk-iconnav-vertical {
  /* 1 */
  flex-direction: column;
  /* 2 */
  margin-left: 0;
  margin-top: -10px;
}
/* 2 */
.uk-iconnav-vertical > * {
  padding-left: 0;
  padding-top: 10px;
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Allow scrolling for the modal dialog
 * 4. Horizontal padding
 * 5. Mask the background page
 * 6. Fade-in transition
 * 7. Prevent cancellation of pointer events while dragging
 */
.uk-lightbox {
  /* 1 */
  display: none;
  /* 2 */
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1010;
  /* 5 */
  background: #000;
  /* 6 */
  opacity: 0;
  transition: opacity 0.15s linear;
  /* 7 */
  touch-action: pinch-zoom;
}
/*
 * Open
 * 1. Center child
 * 2. Fade-in
 */
.uk-lightbox.uk-open {
  display: block;
  /* 2 */
  opacity: 1;
}
/*
 * Focus
 */
.uk-lightbox :focus {
  outline-color: rgba(255, 255, 255, 0.7);
}
.uk-lightbox :focus-visible {
  outline-color: rgba(255, 255, 255, 0.7);
}
/* Page
 ========================================================================== */
/*
 * Prevent scrollbars
 */
.uk-lightbox-page {
  overflow: hidden;
}
/* Item
 ========================================================================== */
/*
 * 1. Center child within the viewport
 * 2. Not visible by default
 * 3. Color needed for spinner icon
 * 4. Optimize animation
 * 5. Responsiveness
 *    Using `vh` for `max-height` to fix image proportions after resize in Safari and Opera
 */
.uk-lightbox-items > * {
  /* 1 */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* 2 */
  display: none;
  justify-content: center;
  align-items: center;
  /* 3 */
  color: rgba(255, 255, 255, 0.7);
  /* 4 */
  will-change: transform, opacity;
}
/* 5 */
.uk-lightbox-items > * > * {
  max-width: 100vw;
  max-height: 100vh;
}
.uk-lightbox-items > * > :not(iframe) {
  width: auto;
  height: auto;
}
.uk-lightbox-items > .uk-active {
  display: flex;
}
/* Toolbar
 ========================================================================== */
.uk-lightbox-toolbar {
  padding: 10px 10px;
  background: rgba(0, 0, 0, 0.3);
  color: rgba(255, 255, 255, 0.7);
}
.uk-lightbox-toolbar > * {
  color: rgba(255, 255, 255, 0.7);
}
/* Toolbar Icon (Close)
 ========================================================================== */
.uk-lightbox-toolbar-icon {
  padding: 5px;
  color: rgba(255, 255, 255, 0.7);
}
/*
 * Hover
 */
.uk-lightbox-toolbar-icon:hover {
  color: #fff;
}
/* Button (Slidenav)
 ========================================================================== */
/*
 * 1. Center icon vertically and horizontally
 */
.uk-lightbox-button {
  box-sizing: border-box;
  width: 50px;
  height: 50px;
  background: rgba(0, 0, 0, 0.3);
  color: rgba(255, 255, 255, 0.7);
  /* 1 */
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
/* Hover */
.uk-lightbox-button:hover {
  color: #fff;
}
/* OnClick */
/* Caption
 ========================================================================== */
.uk-lightbox-caption:empty {
  display: none;
}
/* Iframe
 ========================================================================== */
.uk-lightbox-iframe {
  width: 80%;
  height: 80%;
}

[class*='uk-animation-'] {
  animation: 0.5s ease-out both;
}
/* Animations
 ========================================================================== */
/*
 * Fade
 */
.uk-animation-fade {
  animation-name: uk-fade;
  animation-duration: 0.8s;
  animation-timing-function: linear;
}
/*
 * Scale
 */
.uk-animation-scale-up {
  animation-name: uk-fade, uk-scale-up;
}
.uk-animation-scale-down {
  animation-name: uk-fade, uk-scale-down;
}
/*
 * Slide
 */
.uk-animation-slide-top {
  animation-name: uk-fade, uk-slide-top;
}
.uk-animation-slide-bottom {
  animation-name: uk-fade, uk-slide-bottom;
}
.uk-animation-slide-left {
  animation-name: uk-fade, uk-slide-left;
}
.uk-animation-slide-right {
  animation-name: uk-fade, uk-slide-right;
}
/*
 * Slide Small
 */
.uk-animation-slide-top-small {
  animation-name: uk-fade, uk-slide-top-small;
}
.uk-animation-slide-bottom-small {
  animation-name: uk-fade, uk-slide-bottom-small;
}
.uk-animation-slide-left-small {
  animation-name: uk-fade, uk-slide-left-small;
}
.uk-animation-slide-right-small {
  animation-name: uk-fade, uk-slide-right-small;
}
/*
 * Slide Medium
 */
.uk-animation-slide-top-medium {
  animation-name: uk-fade, uk-slide-top-medium;
}
.uk-animation-slide-bottom-medium {
  animation-name: uk-fade, uk-slide-bottom-medium;
}
.uk-animation-slide-left-medium {
  animation-name: uk-fade, uk-slide-left-medium;
}
.uk-animation-slide-right-medium {
  animation-name: uk-fade, uk-slide-right-medium;
}
/*
 * Kenburns
 */
.uk-animation-kenburns {
  animation-name: uk-kenburns;
  animation-duration: 15s;
}
/*
 * Shake
 */
.uk-animation-shake {
  animation-name: uk-shake;
}
/*
 * SVG Stroke
 * The `--uk-animation-stroke` custom property contains the longest path length.
 * Set it manually or use `uk-svg="stroke-animation: true"` to set it automatically.
 * All strokes are animated by the same pace and doesn't end simultaneously.
 * To end simultaneously, `pathLength="1"` could be used, but it's not working in Safari yet.
 */
.uk-animation-stroke {
  animation-name: uk-stroke;
  animation-duration: 2s;
  stroke-dasharray: var(--uk-animation-stroke);
}
/* Direction modifier
 ========================================================================== */
.uk-animation-reverse {
  animation-direction: reverse;
  animation-timing-function: ease-in;
}
/* Duration modifier
 ========================================================================== */
.uk-animation-fast {
  animation-duration: 0.1s;
}
/* Toggle animation based on the State of the Parent Element
 ========================================================================== */
.uk-animation-toggle:not(:hover):not(:focus) [class*='uk-animation-'] {
  animation-name: none;
}
/* Keyframes used by animation classes
 ========================================================================== */
/*
 * Fade
 */
@keyframes uk-fade {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
/*
 * Scale
 */
@keyframes uk-scale-up {
  0% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}
@keyframes uk-scale-down {
  0% {
    transform: scale(1.1);
  }
  100% {
    transform: scale(1);
  }
}
/*
 * Slide
 */
@keyframes uk-slide-top {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-bottom {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-left {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes uk-slide-right {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Slide Small
 */
@keyframes uk-slide-top-small {
  0% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-bottom-small {
  0% {
    transform: translateY(10px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-left-small {
  0% {
    transform: translateX(-10px);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes uk-slide-right-small {
  0% {
    transform: translateX(10px);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Slide Medium
 */
@keyframes uk-slide-top-medium {
  0% {
    transform: translateY(-50px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-bottom-medium {
  0% {
    transform: translateY(50px);
  }
  100% {
    transform: translateY(0);
  }
}
@keyframes uk-slide-left-medium {
  0% {
    transform: translateX(-50px);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes uk-slide-right-medium {
  0% {
    transform: translateX(50px);
  }
  100% {
    transform: translateX(0);
  }
}
/*
 * Kenburns
 */
@keyframes uk-kenburns {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(1.2);
  }
}
/*
 * Shake
 */
@keyframes uk-shake {
  0%,
  100% {
    transform: translateX(0);
  }
  10% {
    transform: translateX(-9px);
  }
  20% {
    transform: translateX(8px);
  }
  30% {
    transform: translateX(-7px);
  }
  40% {
    transform: translateX(6px);
  }
  50% {
    transform: translateX(-5px);
  }
  60% {
    transform: translateX(4px);
  }
  70% {
    transform: translateX(-3px);
  }
  80% {
    transform: translateX(2px);
  }
  90% {
    transform: translateX(-1px);
  }
}
/*
 * Stroke
 */
@keyframes uk-stroke {
  0% {
    stroke-dashoffset: var(--uk-animation-stroke);
  }
  100% {
    stroke-dashoffset: 0;
  }
}

/* Muted
 ========================================================================== */
a.uk-link-muted,.uk-link-muted a,
.uk-link-toggle .uk-link-muted {
  color: var(--color-mute);
}
a.uk-link-muted:hover,.uk-link-muted a:hover,
.uk-link-toggle:hover .uk-link-muted {
  color: var(--color-mute-click);
}
/* Text
 ========================================================================== */
a.uk-link-text,.uk-link-text a,
.uk-link-toggle .uk-link-text {
  color: inherit;
}
a.uk-link-text:hover,.uk-link-text a:hover,
.uk-link-toggle:hover .uk-link-text {
  color: var(--color-mute-click);
}
/* Heading
 ========================================================================== */
a.uk-link-heading,.uk-link-heading a,
.uk-link-toggle .uk-link-heading {
  color: inherit;
}
a.uk-link-heading:hover,.uk-link-heading a:hover,
.uk-link-toggle:hover .uk-link-heading {
  color: var(--color-primary);
  text-decoration: none;
}
/* Reset
 ========================================================================== */
/*
 * `!important` needed to override inverse component
 */
a.uk-link-reset,.uk-link-reset a {
  color: inherit !important;
  text-decoration: none !important;
}
/* Toggle
 ========================================================================== */
.uk-link-toggle {
  color: inherit !important;
  text-decoration: none !important;
}
[class*='uk-child-width'] > :not([class*='uk-width']) { box-sizing: border-box; width: 100%; }
[class*='uk-width'] { box-sizing: border-box; max-width: 100%; width: 100%; }
.uk-child-width-fill > :not([class*='uk-width']) { width: -webkit-fill-available !important; }
.uk-child-width-expand > :not([class*='uk-width']) { flex: 1; min-width: 1px; }
.uk-min-width-fill { min-width: -webkit-fill-available !important; }
.uk-max-width-fill { max-width: -webkit-fill-available !important; }
.uk-width-fill { width: -webkit-fill-available !important; }
.uk-width-expand { flex: 1; min-width: 1px; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


      .uk-width-11-12           { width: 91.6667%; }
      .uk-min-width-11-12       { min-width: 91.6667%; }
      .uk-max-width-11-12       { max-width: 91.6667%; }
      .uk-child-width-11-12 > :not([class*='uk-width']) { width: 91.6667%; }
    

      .uk-width-10-12           { width: 83.3333%; }
      .uk-min-width-10-12       { min-width: 83.3333%; }
      .uk-max-width-10-12       { max-width: 83.3333%; }
      .uk-child-width-10-12 > :not([class*='uk-width']) { width: 83.3333%; }
    

      .uk-width-9-12           { width: 75%; }
      .uk-min-width-9-12       { min-width: 75%; }
      .uk-max-width-9-12       { max-width: 75%; }
      .uk-child-width-9-12 > :not([class*='uk-width']) { width: 75%; }
    

      .uk-width-8-12           { width: 66.6667%; }
      .uk-min-width-8-12       { min-width: 66.6667%; }
      .uk-max-width-8-12       { max-width: 66.6667%; }
      .uk-child-width-8-12 > :not([class*='uk-width']) { width: 66.6667%; }
    

      .uk-width-7-12           { width: 58.3333%; }
      .uk-min-width-7-12       { min-width: 58.3333%; }
      .uk-max-width-7-12       { max-width: 58.3333%; }
      .uk-child-width-7-12 > :not([class*='uk-width']) { width: 58.3333%; }
    

      .uk-width-6-12           { width: 50%; }
      .uk-min-width-6-12       { min-width: 50%; }
      .uk-max-width-6-12       { max-width: 50%; }
      .uk-child-width-6-12 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-5-12           { width: 41.6667%; }
      .uk-min-width-5-12       { min-width: 41.6667%; }
      .uk-max-width-5-12       { max-width: 41.6667%; }
      .uk-child-width-5-12 > :not([class*='uk-width']) { width: 41.6667%; }
    

      .uk-width-4-12           { width: 33.3333%; }
      .uk-min-width-4-12       { min-width: 33.3333%; }
      .uk-max-width-4-12       { max-width: 33.3333%; }
      .uk-child-width-4-12 > :not([class*='uk-width']) { width: 33.3333%; }
    

      .uk-width-3-12           { width: 25%; }
      .uk-min-width-3-12       { min-width: 25%; }
      .uk-max-width-3-12       { max-width: 25%; }
      .uk-child-width-3-12 > :not([class*='uk-width']) { width: 25%; }
    

      .uk-width-2-12           { width: 16.6667%; }
      .uk-min-width-2-12       { min-width: 16.6667%; }
      .uk-max-width-2-12       { max-width: 16.6667%; }
      .uk-child-width-2-12 > :not([class*='uk-width']) { width: 16.6667%; }
    

      .uk-width-1-12           { width: 8.3333%; }
      .uk-min-width-1-12       { min-width: 8.3333%; }
      .uk-max-width-1-12       { max-width: 8.3333%; }
      .uk-child-width-1-12 > :not([class*='uk-width']) { width: 8.3333%; }
    

      .uk-width-10-11           { width: 90.9091%; }
      .uk-min-width-10-11       { min-width: 90.9091%; }
      .uk-max-width-10-11       { max-width: 90.9091%; }
      .uk-child-width-10-11 > :not([class*='uk-width']) { width: 90.9091%; }
    

      .uk-width-9-11           { width: 81.8182%; }
      .uk-min-width-9-11       { min-width: 81.8182%; }
      .uk-max-width-9-11       { max-width: 81.8182%; }
      .uk-child-width-9-11 > :not([class*='uk-width']) { width: 81.8182%; }
    

      .uk-width-8-11           { width: 72.7273%; }
      .uk-min-width-8-11       { min-width: 72.7273%; }
      .uk-max-width-8-11       { max-width: 72.7273%; }
      .uk-child-width-8-11 > :not([class*='uk-width']) { width: 72.7273%; }
    

      .uk-width-7-11           { width: 63.6364%; }
      .uk-min-width-7-11       { min-width: 63.6364%; }
      .uk-max-width-7-11       { max-width: 63.6364%; }
      .uk-child-width-7-11 > :not([class*='uk-width']) { width: 63.6364%; }
    

      .uk-width-6-11           { width: 54.5455%; }
      .uk-min-width-6-11       { min-width: 54.5455%; }
      .uk-max-width-6-11       { max-width: 54.5455%; }
      .uk-child-width-6-11 > :not([class*='uk-width']) { width: 54.5455%; }
    

      .uk-width-5-11           { width: 45.4545%; }
      .uk-min-width-5-11       { min-width: 45.4545%; }
      .uk-max-width-5-11       { max-width: 45.4545%; }
      .uk-child-width-5-11 > :not([class*='uk-width']) { width: 45.4545%; }
    

      .uk-width-4-11           { width: 36.3636%; }
      .uk-min-width-4-11       { min-width: 36.3636%; }
      .uk-max-width-4-11       { max-width: 36.3636%; }
      .uk-child-width-4-11 > :not([class*='uk-width']) { width: 36.3636%; }
    

      .uk-width-3-11           { width: 27.2727%; }
      .uk-min-width-3-11       { min-width: 27.2727%; }
      .uk-max-width-3-11       { max-width: 27.2727%; }
      .uk-child-width-3-11 > :not([class*='uk-width']) { width: 27.2727%; }
    

      .uk-width-2-11           { width: 18.1818%; }
      .uk-min-width-2-11       { min-width: 18.1818%; }
      .uk-max-width-2-11       { max-width: 18.1818%; }
      .uk-child-width-2-11 > :not([class*='uk-width']) { width: 18.1818%; }
    

      .uk-width-1-11           { width: 9.0909%; }
      .uk-min-width-1-11       { min-width: 9.0909%; }
      .uk-max-width-1-11       { max-width: 9.0909%; }
      .uk-child-width-1-11 > :not([class*='uk-width']) { width: 9.0909%; }
    

      .uk-width-9-10           { width: 90%; }
      .uk-min-width-9-10       { min-width: 90%; }
      .uk-max-width-9-10       { max-width: 90%; }
      .uk-child-width-9-10 > :not([class*='uk-width']) { width: 90%; }
    

      .uk-width-8-10           { width: 80%; }
      .uk-min-width-8-10       { min-width: 80%; }
      .uk-max-width-8-10       { max-width: 80%; }
      .uk-child-width-8-10 > :not([class*='uk-width']) { width: 80%; }
    

      .uk-width-7-10           { width: 70%; }
      .uk-min-width-7-10       { min-width: 70%; }
      .uk-max-width-7-10       { max-width: 70%; }
      .uk-child-width-7-10 > :not([class*='uk-width']) { width: 70%; }
    

      .uk-width-6-10           { width: 60%; }
      .uk-min-width-6-10       { min-width: 60%; }
      .uk-max-width-6-10       { max-width: 60%; }
      .uk-child-width-6-10 > :not([class*='uk-width']) { width: 60%; }
    

      .uk-width-5-10           { width: 50%; }
      .uk-min-width-5-10       { min-width: 50%; }
      .uk-max-width-5-10       { max-width: 50%; }
      .uk-child-width-5-10 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-4-10           { width: 40%; }
      .uk-min-width-4-10       { min-width: 40%; }
      .uk-max-width-4-10       { max-width: 40%; }
      .uk-child-width-4-10 > :not([class*='uk-width']) { width: 40%; }
    

      .uk-width-3-10           { width: 30%; }
      .uk-min-width-3-10       { min-width: 30%; }
      .uk-max-width-3-10       { max-width: 30%; }
      .uk-child-width-3-10 > :not([class*='uk-width']) { width: 30%; }
    

      .uk-width-2-10           { width: 20%; }
      .uk-min-width-2-10       { min-width: 20%; }
      .uk-max-width-2-10       { max-width: 20%; }
      .uk-child-width-2-10 > :not([class*='uk-width']) { width: 20%; }
    

      .uk-width-1-10           { width: 10%; }
      .uk-min-width-1-10       { min-width: 10%; }
      .uk-max-width-1-10       { max-width: 10%; }
      .uk-child-width-1-10 > :not([class*='uk-width']) { width: 10%; }
    

      .uk-width-8-9           { width: 88.8889%; }
      .uk-min-width-8-9       { min-width: 88.8889%; }
      .uk-max-width-8-9       { max-width: 88.8889%; }
      .uk-child-width-8-9 > :not([class*='uk-width']) { width: 88.8889%; }
    

      .uk-width-7-9           { width: 77.7778%; }
      .uk-min-width-7-9       { min-width: 77.7778%; }
      .uk-max-width-7-9       { max-width: 77.7778%; }
      .uk-child-width-7-9 > :not([class*='uk-width']) { width: 77.7778%; }
    

      .uk-width-6-9           { width: 66.6667%; }
      .uk-min-width-6-9       { min-width: 66.6667%; }
      .uk-max-width-6-9       { max-width: 66.6667%; }
      .uk-child-width-6-9 > :not([class*='uk-width']) { width: 66.6667%; }
    

      .uk-width-5-9           { width: 55.5556%; }
      .uk-min-width-5-9       { min-width: 55.5556%; }
      .uk-max-width-5-9       { max-width: 55.5556%; }
      .uk-child-width-5-9 > :not([class*='uk-width']) { width: 55.5556%; }
    

      .uk-width-4-9           { width: 44.4444%; }
      .uk-min-width-4-9       { min-width: 44.4444%; }
      .uk-max-width-4-9       { max-width: 44.4444%; }
      .uk-child-width-4-9 > :not([class*='uk-width']) { width: 44.4444%; }
    

      .uk-width-3-9           { width: 33.3333%; }
      .uk-min-width-3-9       { min-width: 33.3333%; }
      .uk-max-width-3-9       { max-width: 33.3333%; }
      .uk-child-width-3-9 > :not([class*='uk-width']) { width: 33.3333%; }
    

      .uk-width-2-9           { width: 22.2222%; }
      .uk-min-width-2-9       { min-width: 22.2222%; }
      .uk-max-width-2-9       { max-width: 22.2222%; }
      .uk-child-width-2-9 > :not([class*='uk-width']) { width: 22.2222%; }
    

      .uk-width-1-9           { width: 11.1111%; }
      .uk-min-width-1-9       { min-width: 11.1111%; }
      .uk-max-width-1-9       { max-width: 11.1111%; }
      .uk-child-width-1-9 > :not([class*='uk-width']) { width: 11.1111%; }
    

      .uk-width-7-8           { width: 87.5%; }
      .uk-min-width-7-8       { min-width: 87.5%; }
      .uk-max-width-7-8       { max-width: 87.5%; }
      .uk-child-width-7-8 > :not([class*='uk-width']) { width: 87.5%; }
    

      .uk-width-6-8           { width: 75%; }
      .uk-min-width-6-8       { min-width: 75%; }
      .uk-max-width-6-8       { max-width: 75%; }
      .uk-child-width-6-8 > :not([class*='uk-width']) { width: 75%; }
    

      .uk-width-5-8           { width: 62.5%; }
      .uk-min-width-5-8       { min-width: 62.5%; }
      .uk-max-width-5-8       { max-width: 62.5%; }
      .uk-child-width-5-8 > :not([class*='uk-width']) { width: 62.5%; }
    

      .uk-width-4-8           { width: 50%; }
      .uk-min-width-4-8       { min-width: 50%; }
      .uk-max-width-4-8       { max-width: 50%; }
      .uk-child-width-4-8 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-3-8           { width: 37.5%; }
      .uk-min-width-3-8       { min-width: 37.5%; }
      .uk-max-width-3-8       { max-width: 37.5%; }
      .uk-child-width-3-8 > :not([class*='uk-width']) { width: 37.5%; }
    

      .uk-width-2-8           { width: 25%; }
      .uk-min-width-2-8       { min-width: 25%; }
      .uk-max-width-2-8       { max-width: 25%; }
      .uk-child-width-2-8 > :not([class*='uk-width']) { width: 25%; }
    

      .uk-width-1-8           { width: 12.5%; }
      .uk-min-width-1-8       { min-width: 12.5%; }
      .uk-max-width-1-8       { max-width: 12.5%; }
      .uk-child-width-1-8 > :not([class*='uk-width']) { width: 12.5%; }
    

      .uk-width-6-7           { width: 85.7143%; }
      .uk-min-width-6-7       { min-width: 85.7143%; }
      .uk-max-width-6-7       { max-width: 85.7143%; }
      .uk-child-width-6-7 > :not([class*='uk-width']) { width: 85.7143%; }
    

      .uk-width-5-7           { width: 71.4286%; }
      .uk-min-width-5-7       { min-width: 71.4286%; }
      .uk-max-width-5-7       { max-width: 71.4286%; }
      .uk-child-width-5-7 > :not([class*='uk-width']) { width: 71.4286%; }
    

      .uk-width-4-7           { width: 57.1429%; }
      .uk-min-width-4-7       { min-width: 57.1429%; }
      .uk-max-width-4-7       { max-width: 57.1429%; }
      .uk-child-width-4-7 > :not([class*='uk-width']) { width: 57.1429%; }
    

      .uk-width-3-7           { width: 42.8571%; }
      .uk-min-width-3-7       { min-width: 42.8571%; }
      .uk-max-width-3-7       { max-width: 42.8571%; }
      .uk-child-width-3-7 > :not([class*='uk-width']) { width: 42.8571%; }
    

      .uk-width-2-7           { width: 28.5714%; }
      .uk-min-width-2-7       { min-width: 28.5714%; }
      .uk-max-width-2-7       { max-width: 28.5714%; }
      .uk-child-width-2-7 > :not([class*='uk-width']) { width: 28.5714%; }
    

      .uk-width-1-7           { width: 14.2857%; }
      .uk-min-width-1-7       { min-width: 14.2857%; }
      .uk-max-width-1-7       { max-width: 14.2857%; }
      .uk-child-width-1-7 > :not([class*='uk-width']) { width: 14.2857%; }
    

      .uk-width-5-6           { width: 83.3333%; }
      .uk-min-width-5-6       { min-width: 83.3333%; }
      .uk-max-width-5-6       { max-width: 83.3333%; }
      .uk-child-width-5-6 > :not([class*='uk-width']) { width: 83.3333%; }
    

      .uk-width-4-6           { width: 66.6667%; }
      .uk-min-width-4-6       { min-width: 66.6667%; }
      .uk-max-width-4-6       { max-width: 66.6667%; }
      .uk-child-width-4-6 > :not([class*='uk-width']) { width: 66.6667%; }
    

      .uk-width-3-6           { width: 50%; }
      .uk-min-width-3-6       { min-width: 50%; }
      .uk-max-width-3-6       { max-width: 50%; }
      .uk-child-width-3-6 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-2-6           { width: 33.3333%; }
      .uk-min-width-2-6       { min-width: 33.3333%; }
      .uk-max-width-2-6       { max-width: 33.3333%; }
      .uk-child-width-2-6 > :not([class*='uk-width']) { width: 33.3333%; }
    

      .uk-width-1-6           { width: 16.6667%; }
      .uk-min-width-1-6       { min-width: 16.6667%; }
      .uk-max-width-1-6       { max-width: 16.6667%; }
      .uk-child-width-1-6 > :not([class*='uk-width']) { width: 16.6667%; }
    

      .uk-width-4-5           { width: 80%; }
      .uk-min-width-4-5       { min-width: 80%; }
      .uk-max-width-4-5       { max-width: 80%; }
      .uk-child-width-4-5 > :not([class*='uk-width']) { width: 80%; }
    

      .uk-width-3-5           { width: 60%; }
      .uk-min-width-3-5       { min-width: 60%; }
      .uk-max-width-3-5       { max-width: 60%; }
      .uk-child-width-3-5 > :not([class*='uk-width']) { width: 60%; }
    

      .uk-width-2-5           { width: 40%; }
      .uk-min-width-2-5       { min-width: 40%; }
      .uk-max-width-2-5       { max-width: 40%; }
      .uk-child-width-2-5 > :not([class*='uk-width']) { width: 40%; }
    

      .uk-width-1-5           { width: 20%; }
      .uk-min-width-1-5       { min-width: 20%; }
      .uk-max-width-1-5       { max-width: 20%; }
      .uk-child-width-1-5 > :not([class*='uk-width']) { width: 20%; }
    

      .uk-width-3-4           { width: 75%; }
      .uk-min-width-3-4       { min-width: 75%; }
      .uk-max-width-3-4       { max-width: 75%; }
      .uk-child-width-3-4 > :not([class*='uk-width']) { width: 75%; }
    

      .uk-width-2-4           { width: 50%; }
      .uk-min-width-2-4       { min-width: 50%; }
      .uk-max-width-2-4       { max-width: 50%; }
      .uk-child-width-2-4 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-1-4           { width: 25%; }
      .uk-min-width-1-4       { min-width: 25%; }
      .uk-max-width-1-4       { max-width: 25%; }
      .uk-child-width-1-4 > :not([class*='uk-width']) { width: 25%; }
    

      .uk-width-2-3           { width: 66.6667%; }
      .uk-min-width-2-3       { min-width: 66.6667%; }
      .uk-max-width-2-3       { max-width: 66.6667%; }
      .uk-child-width-2-3 > :not([class*='uk-width']) { width: 66.6667%; }
    

      .uk-width-1-3           { width: 33.3333%; }
      .uk-min-width-1-3       { min-width: 33.3333%; }
      .uk-max-width-1-3       { max-width: 33.3333%; }
      .uk-child-width-1-3 > :not([class*='uk-width']) { width: 33.3333%; }
    

      .uk-width-1-2           { width: 50%; }
      .uk-min-width-1-2       { min-width: 50%; }
      .uk-max-width-1-2       { max-width: 50%; }
      .uk-child-width-1-2 > :not([class*='uk-width']) { width: 50%; }
    

      .uk-width-1-1           { width: 100%; }
      .uk-min-width-1-1       { min-width: 100%; }
      .uk-max-width-1-1       { max-width: 100%; }
      .uk-child-width-1-1 > :not([class*='uk-width']) { width: 100%; }
    


       .uk-width-inhertial          { width: inhertial; }
       .uk-min-width-inhertial      { min-width: inhertial; }
       .uk-max-width-inhertial      { max-width: inhertial; }
       .uk-child-width-inhertial > :not([class*='uk-width']) { width: inhertial; }
      
       .uk-width-initial          { width: initial; }
       .uk-min-width-initial      { min-width: initial; }
       .uk-max-width-initial      { max-width: initial; }
       .uk-child-width-initial > :not([class*='uk-width']) { width: initial; }
      
       .uk-width-auto          { width: auto; }
       .uk-min-width-auto      { min-width: auto; }
       .uk-max-width-auto      { max-width: auto; }
       .uk-child-width-auto > :not([class*='uk-width']) { width: auto; }
      
       .uk-width-fit-content          { width: fit-content; }
       .uk-min-width-fit-content      { min-width: fit-content; }
       .uk-max-width-fit-content      { max-width: fit-content; }
       .uk-child-width-fit-content > :not([class*='uk-width']) { width: fit-content; }
      
       .uk-width-max-content          { width: max-content; }
       .uk-min-width-max-content      { min-width: max-content; }
       .uk-max-width-max-content      { max-width: max-content; }
       .uk-child-width-max-content > :not([class*='uk-width']) { width: max-content; }
      
       .uk-width-min-content          { width: min-content; }
       .uk-min-width-min-content      { min-width: min-content; }
       .uk-max-width-min-content      { max-width: min-content; }
       .uk-child-width-min-content > :not([class*='uk-width']) { width: min-content; }
      
       .uk-width-none          { width: none; }
       .uk-min-width-none      { min-width: none; }
       .uk-max-width-none      { max-width: none; }
       .uk-child-width-none > :not([class*='uk-width']) { width: none; }
      
       .uk-width-revert          { width: revert; }
       .uk-min-width-revert      { min-width: revert; }
       .uk-max-width-revert      { max-width: revert; }
       .uk-child-width-revert > :not([class*='uk-width']) { width: revert; }
      
       .uk-width-unset          { width: unset; }
       .uk-min-width-unset      { min-width: unset; }
       .uk-max-width-unset      { max-width: unset; }
       .uk-child-width-unset > :not([class*='uk-width']) { width: unset; }
      


       .uk-width-small           { width: 150px; }
       .uk-min-width-small       { min-width: 150px; }
       .uk-max-width-small       { max-width: 150px; }
       .uk-child-width-small > :not([class*='uk-width']) { width: 150px; }
      
       .uk-width-medium           { width: 300px; }
       .uk-min-width-medium       { min-width: 300px; }
       .uk-max-width-medium       { max-width: 300px; }
       .uk-child-width-medium > :not([class*='uk-width']) { width: 300px; }
      
       .uk-width-large           { width: 450px; }
       .uk-min-width-large       { min-width: 450px; }
       .uk-max-width-large       { max-width: 450px; }
       .uk-child-width-large > :not([class*='uk-width']) { width: 450px; }
      
       .uk-width-xlarge           { width: 600px; }
       .uk-min-width-xlarge       { min-width: 600px; }
       .uk-max-width-xlarge       { max-width: 600px; }
       .uk-child-width-xlarge > :not([class*='uk-width']) { width: 600px; }
      
       .uk-width-2xlarge           { width: 750px; }
       .uk-min-width-2xlarge       { min-width: 750px; }
       .uk-max-width-2xlarge       { max-width: 750px; }
       .uk-child-width-2xlarge > :not([class*='uk-width']) { width: 750px; }
      

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 640px) {

  
      .uk-width-11-12\@s           { width: 91.6667%; }
      .uk-min-width-11-12\@s       { min-width: 91.6667%; }
      .uk-max-width-11-12\@s       { max-width: 91.6667%; }
      .uk-child-width-11-12\@s > :not([class*='uk-width']) { width: 91.6667%; }
      

      .uk-width-10-12\@s           { width: 83.3333%; }
      .uk-min-width-10-12\@s       { min-width: 83.3333%; }
      .uk-max-width-10-12\@s       { max-width: 83.3333%; }
      .uk-child-width-10-12\@s > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-9-12\@s           { width: 75%; }
      .uk-min-width-9-12\@s       { min-width: 75%; }
      .uk-max-width-9-12\@s       { max-width: 75%; }
      .uk-child-width-9-12\@s > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-8-12\@s           { width: 66.6667%; }
      .uk-min-width-8-12\@s       { min-width: 66.6667%; }
      .uk-max-width-8-12\@s       { max-width: 66.6667%; }
      .uk-child-width-8-12\@s > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-7-12\@s           { width: 58.3333%; }
      .uk-min-width-7-12\@s       { min-width: 58.3333%; }
      .uk-max-width-7-12\@s       { max-width: 58.3333%; }
      .uk-child-width-7-12\@s > :not([class*='uk-width']) { width: 58.3333%; }
      

      .uk-width-6-12\@s           { width: 50%; }
      .uk-min-width-6-12\@s       { min-width: 50%; }
      .uk-max-width-6-12\@s       { max-width: 50%; }
      .uk-child-width-6-12\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-5-12\@s           { width: 41.6667%; }
      .uk-min-width-5-12\@s       { min-width: 41.6667%; }
      .uk-max-width-5-12\@s       { max-width: 41.6667%; }
      .uk-child-width-5-12\@s > :not([class*='uk-width']) { width: 41.6667%; }
      

      .uk-width-4-12\@s           { width: 33.3333%; }
      .uk-min-width-4-12\@s       { min-width: 33.3333%; }
      .uk-max-width-4-12\@s       { max-width: 33.3333%; }
      .uk-child-width-4-12\@s > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-3-12\@s           { width: 25%; }
      .uk-min-width-3-12\@s       { min-width: 25%; }
      .uk-max-width-3-12\@s       { max-width: 25%; }
      .uk-child-width-3-12\@s > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-12\@s           { width: 16.6667%; }
      .uk-min-width-2-12\@s       { min-width: 16.6667%; }
      .uk-max-width-2-12\@s       { max-width: 16.6667%; }
      .uk-child-width-2-12\@s > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-1-12\@s           { width: 8.3333%; }
      .uk-min-width-1-12\@s       { min-width: 8.3333%; }
      .uk-max-width-1-12\@s       { max-width: 8.3333%; }
      .uk-child-width-1-12\@s > :not([class*='uk-width']) { width: 8.3333%; }
      

      .uk-width-10-11\@s           { width: 90.9091%; }
      .uk-min-width-10-11\@s       { min-width: 90.9091%; }
      .uk-max-width-10-11\@s       { max-width: 90.9091%; }
      .uk-child-width-10-11\@s > :not([class*='uk-width']) { width: 90.9091%; }
      

      .uk-width-9-11\@s           { width: 81.8182%; }
      .uk-min-width-9-11\@s       { min-width: 81.8182%; }
      .uk-max-width-9-11\@s       { max-width: 81.8182%; }
      .uk-child-width-9-11\@s > :not([class*='uk-width']) { width: 81.8182%; }
      

      .uk-width-8-11\@s           { width: 72.7273%; }
      .uk-min-width-8-11\@s       { min-width: 72.7273%; }
      .uk-max-width-8-11\@s       { max-width: 72.7273%; }
      .uk-child-width-8-11\@s > :not([class*='uk-width']) { width: 72.7273%; }
      

      .uk-width-7-11\@s           { width: 63.6364%; }
      .uk-min-width-7-11\@s       { min-width: 63.6364%; }
      .uk-max-width-7-11\@s       { max-width: 63.6364%; }
      .uk-child-width-7-11\@s > :not([class*='uk-width']) { width: 63.6364%; }
      

      .uk-width-6-11\@s           { width: 54.5455%; }
      .uk-min-width-6-11\@s       { min-width: 54.5455%; }
      .uk-max-width-6-11\@s       { max-width: 54.5455%; }
      .uk-child-width-6-11\@s > :not([class*='uk-width']) { width: 54.5455%; }
      

      .uk-width-5-11\@s           { width: 45.4545%; }
      .uk-min-width-5-11\@s       { min-width: 45.4545%; }
      .uk-max-width-5-11\@s       { max-width: 45.4545%; }
      .uk-child-width-5-11\@s > :not([class*='uk-width']) { width: 45.4545%; }
      

      .uk-width-4-11\@s           { width: 36.3636%; }
      .uk-min-width-4-11\@s       { min-width: 36.3636%; }
      .uk-max-width-4-11\@s       { max-width: 36.3636%; }
      .uk-child-width-4-11\@s > :not([class*='uk-width']) { width: 36.3636%; }
      

      .uk-width-3-11\@s           { width: 27.2727%; }
      .uk-min-width-3-11\@s       { min-width: 27.2727%; }
      .uk-max-width-3-11\@s       { max-width: 27.2727%; }
      .uk-child-width-3-11\@s > :not([class*='uk-width']) { width: 27.2727%; }
      

      .uk-width-2-11\@s           { width: 18.1818%; }
      .uk-min-width-2-11\@s       { min-width: 18.1818%; }
      .uk-max-width-2-11\@s       { max-width: 18.1818%; }
      .uk-child-width-2-11\@s > :not([class*='uk-width']) { width: 18.1818%; }
      

      .uk-width-1-11\@s           { width: 9.0909%; }
      .uk-min-width-1-11\@s       { min-width: 9.0909%; }
      .uk-max-width-1-11\@s       { max-width: 9.0909%; }
      .uk-child-width-1-11\@s > :not([class*='uk-width']) { width: 9.0909%; }
      

      .uk-width-9-10\@s           { width: 90%; }
      .uk-min-width-9-10\@s       { min-width: 90%; }
      .uk-max-width-9-10\@s       { max-width: 90%; }
      .uk-child-width-9-10\@s > :not([class*='uk-width']) { width: 90%; }
      

      .uk-width-8-10\@s           { width: 80%; }
      .uk-min-width-8-10\@s       { min-width: 80%; }
      .uk-max-width-8-10\@s       { max-width: 80%; }
      .uk-child-width-8-10\@s > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-7-10\@s           { width: 70%; }
      .uk-min-width-7-10\@s       { min-width: 70%; }
      .uk-max-width-7-10\@s       { max-width: 70%; }
      .uk-child-width-7-10\@s > :not([class*='uk-width']) { width: 70%; }
      

      .uk-width-6-10\@s           { width: 60%; }
      .uk-min-width-6-10\@s       { min-width: 60%; }
      .uk-max-width-6-10\@s       { max-width: 60%; }
      .uk-child-width-6-10\@s > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-5-10\@s           { width: 50%; }
      .uk-min-width-5-10\@s       { min-width: 50%; }
      .uk-max-width-5-10\@s       { max-width: 50%; }
      .uk-child-width-5-10\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-4-10\@s           { width: 40%; }
      .uk-min-width-4-10\@s       { min-width: 40%; }
      .uk-max-width-4-10\@s       { max-width: 40%; }
      .uk-child-width-4-10\@s > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-3-10\@s           { width: 30%; }
      .uk-min-width-3-10\@s       { min-width: 30%; }
      .uk-max-width-3-10\@s       { max-width: 30%; }
      .uk-child-width-3-10\@s > :not([class*='uk-width']) { width: 30%; }
      

      .uk-width-2-10\@s           { width: 20%; }
      .uk-min-width-2-10\@s       { min-width: 20%; }
      .uk-max-width-2-10\@s       { max-width: 20%; }
      .uk-child-width-2-10\@s > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-1-10\@s           { width: 10%; }
      .uk-min-width-1-10\@s       { min-width: 10%; }
      .uk-max-width-1-10\@s       { max-width: 10%; }
      .uk-child-width-1-10\@s > :not([class*='uk-width']) { width: 10%; }
      

      .uk-width-8-9\@s           { width: 88.8889%; }
      .uk-min-width-8-9\@s       { min-width: 88.8889%; }
      .uk-max-width-8-9\@s       { max-width: 88.8889%; }
      .uk-child-width-8-9\@s > :not([class*='uk-width']) { width: 88.8889%; }
      

      .uk-width-7-9\@s           { width: 77.7778%; }
      .uk-min-width-7-9\@s       { min-width: 77.7778%; }
      .uk-max-width-7-9\@s       { max-width: 77.7778%; }
      .uk-child-width-7-9\@s > :not([class*='uk-width']) { width: 77.7778%; }
      

      .uk-width-6-9\@s           { width: 66.6667%; }
      .uk-min-width-6-9\@s       { min-width: 66.6667%; }
      .uk-max-width-6-9\@s       { max-width: 66.6667%; }
      .uk-child-width-6-9\@s > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-5-9\@s           { width: 55.5556%; }
      .uk-min-width-5-9\@s       { min-width: 55.5556%; }
      .uk-max-width-5-9\@s       { max-width: 55.5556%; }
      .uk-child-width-5-9\@s > :not([class*='uk-width']) { width: 55.5556%; }
      

      .uk-width-4-9\@s           { width: 44.4444%; }
      .uk-min-width-4-9\@s       { min-width: 44.4444%; }
      .uk-max-width-4-9\@s       { max-width: 44.4444%; }
      .uk-child-width-4-9\@s > :not([class*='uk-width']) { width: 44.4444%; }
      

      .uk-width-3-9\@s           { width: 33.3333%; }
      .uk-min-width-3-9\@s       { min-width: 33.3333%; }
      .uk-max-width-3-9\@s       { max-width: 33.3333%; }
      .uk-child-width-3-9\@s > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-2-9\@s           { width: 22.2222%; }
      .uk-min-width-2-9\@s       { min-width: 22.2222%; }
      .uk-max-width-2-9\@s       { max-width: 22.2222%; }
      .uk-child-width-2-9\@s > :not([class*='uk-width']) { width: 22.2222%; }
      

      .uk-width-1-9\@s           { width: 11.1111%; }
      .uk-min-width-1-9\@s       { min-width: 11.1111%; }
      .uk-max-width-1-9\@s       { max-width: 11.1111%; }
      .uk-child-width-1-9\@s > :not([class*='uk-width']) { width: 11.1111%; }
      

      .uk-width-7-8\@s           { width: 87.5%; }
      .uk-min-width-7-8\@s       { min-width: 87.5%; }
      .uk-max-width-7-8\@s       { max-width: 87.5%; }
      .uk-child-width-7-8\@s > :not([class*='uk-width']) { width: 87.5%; }
      

      .uk-width-6-8\@s           { width: 75%; }
      .uk-min-width-6-8\@s       { min-width: 75%; }
      .uk-max-width-6-8\@s       { max-width: 75%; }
      .uk-child-width-6-8\@s > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-5-8\@s           { width: 62.5%; }
      .uk-min-width-5-8\@s       { min-width: 62.5%; }
      .uk-max-width-5-8\@s       { max-width: 62.5%; }
      .uk-child-width-5-8\@s > :not([class*='uk-width']) { width: 62.5%; }
      

      .uk-width-4-8\@s           { width: 50%; }
      .uk-min-width-4-8\@s       { min-width: 50%; }
      .uk-max-width-4-8\@s       { max-width: 50%; }
      .uk-child-width-4-8\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-3-8\@s           { width: 37.5%; }
      .uk-min-width-3-8\@s       { min-width: 37.5%; }
      .uk-max-width-3-8\@s       { max-width: 37.5%; }
      .uk-child-width-3-8\@s > :not([class*='uk-width']) { width: 37.5%; }
      

      .uk-width-2-8\@s           { width: 25%; }
      .uk-min-width-2-8\@s       { min-width: 25%; }
      .uk-max-width-2-8\@s       { max-width: 25%; }
      .uk-child-width-2-8\@s > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-1-8\@s           { width: 12.5%; }
      .uk-min-width-1-8\@s       { min-width: 12.5%; }
      .uk-max-width-1-8\@s       { max-width: 12.5%; }
      .uk-child-width-1-8\@s > :not([class*='uk-width']) { width: 12.5%; }
      

      .uk-width-6-7\@s           { width: 85.7143%; }
      .uk-min-width-6-7\@s       { min-width: 85.7143%; }
      .uk-max-width-6-7\@s       { max-width: 85.7143%; }
      .uk-child-width-6-7\@s > :not([class*='uk-width']) { width: 85.7143%; }
      

      .uk-width-5-7\@s           { width: 71.4286%; }
      .uk-min-width-5-7\@s       { min-width: 71.4286%; }
      .uk-max-width-5-7\@s       { max-width: 71.4286%; }
      .uk-child-width-5-7\@s > :not([class*='uk-width']) { width: 71.4286%; }
      

      .uk-width-4-7\@s           { width: 57.1429%; }
      .uk-min-width-4-7\@s       { min-width: 57.1429%; }
      .uk-max-width-4-7\@s       { max-width: 57.1429%; }
      .uk-child-width-4-7\@s > :not([class*='uk-width']) { width: 57.1429%; }
      

      .uk-width-3-7\@s           { width: 42.8571%; }
      .uk-min-width-3-7\@s       { min-width: 42.8571%; }
      .uk-max-width-3-7\@s       { max-width: 42.8571%; }
      .uk-child-width-3-7\@s > :not([class*='uk-width']) { width: 42.8571%; }
      

      .uk-width-2-7\@s           { width: 28.5714%; }
      .uk-min-width-2-7\@s       { min-width: 28.5714%; }
      .uk-max-width-2-7\@s       { max-width: 28.5714%; }
      .uk-child-width-2-7\@s > :not([class*='uk-width']) { width: 28.5714%; }
      

      .uk-width-1-7\@s           { width: 14.2857%; }
      .uk-min-width-1-7\@s       { min-width: 14.2857%; }
      .uk-max-width-1-7\@s       { max-width: 14.2857%; }
      .uk-child-width-1-7\@s > :not([class*='uk-width']) { width: 14.2857%; }
      

      .uk-width-5-6\@s           { width: 83.3333%; }
      .uk-min-width-5-6\@s       { min-width: 83.3333%; }
      .uk-max-width-5-6\@s       { max-width: 83.3333%; }
      .uk-child-width-5-6\@s > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-4-6\@s           { width: 66.6667%; }
      .uk-min-width-4-6\@s       { min-width: 66.6667%; }
      .uk-max-width-4-6\@s       { max-width: 66.6667%; }
      .uk-child-width-4-6\@s > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-3-6\@s           { width: 50%; }
      .uk-min-width-3-6\@s       { min-width: 50%; }
      .uk-max-width-3-6\@s       { max-width: 50%; }
      .uk-child-width-3-6\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-2-6\@s           { width: 33.3333%; }
      .uk-min-width-2-6\@s       { min-width: 33.3333%; }
      .uk-max-width-2-6\@s       { max-width: 33.3333%; }
      .uk-child-width-2-6\@s > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-6\@s           { width: 16.6667%; }
      .uk-min-width-1-6\@s       { min-width: 16.6667%; }
      .uk-max-width-1-6\@s       { max-width: 16.6667%; }
      .uk-child-width-1-6\@s > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-4-5\@s           { width: 80%; }
      .uk-min-width-4-5\@s       { min-width: 80%; }
      .uk-max-width-4-5\@s       { max-width: 80%; }
      .uk-child-width-4-5\@s > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-3-5\@s           { width: 60%; }
      .uk-min-width-3-5\@s       { min-width: 60%; }
      .uk-max-width-3-5\@s       { max-width: 60%; }
      .uk-child-width-3-5\@s > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-2-5\@s           { width: 40%; }
      .uk-min-width-2-5\@s       { min-width: 40%; }
      .uk-max-width-2-5\@s       { max-width: 40%; }
      .uk-child-width-2-5\@s > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-1-5\@s           { width: 20%; }
      .uk-min-width-1-5\@s       { min-width: 20%; }
      .uk-max-width-1-5\@s       { max-width: 20%; }
      .uk-child-width-1-5\@s > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-3-4\@s           { width: 75%; }
      .uk-min-width-3-4\@s       { min-width: 75%; }
      .uk-max-width-3-4\@s       { max-width: 75%; }
      .uk-child-width-3-4\@s > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-2-4\@s           { width: 50%; }
      .uk-min-width-2-4\@s       { min-width: 50%; }
      .uk-max-width-2-4\@s       { max-width: 50%; }
      .uk-child-width-2-4\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-4\@s           { width: 25%; }
      .uk-min-width-1-4\@s       { min-width: 25%; }
      .uk-max-width-1-4\@s       { max-width: 25%; }
      .uk-child-width-1-4\@s > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-3\@s           { width: 66.6667%; }
      .uk-min-width-2-3\@s       { min-width: 66.6667%; }
      .uk-max-width-2-3\@s       { max-width: 66.6667%; }
      .uk-child-width-2-3\@s > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-1-3\@s           { width: 33.3333%; }
      .uk-min-width-1-3\@s       { min-width: 33.3333%; }
      .uk-max-width-1-3\@s       { max-width: 33.3333%; }
      .uk-child-width-1-3\@s > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-2\@s           { width: 50%; }
      .uk-min-width-1-2\@s       { min-width: 50%; }
      .uk-max-width-1-2\@s       { max-width: 50%; }
      .uk-child-width-1-2\@s > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-1\@s           { width: 100%; }
      .uk-min-width-1-1\@s       { min-width: 100%; }
      .uk-max-width-1-1\@s       { max-width: 100%; }
      .uk-child-width-1-1\@s > :not([class*='uk-width']) { width: 100%; }
      
  
  
         .uk-width-inhertial\@s           { width: inhertial; }
         .uk-min-width-inhertial\@s       { min-width: inhertial; }
         .uk-max-width-inhertial\@s       { max-width: inhertial; }
         .uk-child-width-inhertial\@s > :not([class*='uk-width']) { width: inhertial; }
        
         .uk-width-initial\@s           { width: initial; }
         .uk-min-width-initial\@s       { min-width: initial; }
         .uk-max-width-initial\@s       { max-width: initial; }
         .uk-child-width-initial\@s > :not([class*='uk-width']) { width: initial; }
        
         .uk-width-auto\@s           { width: auto; }
         .uk-min-width-auto\@s       { min-width: auto; }
         .uk-max-width-auto\@s       { max-width: auto; }
         .uk-child-width-auto\@s > :not([class*='uk-width']) { width: auto; }
        
         .uk-width-fit-content\@s           { width: fit-content; }
         .uk-min-width-fit-content\@s       { min-width: fit-content; }
         .uk-max-width-fit-content\@s       { max-width: fit-content; }
         .uk-child-width-fit-content\@s > :not([class*='uk-width']) { width: fit-content; }
        
         .uk-width-max-content\@s           { width: max-content; }
         .uk-min-width-max-content\@s       { min-width: max-content; }
         .uk-max-width-max-content\@s       { max-width: max-content; }
         .uk-child-width-max-content\@s > :not([class*='uk-width']) { width: max-content; }
        
         .uk-width-min-content\@s           { width: min-content; }
         .uk-min-width-min-content\@s       { min-width: min-content; }
         .uk-max-width-min-content\@s       { max-width: min-content; }
         .uk-child-width-min-content\@s > :not([class*='uk-width']) { width: min-content; }
        
         .uk-width-none\@s           { width: none; }
         .uk-min-width-none\@s       { min-width: none; }
         .uk-max-width-none\@s       { max-width: none; }
         .uk-child-width-none\@s > :not([class*='uk-width']) { width: none; }
        
         .uk-width-revert\@s           { width: revert; }
         .uk-min-width-revert\@s       { min-width: revert; }
         .uk-max-width-revert\@s       { max-width: revert; }
         .uk-child-width-revert\@s > :not([class*='uk-width']) { width: revert; }
        
         .uk-width-unset\@s           { width: unset; }
         .uk-min-width-unset\@s       { min-width: unset; }
         .uk-max-width-unset\@s       { max-width: unset; }
         .uk-child-width-unset\@s > :not([class*='uk-width']) { width: unset; }
        
  
  
         .uk-width-small\@s           { width: 150px; }
         .uk-min-width-small\@s       { min-width: 150px; }
         .uk-max-width-small\@s       { max-width: 150px; }
         .uk-child-width-small\@s > :not([class*='uk-width']) { width: 150px; }
        
         .uk-width-medium\@s           { width: 300px; }
         .uk-min-width-medium\@s       { min-width: 300px; }
         .uk-max-width-medium\@s       { max-width: 300px; }
         .uk-child-width-medium\@s > :not([class*='uk-width']) { width: 300px; }
        
         .uk-width-large\@s           { width: 450px; }
         .uk-min-width-large\@s       { min-width: 450px; }
         .uk-max-width-large\@s       { max-width: 450px; }
         .uk-child-width-large\@s > :not([class*='uk-width']) { width: 450px; }
        
         .uk-width-xlarge\@s           { width: 600px; }
         .uk-min-width-xlarge\@s       { min-width: 600px; }
         .uk-max-width-xlarge\@s       { max-width: 600px; }
         .uk-child-width-xlarge\@s > :not([class*='uk-width']) { width: 600px; }
        
         .uk-width-2xlarge\@s           { width: 750px; }
         .uk-min-width-2xlarge\@s       { min-width: 750px; }
         .uk-max-width-2xlarge\@s       { max-width: 750px; }
         .uk-child-width-2xlarge\@s > :not([class*='uk-width']) { width: 750px; }
        

  .uk-min-width-fill\@s { min-width: ${size[j]}; }
  .uk-max-width-fill\@s { max-width: ${size[j]}; }

  .uk-width-fill\@s     { width: -webkit-fill-available !important; }
  .uk-width-expand\@s   { flex: 1; min-width: 1px; min-width: 100%; }

  .uk-child-width-fill\@s > :not([class*='uk-width']) { width: -webkit-fill-available !important; }
  .uk-child-width-expand\@s > :not([class*='uk-width']) { flex: 1; min-width: 1px; min-width: 100%; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 960px) {

  
      .uk-width-11-12\@m           { width: 91.6667%; }
      .uk-min-width-11-12\@m       { min-width: 91.6667%; }
      .uk-max-width-11-12\@m       { max-width: 91.6667%; }
      .uk-child-width-11-12\@m > :not([class*='uk-width']) { width: 91.6667%; }
      

      .uk-width-10-12\@m           { width: 83.3333%; }
      .uk-min-width-10-12\@m       { min-width: 83.3333%; }
      .uk-max-width-10-12\@m       { max-width: 83.3333%; }
      .uk-child-width-10-12\@m > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-9-12\@m           { width: 75%; }
      .uk-min-width-9-12\@m       { min-width: 75%; }
      .uk-max-width-9-12\@m       { max-width: 75%; }
      .uk-child-width-9-12\@m > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-8-12\@m           { width: 66.6667%; }
      .uk-min-width-8-12\@m       { min-width: 66.6667%; }
      .uk-max-width-8-12\@m       { max-width: 66.6667%; }
      .uk-child-width-8-12\@m > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-7-12\@m           { width: 58.3333%; }
      .uk-min-width-7-12\@m       { min-width: 58.3333%; }
      .uk-max-width-7-12\@m       { max-width: 58.3333%; }
      .uk-child-width-7-12\@m > :not([class*='uk-width']) { width: 58.3333%; }
      

      .uk-width-6-12\@m           { width: 50%; }
      .uk-min-width-6-12\@m       { min-width: 50%; }
      .uk-max-width-6-12\@m       { max-width: 50%; }
      .uk-child-width-6-12\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-5-12\@m           { width: 41.6667%; }
      .uk-min-width-5-12\@m       { min-width: 41.6667%; }
      .uk-max-width-5-12\@m       { max-width: 41.6667%; }
      .uk-child-width-5-12\@m > :not([class*='uk-width']) { width: 41.6667%; }
      

      .uk-width-4-12\@m           { width: 33.3333%; }
      .uk-min-width-4-12\@m       { min-width: 33.3333%; }
      .uk-max-width-4-12\@m       { max-width: 33.3333%; }
      .uk-child-width-4-12\@m > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-3-12\@m           { width: 25%; }
      .uk-min-width-3-12\@m       { min-width: 25%; }
      .uk-max-width-3-12\@m       { max-width: 25%; }
      .uk-child-width-3-12\@m > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-12\@m           { width: 16.6667%; }
      .uk-min-width-2-12\@m       { min-width: 16.6667%; }
      .uk-max-width-2-12\@m       { max-width: 16.6667%; }
      .uk-child-width-2-12\@m > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-1-12\@m           { width: 8.3333%; }
      .uk-min-width-1-12\@m       { min-width: 8.3333%; }
      .uk-max-width-1-12\@m       { max-width: 8.3333%; }
      .uk-child-width-1-12\@m > :not([class*='uk-width']) { width: 8.3333%; }
      

      .uk-width-10-11\@m           { width: 90.9091%; }
      .uk-min-width-10-11\@m       { min-width: 90.9091%; }
      .uk-max-width-10-11\@m       { max-width: 90.9091%; }
      .uk-child-width-10-11\@m > :not([class*='uk-width']) { width: 90.9091%; }
      

      .uk-width-9-11\@m           { width: 81.8182%; }
      .uk-min-width-9-11\@m       { min-width: 81.8182%; }
      .uk-max-width-9-11\@m       { max-width: 81.8182%; }
      .uk-child-width-9-11\@m > :not([class*='uk-width']) { width: 81.8182%; }
      

      .uk-width-8-11\@m           { width: 72.7273%; }
      .uk-min-width-8-11\@m       { min-width: 72.7273%; }
      .uk-max-width-8-11\@m       { max-width: 72.7273%; }
      .uk-child-width-8-11\@m > :not([class*='uk-width']) { width: 72.7273%; }
      

      .uk-width-7-11\@m           { width: 63.6364%; }
      .uk-min-width-7-11\@m       { min-width: 63.6364%; }
      .uk-max-width-7-11\@m       { max-width: 63.6364%; }
      .uk-child-width-7-11\@m > :not([class*='uk-width']) { width: 63.6364%; }
      

      .uk-width-6-11\@m           { width: 54.5455%; }
      .uk-min-width-6-11\@m       { min-width: 54.5455%; }
      .uk-max-width-6-11\@m       { max-width: 54.5455%; }
      .uk-child-width-6-11\@m > :not([class*='uk-width']) { width: 54.5455%; }
      

      .uk-width-5-11\@m           { width: 45.4545%; }
      .uk-min-width-5-11\@m       { min-width: 45.4545%; }
      .uk-max-width-5-11\@m       { max-width: 45.4545%; }
      .uk-child-width-5-11\@m > :not([class*='uk-width']) { width: 45.4545%; }
      

      .uk-width-4-11\@m           { width: 36.3636%; }
      .uk-min-width-4-11\@m       { min-width: 36.3636%; }
      .uk-max-width-4-11\@m       { max-width: 36.3636%; }
      .uk-child-width-4-11\@m > :not([class*='uk-width']) { width: 36.3636%; }
      

      .uk-width-3-11\@m           { width: 27.2727%; }
      .uk-min-width-3-11\@m       { min-width: 27.2727%; }
      .uk-max-width-3-11\@m       { max-width: 27.2727%; }
      .uk-child-width-3-11\@m > :not([class*='uk-width']) { width: 27.2727%; }
      

      .uk-width-2-11\@m           { width: 18.1818%; }
      .uk-min-width-2-11\@m       { min-width: 18.1818%; }
      .uk-max-width-2-11\@m       { max-width: 18.1818%; }
      .uk-child-width-2-11\@m > :not([class*='uk-width']) { width: 18.1818%; }
      

      .uk-width-1-11\@m           { width: 9.0909%; }
      .uk-min-width-1-11\@m       { min-width: 9.0909%; }
      .uk-max-width-1-11\@m       { max-width: 9.0909%; }
      .uk-child-width-1-11\@m > :not([class*='uk-width']) { width: 9.0909%; }
      

      .uk-width-9-10\@m           { width: 90%; }
      .uk-min-width-9-10\@m       { min-width: 90%; }
      .uk-max-width-9-10\@m       { max-width: 90%; }
      .uk-child-width-9-10\@m > :not([class*='uk-width']) { width: 90%; }
      

      .uk-width-8-10\@m           { width: 80%; }
      .uk-min-width-8-10\@m       { min-width: 80%; }
      .uk-max-width-8-10\@m       { max-width: 80%; }
      .uk-child-width-8-10\@m > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-7-10\@m           { width: 70%; }
      .uk-min-width-7-10\@m       { min-width: 70%; }
      .uk-max-width-7-10\@m       { max-width: 70%; }
      .uk-child-width-7-10\@m > :not([class*='uk-width']) { width: 70%; }
      

      .uk-width-6-10\@m           { width: 60%; }
      .uk-min-width-6-10\@m       { min-width: 60%; }
      .uk-max-width-6-10\@m       { max-width: 60%; }
      .uk-child-width-6-10\@m > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-5-10\@m           { width: 50%; }
      .uk-min-width-5-10\@m       { min-width: 50%; }
      .uk-max-width-5-10\@m       { max-width: 50%; }
      .uk-child-width-5-10\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-4-10\@m           { width: 40%; }
      .uk-min-width-4-10\@m       { min-width: 40%; }
      .uk-max-width-4-10\@m       { max-width: 40%; }
      .uk-child-width-4-10\@m > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-3-10\@m           { width: 30%; }
      .uk-min-width-3-10\@m       { min-width: 30%; }
      .uk-max-width-3-10\@m       { max-width: 30%; }
      .uk-child-width-3-10\@m > :not([class*='uk-width']) { width: 30%; }
      

      .uk-width-2-10\@m           { width: 20%; }
      .uk-min-width-2-10\@m       { min-width: 20%; }
      .uk-max-width-2-10\@m       { max-width: 20%; }
      .uk-child-width-2-10\@m > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-1-10\@m           { width: 10%; }
      .uk-min-width-1-10\@m       { min-width: 10%; }
      .uk-max-width-1-10\@m       { max-width: 10%; }
      .uk-child-width-1-10\@m > :not([class*='uk-width']) { width: 10%; }
      

      .uk-width-8-9\@m           { width: 88.8889%; }
      .uk-min-width-8-9\@m       { min-width: 88.8889%; }
      .uk-max-width-8-9\@m       { max-width: 88.8889%; }
      .uk-child-width-8-9\@m > :not([class*='uk-width']) { width: 88.8889%; }
      

      .uk-width-7-9\@m           { width: 77.7778%; }
      .uk-min-width-7-9\@m       { min-width: 77.7778%; }
      .uk-max-width-7-9\@m       { max-width: 77.7778%; }
      .uk-child-width-7-9\@m > :not([class*='uk-width']) { width: 77.7778%; }
      

      .uk-width-6-9\@m           { width: 66.6667%; }
      .uk-min-width-6-9\@m       { min-width: 66.6667%; }
      .uk-max-width-6-9\@m       { max-width: 66.6667%; }
      .uk-child-width-6-9\@m > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-5-9\@m           { width: 55.5556%; }
      .uk-min-width-5-9\@m       { min-width: 55.5556%; }
      .uk-max-width-5-9\@m       { max-width: 55.5556%; }
      .uk-child-width-5-9\@m > :not([class*='uk-width']) { width: 55.5556%; }
      

      .uk-width-4-9\@m           { width: 44.4444%; }
      .uk-min-width-4-9\@m       { min-width: 44.4444%; }
      .uk-max-width-4-9\@m       { max-width: 44.4444%; }
      .uk-child-width-4-9\@m > :not([class*='uk-width']) { width: 44.4444%; }
      

      .uk-width-3-9\@m           { width: 33.3333%; }
      .uk-min-width-3-9\@m       { min-width: 33.3333%; }
      .uk-max-width-3-9\@m       { max-width: 33.3333%; }
      .uk-child-width-3-9\@m > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-2-9\@m           { width: 22.2222%; }
      .uk-min-width-2-9\@m       { min-width: 22.2222%; }
      .uk-max-width-2-9\@m       { max-width: 22.2222%; }
      .uk-child-width-2-9\@m > :not([class*='uk-width']) { width: 22.2222%; }
      

      .uk-width-1-9\@m           { width: 11.1111%; }
      .uk-min-width-1-9\@m       { min-width: 11.1111%; }
      .uk-max-width-1-9\@m       { max-width: 11.1111%; }
      .uk-child-width-1-9\@m > :not([class*='uk-width']) { width: 11.1111%; }
      

      .uk-width-7-8\@m           { width: 87.5%; }
      .uk-min-width-7-8\@m       { min-width: 87.5%; }
      .uk-max-width-7-8\@m       { max-width: 87.5%; }
      .uk-child-width-7-8\@m > :not([class*='uk-width']) { width: 87.5%; }
      

      .uk-width-6-8\@m           { width: 75%; }
      .uk-min-width-6-8\@m       { min-width: 75%; }
      .uk-max-width-6-8\@m       { max-width: 75%; }
      .uk-child-width-6-8\@m > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-5-8\@m           { width: 62.5%; }
      .uk-min-width-5-8\@m       { min-width: 62.5%; }
      .uk-max-width-5-8\@m       { max-width: 62.5%; }
      .uk-child-width-5-8\@m > :not([class*='uk-width']) { width: 62.5%; }
      

      .uk-width-4-8\@m           { width: 50%; }
      .uk-min-width-4-8\@m       { min-width: 50%; }
      .uk-max-width-4-8\@m       { max-width: 50%; }
      .uk-child-width-4-8\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-3-8\@m           { width: 37.5%; }
      .uk-min-width-3-8\@m       { min-width: 37.5%; }
      .uk-max-width-3-8\@m       { max-width: 37.5%; }
      .uk-child-width-3-8\@m > :not([class*='uk-width']) { width: 37.5%; }
      

      .uk-width-2-8\@m           { width: 25%; }
      .uk-min-width-2-8\@m       { min-width: 25%; }
      .uk-max-width-2-8\@m       { max-width: 25%; }
      .uk-child-width-2-8\@m > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-1-8\@m           { width: 12.5%; }
      .uk-min-width-1-8\@m       { min-width: 12.5%; }
      .uk-max-width-1-8\@m       { max-width: 12.5%; }
      .uk-child-width-1-8\@m > :not([class*='uk-width']) { width: 12.5%; }
      

      .uk-width-6-7\@m           { width: 85.7143%; }
      .uk-min-width-6-7\@m       { min-width: 85.7143%; }
      .uk-max-width-6-7\@m       { max-width: 85.7143%; }
      .uk-child-width-6-7\@m > :not([class*='uk-width']) { width: 85.7143%; }
      

      .uk-width-5-7\@m           { width: 71.4286%; }
      .uk-min-width-5-7\@m       { min-width: 71.4286%; }
      .uk-max-width-5-7\@m       { max-width: 71.4286%; }
      .uk-child-width-5-7\@m > :not([class*='uk-width']) { width: 71.4286%; }
      

      .uk-width-4-7\@m           { width: 57.1429%; }
      .uk-min-width-4-7\@m       { min-width: 57.1429%; }
      .uk-max-width-4-7\@m       { max-width: 57.1429%; }
      .uk-child-width-4-7\@m > :not([class*='uk-width']) { width: 57.1429%; }
      

      .uk-width-3-7\@m           { width: 42.8571%; }
      .uk-min-width-3-7\@m       { min-width: 42.8571%; }
      .uk-max-width-3-7\@m       { max-width: 42.8571%; }
      .uk-child-width-3-7\@m > :not([class*='uk-width']) { width: 42.8571%; }
      

      .uk-width-2-7\@m           { width: 28.5714%; }
      .uk-min-width-2-7\@m       { min-width: 28.5714%; }
      .uk-max-width-2-7\@m       { max-width: 28.5714%; }
      .uk-child-width-2-7\@m > :not([class*='uk-width']) { width: 28.5714%; }
      

      .uk-width-1-7\@m           { width: 14.2857%; }
      .uk-min-width-1-7\@m       { min-width: 14.2857%; }
      .uk-max-width-1-7\@m       { max-width: 14.2857%; }
      .uk-child-width-1-7\@m > :not([class*='uk-width']) { width: 14.2857%; }
      

      .uk-width-5-6\@m           { width: 83.3333%; }
      .uk-min-width-5-6\@m       { min-width: 83.3333%; }
      .uk-max-width-5-6\@m       { max-width: 83.3333%; }
      .uk-child-width-5-6\@m > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-4-6\@m           { width: 66.6667%; }
      .uk-min-width-4-6\@m       { min-width: 66.6667%; }
      .uk-max-width-4-6\@m       { max-width: 66.6667%; }
      .uk-child-width-4-6\@m > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-3-6\@m           { width: 50%; }
      .uk-min-width-3-6\@m       { min-width: 50%; }
      .uk-max-width-3-6\@m       { max-width: 50%; }
      .uk-child-width-3-6\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-2-6\@m           { width: 33.3333%; }
      .uk-min-width-2-6\@m       { min-width: 33.3333%; }
      .uk-max-width-2-6\@m       { max-width: 33.3333%; }
      .uk-child-width-2-6\@m > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-6\@m           { width: 16.6667%; }
      .uk-min-width-1-6\@m       { min-width: 16.6667%; }
      .uk-max-width-1-6\@m       { max-width: 16.6667%; }
      .uk-child-width-1-6\@m > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-4-5\@m           { width: 80%; }
      .uk-min-width-4-5\@m       { min-width: 80%; }
      .uk-max-width-4-5\@m       { max-width: 80%; }
      .uk-child-width-4-5\@m > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-3-5\@m           { width: 60%; }
      .uk-min-width-3-5\@m       { min-width: 60%; }
      .uk-max-width-3-5\@m       { max-width: 60%; }
      .uk-child-width-3-5\@m > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-2-5\@m           { width: 40%; }
      .uk-min-width-2-5\@m       { min-width: 40%; }
      .uk-max-width-2-5\@m       { max-width: 40%; }
      .uk-child-width-2-5\@m > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-1-5\@m           { width: 20%; }
      .uk-min-width-1-5\@m       { min-width: 20%; }
      .uk-max-width-1-5\@m       { max-width: 20%; }
      .uk-child-width-1-5\@m > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-3-4\@m           { width: 75%; }
      .uk-min-width-3-4\@m       { min-width: 75%; }
      .uk-max-width-3-4\@m       { max-width: 75%; }
      .uk-child-width-3-4\@m > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-2-4\@m           { width: 50%; }
      .uk-min-width-2-4\@m       { min-width: 50%; }
      .uk-max-width-2-4\@m       { max-width: 50%; }
      .uk-child-width-2-4\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-4\@m           { width: 25%; }
      .uk-min-width-1-4\@m       { min-width: 25%; }
      .uk-max-width-1-4\@m       { max-width: 25%; }
      .uk-child-width-1-4\@m > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-3\@m           { width: 66.6667%; }
      .uk-min-width-2-3\@m       { min-width: 66.6667%; }
      .uk-max-width-2-3\@m       { max-width: 66.6667%; }
      .uk-child-width-2-3\@m > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-1-3\@m           { width: 33.3333%; }
      .uk-min-width-1-3\@m       { min-width: 33.3333%; }
      .uk-max-width-1-3\@m       { max-width: 33.3333%; }
      .uk-child-width-1-3\@m > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-2\@m           { width: 50%; }
      .uk-min-width-1-2\@m       { min-width: 50%; }
      .uk-max-width-1-2\@m       { max-width: 50%; }
      .uk-child-width-1-2\@m > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-1\@m           { width: 100%; }
      .uk-min-width-1-1\@m       { min-width: 100%; }
      .uk-max-width-1-1\@m       { max-width: 100%; }
      .uk-child-width-1-1\@m > :not([class*='uk-width']) { width: 100%; }
      
  
  
         .uk-width-inhertial\@m           { width: inhertial; }
         .uk-min-width-inhertial\@m       { min-width: inhertial; }
         .uk-max-width-inhertial\@m       { max-width: inhertial; }
         .uk-child-width-inhertial\@m > :not([class*='uk-width']) { width: inhertial; }
        
         .uk-width-initial\@m           { width: initial; }
         .uk-min-width-initial\@m       { min-width: initial; }
         .uk-max-width-initial\@m       { max-width: initial; }
         .uk-child-width-initial\@m > :not([class*='uk-width']) { width: initial; }
        
         .uk-width-auto\@m           { width: auto; }
         .uk-min-width-auto\@m       { min-width: auto; }
         .uk-max-width-auto\@m       { max-width: auto; }
         .uk-child-width-auto\@m > :not([class*='uk-width']) { width: auto; }
        
         .uk-width-fit-content\@m           { width: fit-content; }
         .uk-min-width-fit-content\@m       { min-width: fit-content; }
         .uk-max-width-fit-content\@m       { max-width: fit-content; }
         .uk-child-width-fit-content\@m > :not([class*='uk-width']) { width: fit-content; }
        
         .uk-width-max-content\@m           { width: max-content; }
         .uk-min-width-max-content\@m       { min-width: max-content; }
         .uk-max-width-max-content\@m       { max-width: max-content; }
         .uk-child-width-max-content\@m > :not([class*='uk-width']) { width: max-content; }
        
         .uk-width-min-content\@m           { width: min-content; }
         .uk-min-width-min-content\@m       { min-width: min-content; }
         .uk-max-width-min-content\@m       { max-width: min-content; }
         .uk-child-width-min-content\@m > :not([class*='uk-width']) { width: min-content; }
        
         .uk-width-none\@m           { width: none; }
         .uk-min-width-none\@m       { min-width: none; }
         .uk-max-width-none\@m       { max-width: none; }
         .uk-child-width-none\@m > :not([class*='uk-width']) { width: none; }
        
         .uk-width-revert\@m           { width: revert; }
         .uk-min-width-revert\@m       { min-width: revert; }
         .uk-max-width-revert\@m       { max-width: revert; }
         .uk-child-width-revert\@m > :not([class*='uk-width']) { width: revert; }
        
         .uk-width-unset\@m           { width: unset; }
         .uk-min-width-unset\@m       { min-width: unset; }
         .uk-max-width-unset\@m       { max-width: unset; }
         .uk-child-width-unset\@m > :not([class*='uk-width']) { width: unset; }
        
  
  
         .uk-width-small\@m           { width: 150px; }
         .uk-min-width-small\@m       { min-width: 150px; }
         .uk-max-width-small\@m       { max-width: 150px; }
         .uk-child-width-small\@m > :not([class*='uk-width']) { width: 150px; }
        
         .uk-width-medium\@m           { width: 300px; }
         .uk-min-width-medium\@m       { min-width: 300px; }
         .uk-max-width-medium\@m       { max-width: 300px; }
         .uk-child-width-medium\@m > :not([class*='uk-width']) { width: 300px; }
        
         .uk-width-large\@m           { width: 450px; }
         .uk-min-width-large\@m       { min-width: 450px; }
         .uk-max-width-large\@m       { max-width: 450px; }
         .uk-child-width-large\@m > :not([class*='uk-width']) { width: 450px; }
        
         .uk-width-xlarge\@m           { width: 600px; }
         .uk-min-width-xlarge\@m       { min-width: 600px; }
         .uk-max-width-xlarge\@m       { max-width: 600px; }
         .uk-child-width-xlarge\@m > :not([class*='uk-width']) { width: 600px; }
        
         .uk-width-2xlarge\@m           { width: 750px; }
         .uk-min-width-2xlarge\@m       { min-width: 750px; }
         .uk-max-width-2xlarge\@m       { max-width: 750px; }
         .uk-child-width-2xlarge\@m > :not([class*='uk-width']) { width: 750px; }
        

  .uk-min-width-fill\@m { min-width: ${size[j]}; }
  .uk-max-width-fill\@m { max-width: ${size[j]}; }

  .uk-width-fill\@m     { width: -webkit-fill-available !important; }
  .uk-width-expand\@m   { flex: 1; min-width: 1px; min-width: 100%; }

  .uk-child-width-fill\@m > :not([class*='uk-width']) { width: -webkit-fill-available !important; }
  .uk-child-width-expand\@m > :not([class*='uk-width']) { flex: 1; min-width: 1px; min-width: 100%; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1200px) {

  
      .uk-width-11-12\@l           { width: 91.6667%; }
      .uk-min-width-11-12\@l       { min-width: 91.6667%; }
      .uk-max-width-11-12\@l       { max-width: 91.6667%; }
      .uk-child-width-11-12\@l > :not([class*='uk-width']) { width: 91.6667%; }
      

      .uk-width-10-12\@l           { width: 83.3333%; }
      .uk-min-width-10-12\@l       { min-width: 83.3333%; }
      .uk-max-width-10-12\@l       { max-width: 83.3333%; }
      .uk-child-width-10-12\@l > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-9-12\@l           { width: 75%; }
      .uk-min-width-9-12\@l       { min-width: 75%; }
      .uk-max-width-9-12\@l       { max-width: 75%; }
      .uk-child-width-9-12\@l > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-8-12\@l           { width: 66.6667%; }
      .uk-min-width-8-12\@l       { min-width: 66.6667%; }
      .uk-max-width-8-12\@l       { max-width: 66.6667%; }
      .uk-child-width-8-12\@l > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-7-12\@l           { width: 58.3333%; }
      .uk-min-width-7-12\@l       { min-width: 58.3333%; }
      .uk-max-width-7-12\@l       { max-width: 58.3333%; }
      .uk-child-width-7-12\@l > :not([class*='uk-width']) { width: 58.3333%; }
      

      .uk-width-6-12\@l           { width: 50%; }
      .uk-min-width-6-12\@l       { min-width: 50%; }
      .uk-max-width-6-12\@l       { max-width: 50%; }
      .uk-child-width-6-12\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-5-12\@l           { width: 41.6667%; }
      .uk-min-width-5-12\@l       { min-width: 41.6667%; }
      .uk-max-width-5-12\@l       { max-width: 41.6667%; }
      .uk-child-width-5-12\@l > :not([class*='uk-width']) { width: 41.6667%; }
      

      .uk-width-4-12\@l           { width: 33.3333%; }
      .uk-min-width-4-12\@l       { min-width: 33.3333%; }
      .uk-max-width-4-12\@l       { max-width: 33.3333%; }
      .uk-child-width-4-12\@l > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-3-12\@l           { width: 25%; }
      .uk-min-width-3-12\@l       { min-width: 25%; }
      .uk-max-width-3-12\@l       { max-width: 25%; }
      .uk-child-width-3-12\@l > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-12\@l           { width: 16.6667%; }
      .uk-min-width-2-12\@l       { min-width: 16.6667%; }
      .uk-max-width-2-12\@l       { max-width: 16.6667%; }
      .uk-child-width-2-12\@l > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-1-12\@l           { width: 8.3333%; }
      .uk-min-width-1-12\@l       { min-width: 8.3333%; }
      .uk-max-width-1-12\@l       { max-width: 8.3333%; }
      .uk-child-width-1-12\@l > :not([class*='uk-width']) { width: 8.3333%; }
      

      .uk-width-10-11\@l           { width: 90.9091%; }
      .uk-min-width-10-11\@l       { min-width: 90.9091%; }
      .uk-max-width-10-11\@l       { max-width: 90.9091%; }
      .uk-child-width-10-11\@l > :not([class*='uk-width']) { width: 90.9091%; }
      

      .uk-width-9-11\@l           { width: 81.8182%; }
      .uk-min-width-9-11\@l       { min-width: 81.8182%; }
      .uk-max-width-9-11\@l       { max-width: 81.8182%; }
      .uk-child-width-9-11\@l > :not([class*='uk-width']) { width: 81.8182%; }
      

      .uk-width-8-11\@l           { width: 72.7273%; }
      .uk-min-width-8-11\@l       { min-width: 72.7273%; }
      .uk-max-width-8-11\@l       { max-width: 72.7273%; }
      .uk-child-width-8-11\@l > :not([class*='uk-width']) { width: 72.7273%; }
      

      .uk-width-7-11\@l           { width: 63.6364%; }
      .uk-min-width-7-11\@l       { min-width: 63.6364%; }
      .uk-max-width-7-11\@l       { max-width: 63.6364%; }
      .uk-child-width-7-11\@l > :not([class*='uk-width']) { width: 63.6364%; }
      

      .uk-width-6-11\@l           { width: 54.5455%; }
      .uk-min-width-6-11\@l       { min-width: 54.5455%; }
      .uk-max-width-6-11\@l       { max-width: 54.5455%; }
      .uk-child-width-6-11\@l > :not([class*='uk-width']) { width: 54.5455%; }
      

      .uk-width-5-11\@l           { width: 45.4545%; }
      .uk-min-width-5-11\@l       { min-width: 45.4545%; }
      .uk-max-width-5-11\@l       { max-width: 45.4545%; }
      .uk-child-width-5-11\@l > :not([class*='uk-width']) { width: 45.4545%; }
      

      .uk-width-4-11\@l           { width: 36.3636%; }
      .uk-min-width-4-11\@l       { min-width: 36.3636%; }
      .uk-max-width-4-11\@l       { max-width: 36.3636%; }
      .uk-child-width-4-11\@l > :not([class*='uk-width']) { width: 36.3636%; }
      

      .uk-width-3-11\@l           { width: 27.2727%; }
      .uk-min-width-3-11\@l       { min-width: 27.2727%; }
      .uk-max-width-3-11\@l       { max-width: 27.2727%; }
      .uk-child-width-3-11\@l > :not([class*='uk-width']) { width: 27.2727%; }
      

      .uk-width-2-11\@l           { width: 18.1818%; }
      .uk-min-width-2-11\@l       { min-width: 18.1818%; }
      .uk-max-width-2-11\@l       { max-width: 18.1818%; }
      .uk-child-width-2-11\@l > :not([class*='uk-width']) { width: 18.1818%; }
      

      .uk-width-1-11\@l           { width: 9.0909%; }
      .uk-min-width-1-11\@l       { min-width: 9.0909%; }
      .uk-max-width-1-11\@l       { max-width: 9.0909%; }
      .uk-child-width-1-11\@l > :not([class*='uk-width']) { width: 9.0909%; }
      

      .uk-width-9-10\@l           { width: 90%; }
      .uk-min-width-9-10\@l       { min-width: 90%; }
      .uk-max-width-9-10\@l       { max-width: 90%; }
      .uk-child-width-9-10\@l > :not([class*='uk-width']) { width: 90%; }
      

      .uk-width-8-10\@l           { width: 80%; }
      .uk-min-width-8-10\@l       { min-width: 80%; }
      .uk-max-width-8-10\@l       { max-width: 80%; }
      .uk-child-width-8-10\@l > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-7-10\@l           { width: 70%; }
      .uk-min-width-7-10\@l       { min-width: 70%; }
      .uk-max-width-7-10\@l       { max-width: 70%; }
      .uk-child-width-7-10\@l > :not([class*='uk-width']) { width: 70%; }
      

      .uk-width-6-10\@l           { width: 60%; }
      .uk-min-width-6-10\@l       { min-width: 60%; }
      .uk-max-width-6-10\@l       { max-width: 60%; }
      .uk-child-width-6-10\@l > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-5-10\@l           { width: 50%; }
      .uk-min-width-5-10\@l       { min-width: 50%; }
      .uk-max-width-5-10\@l       { max-width: 50%; }
      .uk-child-width-5-10\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-4-10\@l           { width: 40%; }
      .uk-min-width-4-10\@l       { min-width: 40%; }
      .uk-max-width-4-10\@l       { max-width: 40%; }
      .uk-child-width-4-10\@l > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-3-10\@l           { width: 30%; }
      .uk-min-width-3-10\@l       { min-width: 30%; }
      .uk-max-width-3-10\@l       { max-width: 30%; }
      .uk-child-width-3-10\@l > :not([class*='uk-width']) { width: 30%; }
      

      .uk-width-2-10\@l           { width: 20%; }
      .uk-min-width-2-10\@l       { min-width: 20%; }
      .uk-max-width-2-10\@l       { max-width: 20%; }
      .uk-child-width-2-10\@l > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-1-10\@l           { width: 10%; }
      .uk-min-width-1-10\@l       { min-width: 10%; }
      .uk-max-width-1-10\@l       { max-width: 10%; }
      .uk-child-width-1-10\@l > :not([class*='uk-width']) { width: 10%; }
      

      .uk-width-8-9\@l           { width: 88.8889%; }
      .uk-min-width-8-9\@l       { min-width: 88.8889%; }
      .uk-max-width-8-9\@l       { max-width: 88.8889%; }
      .uk-child-width-8-9\@l > :not([class*='uk-width']) { width: 88.8889%; }
      

      .uk-width-7-9\@l           { width: 77.7778%; }
      .uk-min-width-7-9\@l       { min-width: 77.7778%; }
      .uk-max-width-7-9\@l       { max-width: 77.7778%; }
      .uk-child-width-7-9\@l > :not([class*='uk-width']) { width: 77.7778%; }
      

      .uk-width-6-9\@l           { width: 66.6667%; }
      .uk-min-width-6-9\@l       { min-width: 66.6667%; }
      .uk-max-width-6-9\@l       { max-width: 66.6667%; }
      .uk-child-width-6-9\@l > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-5-9\@l           { width: 55.5556%; }
      .uk-min-width-5-9\@l       { min-width: 55.5556%; }
      .uk-max-width-5-9\@l       { max-width: 55.5556%; }
      .uk-child-width-5-9\@l > :not([class*='uk-width']) { width: 55.5556%; }
      

      .uk-width-4-9\@l           { width: 44.4444%; }
      .uk-min-width-4-9\@l       { min-width: 44.4444%; }
      .uk-max-width-4-9\@l       { max-width: 44.4444%; }
      .uk-child-width-4-9\@l > :not([class*='uk-width']) { width: 44.4444%; }
      

      .uk-width-3-9\@l           { width: 33.3333%; }
      .uk-min-width-3-9\@l       { min-width: 33.3333%; }
      .uk-max-width-3-9\@l       { max-width: 33.3333%; }
      .uk-child-width-3-9\@l > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-2-9\@l           { width: 22.2222%; }
      .uk-min-width-2-9\@l       { min-width: 22.2222%; }
      .uk-max-width-2-9\@l       { max-width: 22.2222%; }
      .uk-child-width-2-9\@l > :not([class*='uk-width']) { width: 22.2222%; }
      

      .uk-width-1-9\@l           { width: 11.1111%; }
      .uk-min-width-1-9\@l       { min-width: 11.1111%; }
      .uk-max-width-1-9\@l       { max-width: 11.1111%; }
      .uk-child-width-1-9\@l > :not([class*='uk-width']) { width: 11.1111%; }
      

      .uk-width-7-8\@l           { width: 87.5%; }
      .uk-min-width-7-8\@l       { min-width: 87.5%; }
      .uk-max-width-7-8\@l       { max-width: 87.5%; }
      .uk-child-width-7-8\@l > :not([class*='uk-width']) { width: 87.5%; }
      

      .uk-width-6-8\@l           { width: 75%; }
      .uk-min-width-6-8\@l       { min-width: 75%; }
      .uk-max-width-6-8\@l       { max-width: 75%; }
      .uk-child-width-6-8\@l > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-5-8\@l           { width: 62.5%; }
      .uk-min-width-5-8\@l       { min-width: 62.5%; }
      .uk-max-width-5-8\@l       { max-width: 62.5%; }
      .uk-child-width-5-8\@l > :not([class*='uk-width']) { width: 62.5%; }
      

      .uk-width-4-8\@l           { width: 50%; }
      .uk-min-width-4-8\@l       { min-width: 50%; }
      .uk-max-width-4-8\@l       { max-width: 50%; }
      .uk-child-width-4-8\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-3-8\@l           { width: 37.5%; }
      .uk-min-width-3-8\@l       { min-width: 37.5%; }
      .uk-max-width-3-8\@l       { max-width: 37.5%; }
      .uk-child-width-3-8\@l > :not([class*='uk-width']) { width: 37.5%; }
      

      .uk-width-2-8\@l           { width: 25%; }
      .uk-min-width-2-8\@l       { min-width: 25%; }
      .uk-max-width-2-8\@l       { max-width: 25%; }
      .uk-child-width-2-8\@l > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-1-8\@l           { width: 12.5%; }
      .uk-min-width-1-8\@l       { min-width: 12.5%; }
      .uk-max-width-1-8\@l       { max-width: 12.5%; }
      .uk-child-width-1-8\@l > :not([class*='uk-width']) { width: 12.5%; }
      

      .uk-width-6-7\@l           { width: 85.7143%; }
      .uk-min-width-6-7\@l       { min-width: 85.7143%; }
      .uk-max-width-6-7\@l       { max-width: 85.7143%; }
      .uk-child-width-6-7\@l > :not([class*='uk-width']) { width: 85.7143%; }
      

      .uk-width-5-7\@l           { width: 71.4286%; }
      .uk-min-width-5-7\@l       { min-width: 71.4286%; }
      .uk-max-width-5-7\@l       { max-width: 71.4286%; }
      .uk-child-width-5-7\@l > :not([class*='uk-width']) { width: 71.4286%; }
      

      .uk-width-4-7\@l           { width: 57.1429%; }
      .uk-min-width-4-7\@l       { min-width: 57.1429%; }
      .uk-max-width-4-7\@l       { max-width: 57.1429%; }
      .uk-child-width-4-7\@l > :not([class*='uk-width']) { width: 57.1429%; }
      

      .uk-width-3-7\@l           { width: 42.8571%; }
      .uk-min-width-3-7\@l       { min-width: 42.8571%; }
      .uk-max-width-3-7\@l       { max-width: 42.8571%; }
      .uk-child-width-3-7\@l > :not([class*='uk-width']) { width: 42.8571%; }
      

      .uk-width-2-7\@l           { width: 28.5714%; }
      .uk-min-width-2-7\@l       { min-width: 28.5714%; }
      .uk-max-width-2-7\@l       { max-width: 28.5714%; }
      .uk-child-width-2-7\@l > :not([class*='uk-width']) { width: 28.5714%; }
      

      .uk-width-1-7\@l           { width: 14.2857%; }
      .uk-min-width-1-7\@l       { min-width: 14.2857%; }
      .uk-max-width-1-7\@l       { max-width: 14.2857%; }
      .uk-child-width-1-7\@l > :not([class*='uk-width']) { width: 14.2857%; }
      

      .uk-width-5-6\@l           { width: 83.3333%; }
      .uk-min-width-5-6\@l       { min-width: 83.3333%; }
      .uk-max-width-5-6\@l       { max-width: 83.3333%; }
      .uk-child-width-5-6\@l > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-4-6\@l           { width: 66.6667%; }
      .uk-min-width-4-6\@l       { min-width: 66.6667%; }
      .uk-max-width-4-6\@l       { max-width: 66.6667%; }
      .uk-child-width-4-6\@l > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-3-6\@l           { width: 50%; }
      .uk-min-width-3-6\@l       { min-width: 50%; }
      .uk-max-width-3-6\@l       { max-width: 50%; }
      .uk-child-width-3-6\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-2-6\@l           { width: 33.3333%; }
      .uk-min-width-2-6\@l       { min-width: 33.3333%; }
      .uk-max-width-2-6\@l       { max-width: 33.3333%; }
      .uk-child-width-2-6\@l > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-6\@l           { width: 16.6667%; }
      .uk-min-width-1-6\@l       { min-width: 16.6667%; }
      .uk-max-width-1-6\@l       { max-width: 16.6667%; }
      .uk-child-width-1-6\@l > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-4-5\@l           { width: 80%; }
      .uk-min-width-4-5\@l       { min-width: 80%; }
      .uk-max-width-4-5\@l       { max-width: 80%; }
      .uk-child-width-4-5\@l > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-3-5\@l           { width: 60%; }
      .uk-min-width-3-5\@l       { min-width: 60%; }
      .uk-max-width-3-5\@l       { max-width: 60%; }
      .uk-child-width-3-5\@l > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-2-5\@l           { width: 40%; }
      .uk-min-width-2-5\@l       { min-width: 40%; }
      .uk-max-width-2-5\@l       { max-width: 40%; }
      .uk-child-width-2-5\@l > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-1-5\@l           { width: 20%; }
      .uk-min-width-1-5\@l       { min-width: 20%; }
      .uk-max-width-1-5\@l       { max-width: 20%; }
      .uk-child-width-1-5\@l > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-3-4\@l           { width: 75%; }
      .uk-min-width-3-4\@l       { min-width: 75%; }
      .uk-max-width-3-4\@l       { max-width: 75%; }
      .uk-child-width-3-4\@l > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-2-4\@l           { width: 50%; }
      .uk-min-width-2-4\@l       { min-width: 50%; }
      .uk-max-width-2-4\@l       { max-width: 50%; }
      .uk-child-width-2-4\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-4\@l           { width: 25%; }
      .uk-min-width-1-4\@l       { min-width: 25%; }
      .uk-max-width-1-4\@l       { max-width: 25%; }
      .uk-child-width-1-4\@l > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-3\@l           { width: 66.6667%; }
      .uk-min-width-2-3\@l       { min-width: 66.6667%; }
      .uk-max-width-2-3\@l       { max-width: 66.6667%; }
      .uk-child-width-2-3\@l > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-1-3\@l           { width: 33.3333%; }
      .uk-min-width-1-3\@l       { min-width: 33.3333%; }
      .uk-max-width-1-3\@l       { max-width: 33.3333%; }
      .uk-child-width-1-3\@l > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-2\@l           { width: 50%; }
      .uk-min-width-1-2\@l       { min-width: 50%; }
      .uk-max-width-1-2\@l       { max-width: 50%; }
      .uk-child-width-1-2\@l > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-1\@l           { width: 100%; }
      .uk-min-width-1-1\@l       { min-width: 100%; }
      .uk-max-width-1-1\@l       { max-width: 100%; }
      .uk-child-width-1-1\@l > :not([class*='uk-width']) { width: 100%; }
      
  
  
         .uk-width-inhertial\@l           { width: inhertial; }
         .uk-min-width-inhertial\@l       { min-width: inhertial; }
         .uk-max-width-inhertial\@l       { max-width: inhertial; }
         .uk-child-width-inhertial\@l > :not([class*='uk-width']) { width: inhertial; }
        
         .uk-width-initial\@l           { width: initial; }
         .uk-min-width-initial\@l       { min-width: initial; }
         .uk-max-width-initial\@l       { max-width: initial; }
         .uk-child-width-initial\@l > :not([class*='uk-width']) { width: initial; }
        
         .uk-width-auto\@l           { width: auto; }
         .uk-min-width-auto\@l       { min-width: auto; }
         .uk-max-width-auto\@l       { max-width: auto; }
         .uk-child-width-auto\@l > :not([class*='uk-width']) { width: auto; }
        
         .uk-width-fit-content\@l           { width: fit-content; }
         .uk-min-width-fit-content\@l       { min-width: fit-content; }
         .uk-max-width-fit-content\@l       { max-width: fit-content; }
         .uk-child-width-fit-content\@l > :not([class*='uk-width']) { width: fit-content; }
        
         .uk-width-max-content\@l           { width: max-content; }
         .uk-min-width-max-content\@l       { min-width: max-content; }
         .uk-max-width-max-content\@l       { max-width: max-content; }
         .uk-child-width-max-content\@l > :not([class*='uk-width']) { width: max-content; }
        
         .uk-width-min-content\@l           { width: min-content; }
         .uk-min-width-min-content\@l       { min-width: min-content; }
         .uk-max-width-min-content\@l       { max-width: min-content; }
         .uk-child-width-min-content\@l > :not([class*='uk-width']) { width: min-content; }
        
         .uk-width-none\@l           { width: none; }
         .uk-min-width-none\@l       { min-width: none; }
         .uk-max-width-none\@l       { max-width: none; }
         .uk-child-width-none\@l > :not([class*='uk-width']) { width: none; }
        
         .uk-width-revert\@l           { width: revert; }
         .uk-min-width-revert\@l       { min-width: revert; }
         .uk-max-width-revert\@l       { max-width: revert; }
         .uk-child-width-revert\@l > :not([class*='uk-width']) { width: revert; }
        
         .uk-width-unset\@l           { width: unset; }
         .uk-min-width-unset\@l       { min-width: unset; }
         .uk-max-width-unset\@l       { max-width: unset; }
         .uk-child-width-unset\@l > :not([class*='uk-width']) { width: unset; }
        
  
  
         .uk-width-small\@l           { width: 150px; }
         .uk-min-width-small\@l       { min-width: 150px; }
         .uk-max-width-small\@l       { max-width: 150px; }
         .uk-child-width-small\@l > :not([class*='uk-width']) { width: 150px; }
        
         .uk-width-medium\@l           { width: 300px; }
         .uk-min-width-medium\@l       { min-width: 300px; }
         .uk-max-width-medium\@l       { max-width: 300px; }
         .uk-child-width-medium\@l > :not([class*='uk-width']) { width: 300px; }
        
         .uk-width-large\@l           { width: 450px; }
         .uk-min-width-large\@l       { min-width: 450px; }
         .uk-max-width-large\@l       { max-width: 450px; }
         .uk-child-width-large\@l > :not([class*='uk-width']) { width: 450px; }
        
         .uk-width-xlarge\@l           { width: 600px; }
         .uk-min-width-xlarge\@l       { min-width: 600px; }
         .uk-max-width-xlarge\@l       { max-width: 600px; }
         .uk-child-width-xlarge\@l > :not([class*='uk-width']) { width: 600px; }
        
         .uk-width-2xlarge\@l           { width: 750px; }
         .uk-min-width-2xlarge\@l       { min-width: 750px; }
         .uk-max-width-2xlarge\@l       { max-width: 750px; }
         .uk-child-width-2xlarge\@l > :not([class*='uk-width']) { width: 750px; }
        

  .uk-min-width-fill\@l { min-width: ${size[j]}; }
  .uk-max-width-fill\@l { max-width: ${size[j]}; }

  .uk-width-fill\@l     { width: -webkit-fill-available !important; }
  .uk-width-expand\@l   { flex: 1; min-width: 1px; min-width: 100%; }

  .uk-child-width-fill\@l > :not([class*='uk-width']) { width: -webkit-fill-available !important; }
  .uk-child-width-expand\@l > :not([class*='uk-width']) { flex: 1; min-width: 1px; min-width: 100%; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1600px) {

  
      .uk-width-11-12\@xl           { width: 91.6667%; }
      .uk-min-width-11-12\@xl       { min-width: 91.6667%; }
      .uk-max-width-11-12\@xl       { max-width: 91.6667%; }
      .uk-child-width-11-12\@xl > :not([class*='uk-width']) { width: 91.6667%; }
      

      .uk-width-10-12\@xl           { width: 83.3333%; }
      .uk-min-width-10-12\@xl       { min-width: 83.3333%; }
      .uk-max-width-10-12\@xl       { max-width: 83.3333%; }
      .uk-child-width-10-12\@xl > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-9-12\@xl           { width: 75%; }
      .uk-min-width-9-12\@xl       { min-width: 75%; }
      .uk-max-width-9-12\@xl       { max-width: 75%; }
      .uk-child-width-9-12\@xl > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-8-12\@xl           { width: 66.6667%; }
      .uk-min-width-8-12\@xl       { min-width: 66.6667%; }
      .uk-max-width-8-12\@xl       { max-width: 66.6667%; }
      .uk-child-width-8-12\@xl > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-7-12\@xl           { width: 58.3333%; }
      .uk-min-width-7-12\@xl       { min-width: 58.3333%; }
      .uk-max-width-7-12\@xl       { max-width: 58.3333%; }
      .uk-child-width-7-12\@xl > :not([class*='uk-width']) { width: 58.3333%; }
      

      .uk-width-6-12\@xl           { width: 50%; }
      .uk-min-width-6-12\@xl       { min-width: 50%; }
      .uk-max-width-6-12\@xl       { max-width: 50%; }
      .uk-child-width-6-12\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-5-12\@xl           { width: 41.6667%; }
      .uk-min-width-5-12\@xl       { min-width: 41.6667%; }
      .uk-max-width-5-12\@xl       { max-width: 41.6667%; }
      .uk-child-width-5-12\@xl > :not([class*='uk-width']) { width: 41.6667%; }
      

      .uk-width-4-12\@xl           { width: 33.3333%; }
      .uk-min-width-4-12\@xl       { min-width: 33.3333%; }
      .uk-max-width-4-12\@xl       { max-width: 33.3333%; }
      .uk-child-width-4-12\@xl > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-3-12\@xl           { width: 25%; }
      .uk-min-width-3-12\@xl       { min-width: 25%; }
      .uk-max-width-3-12\@xl       { max-width: 25%; }
      .uk-child-width-3-12\@xl > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-12\@xl           { width: 16.6667%; }
      .uk-min-width-2-12\@xl       { min-width: 16.6667%; }
      .uk-max-width-2-12\@xl       { max-width: 16.6667%; }
      .uk-child-width-2-12\@xl > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-1-12\@xl           { width: 8.3333%; }
      .uk-min-width-1-12\@xl       { min-width: 8.3333%; }
      .uk-max-width-1-12\@xl       { max-width: 8.3333%; }
      .uk-child-width-1-12\@xl > :not([class*='uk-width']) { width: 8.3333%; }
      

      .uk-width-10-11\@xl           { width: 90.9091%; }
      .uk-min-width-10-11\@xl       { min-width: 90.9091%; }
      .uk-max-width-10-11\@xl       { max-width: 90.9091%; }
      .uk-child-width-10-11\@xl > :not([class*='uk-width']) { width: 90.9091%; }
      

      .uk-width-9-11\@xl           { width: 81.8182%; }
      .uk-min-width-9-11\@xl       { min-width: 81.8182%; }
      .uk-max-width-9-11\@xl       { max-width: 81.8182%; }
      .uk-child-width-9-11\@xl > :not([class*='uk-width']) { width: 81.8182%; }
      

      .uk-width-8-11\@xl           { width: 72.7273%; }
      .uk-min-width-8-11\@xl       { min-width: 72.7273%; }
      .uk-max-width-8-11\@xl       { max-width: 72.7273%; }
      .uk-child-width-8-11\@xl > :not([class*='uk-width']) { width: 72.7273%; }
      

      .uk-width-7-11\@xl           { width: 63.6364%; }
      .uk-min-width-7-11\@xl       { min-width: 63.6364%; }
      .uk-max-width-7-11\@xl       { max-width: 63.6364%; }
      .uk-child-width-7-11\@xl > :not([class*='uk-width']) { width: 63.6364%; }
      

      .uk-width-6-11\@xl           { width: 54.5455%; }
      .uk-min-width-6-11\@xl       { min-width: 54.5455%; }
      .uk-max-width-6-11\@xl       { max-width: 54.5455%; }
      .uk-child-width-6-11\@xl > :not([class*='uk-width']) { width: 54.5455%; }
      

      .uk-width-5-11\@xl           { width: 45.4545%; }
      .uk-min-width-5-11\@xl       { min-width: 45.4545%; }
      .uk-max-width-5-11\@xl       { max-width: 45.4545%; }
      .uk-child-width-5-11\@xl > :not([class*='uk-width']) { width: 45.4545%; }
      

      .uk-width-4-11\@xl           { width: 36.3636%; }
      .uk-min-width-4-11\@xl       { min-width: 36.3636%; }
      .uk-max-width-4-11\@xl       { max-width: 36.3636%; }
      .uk-child-width-4-11\@xl > :not([class*='uk-width']) { width: 36.3636%; }
      

      .uk-width-3-11\@xl           { width: 27.2727%; }
      .uk-min-width-3-11\@xl       { min-width: 27.2727%; }
      .uk-max-width-3-11\@xl       { max-width: 27.2727%; }
      .uk-child-width-3-11\@xl > :not([class*='uk-width']) { width: 27.2727%; }
      

      .uk-width-2-11\@xl           { width: 18.1818%; }
      .uk-min-width-2-11\@xl       { min-width: 18.1818%; }
      .uk-max-width-2-11\@xl       { max-width: 18.1818%; }
      .uk-child-width-2-11\@xl > :not([class*='uk-width']) { width: 18.1818%; }
      

      .uk-width-1-11\@xl           { width: 9.0909%; }
      .uk-min-width-1-11\@xl       { min-width: 9.0909%; }
      .uk-max-width-1-11\@xl       { max-width: 9.0909%; }
      .uk-child-width-1-11\@xl > :not([class*='uk-width']) { width: 9.0909%; }
      

      .uk-width-9-10\@xl           { width: 90%; }
      .uk-min-width-9-10\@xl       { min-width: 90%; }
      .uk-max-width-9-10\@xl       { max-width: 90%; }
      .uk-child-width-9-10\@xl > :not([class*='uk-width']) { width: 90%; }
      

      .uk-width-8-10\@xl           { width: 80%; }
      .uk-min-width-8-10\@xl       { min-width: 80%; }
      .uk-max-width-8-10\@xl       { max-width: 80%; }
      .uk-child-width-8-10\@xl > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-7-10\@xl           { width: 70%; }
      .uk-min-width-7-10\@xl       { min-width: 70%; }
      .uk-max-width-7-10\@xl       { max-width: 70%; }
      .uk-child-width-7-10\@xl > :not([class*='uk-width']) { width: 70%; }
      

      .uk-width-6-10\@xl           { width: 60%; }
      .uk-min-width-6-10\@xl       { min-width: 60%; }
      .uk-max-width-6-10\@xl       { max-width: 60%; }
      .uk-child-width-6-10\@xl > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-5-10\@xl           { width: 50%; }
      .uk-min-width-5-10\@xl       { min-width: 50%; }
      .uk-max-width-5-10\@xl       { max-width: 50%; }
      .uk-child-width-5-10\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-4-10\@xl           { width: 40%; }
      .uk-min-width-4-10\@xl       { min-width: 40%; }
      .uk-max-width-4-10\@xl       { max-width: 40%; }
      .uk-child-width-4-10\@xl > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-3-10\@xl           { width: 30%; }
      .uk-min-width-3-10\@xl       { min-width: 30%; }
      .uk-max-width-3-10\@xl       { max-width: 30%; }
      .uk-child-width-3-10\@xl > :not([class*='uk-width']) { width: 30%; }
      

      .uk-width-2-10\@xl           { width: 20%; }
      .uk-min-width-2-10\@xl       { min-width: 20%; }
      .uk-max-width-2-10\@xl       { max-width: 20%; }
      .uk-child-width-2-10\@xl > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-1-10\@xl           { width: 10%; }
      .uk-min-width-1-10\@xl       { min-width: 10%; }
      .uk-max-width-1-10\@xl       { max-width: 10%; }
      .uk-child-width-1-10\@xl > :not([class*='uk-width']) { width: 10%; }
      

      .uk-width-8-9\@xl           { width: 88.8889%; }
      .uk-min-width-8-9\@xl       { min-width: 88.8889%; }
      .uk-max-width-8-9\@xl       { max-width: 88.8889%; }
      .uk-child-width-8-9\@xl > :not([class*='uk-width']) { width: 88.8889%; }
      

      .uk-width-7-9\@xl           { width: 77.7778%; }
      .uk-min-width-7-9\@xl       { min-width: 77.7778%; }
      .uk-max-width-7-9\@xl       { max-width: 77.7778%; }
      .uk-child-width-7-9\@xl > :not([class*='uk-width']) { width: 77.7778%; }
      

      .uk-width-6-9\@xl           { width: 66.6667%; }
      .uk-min-width-6-9\@xl       { min-width: 66.6667%; }
      .uk-max-width-6-9\@xl       { max-width: 66.6667%; }
      .uk-child-width-6-9\@xl > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-5-9\@xl           { width: 55.5556%; }
      .uk-min-width-5-9\@xl       { min-width: 55.5556%; }
      .uk-max-width-5-9\@xl       { max-width: 55.5556%; }
      .uk-child-width-5-9\@xl > :not([class*='uk-width']) { width: 55.5556%; }
      

      .uk-width-4-9\@xl           { width: 44.4444%; }
      .uk-min-width-4-9\@xl       { min-width: 44.4444%; }
      .uk-max-width-4-9\@xl       { max-width: 44.4444%; }
      .uk-child-width-4-9\@xl > :not([class*='uk-width']) { width: 44.4444%; }
      

      .uk-width-3-9\@xl           { width: 33.3333%; }
      .uk-min-width-3-9\@xl       { min-width: 33.3333%; }
      .uk-max-width-3-9\@xl       { max-width: 33.3333%; }
      .uk-child-width-3-9\@xl > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-2-9\@xl           { width: 22.2222%; }
      .uk-min-width-2-9\@xl       { min-width: 22.2222%; }
      .uk-max-width-2-9\@xl       { max-width: 22.2222%; }
      .uk-child-width-2-9\@xl > :not([class*='uk-width']) { width: 22.2222%; }
      

      .uk-width-1-9\@xl           { width: 11.1111%; }
      .uk-min-width-1-9\@xl       { min-width: 11.1111%; }
      .uk-max-width-1-9\@xl       { max-width: 11.1111%; }
      .uk-child-width-1-9\@xl > :not([class*='uk-width']) { width: 11.1111%; }
      

      .uk-width-7-8\@xl           { width: 87.5%; }
      .uk-min-width-7-8\@xl       { min-width: 87.5%; }
      .uk-max-width-7-8\@xl       { max-width: 87.5%; }
      .uk-child-width-7-8\@xl > :not([class*='uk-width']) { width: 87.5%; }
      

      .uk-width-6-8\@xl           { width: 75%; }
      .uk-min-width-6-8\@xl       { min-width: 75%; }
      .uk-max-width-6-8\@xl       { max-width: 75%; }
      .uk-child-width-6-8\@xl > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-5-8\@xl           { width: 62.5%; }
      .uk-min-width-5-8\@xl       { min-width: 62.5%; }
      .uk-max-width-5-8\@xl       { max-width: 62.5%; }
      .uk-child-width-5-8\@xl > :not([class*='uk-width']) { width: 62.5%; }
      

      .uk-width-4-8\@xl           { width: 50%; }
      .uk-min-width-4-8\@xl       { min-width: 50%; }
      .uk-max-width-4-8\@xl       { max-width: 50%; }
      .uk-child-width-4-8\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-3-8\@xl           { width: 37.5%; }
      .uk-min-width-3-8\@xl       { min-width: 37.5%; }
      .uk-max-width-3-8\@xl       { max-width: 37.5%; }
      .uk-child-width-3-8\@xl > :not([class*='uk-width']) { width: 37.5%; }
      

      .uk-width-2-8\@xl           { width: 25%; }
      .uk-min-width-2-8\@xl       { min-width: 25%; }
      .uk-max-width-2-8\@xl       { max-width: 25%; }
      .uk-child-width-2-8\@xl > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-1-8\@xl           { width: 12.5%; }
      .uk-min-width-1-8\@xl       { min-width: 12.5%; }
      .uk-max-width-1-8\@xl       { max-width: 12.5%; }
      .uk-child-width-1-8\@xl > :not([class*='uk-width']) { width: 12.5%; }
      

      .uk-width-6-7\@xl           { width: 85.7143%; }
      .uk-min-width-6-7\@xl       { min-width: 85.7143%; }
      .uk-max-width-6-7\@xl       { max-width: 85.7143%; }
      .uk-child-width-6-7\@xl > :not([class*='uk-width']) { width: 85.7143%; }
      

      .uk-width-5-7\@xl           { width: 71.4286%; }
      .uk-min-width-5-7\@xl       { min-width: 71.4286%; }
      .uk-max-width-5-7\@xl       { max-width: 71.4286%; }
      .uk-child-width-5-7\@xl > :not([class*='uk-width']) { width: 71.4286%; }
      

      .uk-width-4-7\@xl           { width: 57.1429%; }
      .uk-min-width-4-7\@xl       { min-width: 57.1429%; }
      .uk-max-width-4-7\@xl       { max-width: 57.1429%; }
      .uk-child-width-4-7\@xl > :not([class*='uk-width']) { width: 57.1429%; }
      

      .uk-width-3-7\@xl           { width: 42.8571%; }
      .uk-min-width-3-7\@xl       { min-width: 42.8571%; }
      .uk-max-width-3-7\@xl       { max-width: 42.8571%; }
      .uk-child-width-3-7\@xl > :not([class*='uk-width']) { width: 42.8571%; }
      

      .uk-width-2-7\@xl           { width: 28.5714%; }
      .uk-min-width-2-7\@xl       { min-width: 28.5714%; }
      .uk-max-width-2-7\@xl       { max-width: 28.5714%; }
      .uk-child-width-2-7\@xl > :not([class*='uk-width']) { width: 28.5714%; }
      

      .uk-width-1-7\@xl           { width: 14.2857%; }
      .uk-min-width-1-7\@xl       { min-width: 14.2857%; }
      .uk-max-width-1-7\@xl       { max-width: 14.2857%; }
      .uk-child-width-1-7\@xl > :not([class*='uk-width']) { width: 14.2857%; }
      

      .uk-width-5-6\@xl           { width: 83.3333%; }
      .uk-min-width-5-6\@xl       { min-width: 83.3333%; }
      .uk-max-width-5-6\@xl       { max-width: 83.3333%; }
      .uk-child-width-5-6\@xl > :not([class*='uk-width']) { width: 83.3333%; }
      

      .uk-width-4-6\@xl           { width: 66.6667%; }
      .uk-min-width-4-6\@xl       { min-width: 66.6667%; }
      .uk-max-width-4-6\@xl       { max-width: 66.6667%; }
      .uk-child-width-4-6\@xl > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-3-6\@xl           { width: 50%; }
      .uk-min-width-3-6\@xl       { min-width: 50%; }
      .uk-max-width-3-6\@xl       { max-width: 50%; }
      .uk-child-width-3-6\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-2-6\@xl           { width: 33.3333%; }
      .uk-min-width-2-6\@xl       { min-width: 33.3333%; }
      .uk-max-width-2-6\@xl       { max-width: 33.3333%; }
      .uk-child-width-2-6\@xl > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-6\@xl           { width: 16.6667%; }
      .uk-min-width-1-6\@xl       { min-width: 16.6667%; }
      .uk-max-width-1-6\@xl       { max-width: 16.6667%; }
      .uk-child-width-1-6\@xl > :not([class*='uk-width']) { width: 16.6667%; }
      

      .uk-width-4-5\@xl           { width: 80%; }
      .uk-min-width-4-5\@xl       { min-width: 80%; }
      .uk-max-width-4-5\@xl       { max-width: 80%; }
      .uk-child-width-4-5\@xl > :not([class*='uk-width']) { width: 80%; }
      

      .uk-width-3-5\@xl           { width: 60%; }
      .uk-min-width-3-5\@xl       { min-width: 60%; }
      .uk-max-width-3-5\@xl       { max-width: 60%; }
      .uk-child-width-3-5\@xl > :not([class*='uk-width']) { width: 60%; }
      

      .uk-width-2-5\@xl           { width: 40%; }
      .uk-min-width-2-5\@xl       { min-width: 40%; }
      .uk-max-width-2-5\@xl       { max-width: 40%; }
      .uk-child-width-2-5\@xl > :not([class*='uk-width']) { width: 40%; }
      

      .uk-width-1-5\@xl           { width: 20%; }
      .uk-min-width-1-5\@xl       { min-width: 20%; }
      .uk-max-width-1-5\@xl       { max-width: 20%; }
      .uk-child-width-1-5\@xl > :not([class*='uk-width']) { width: 20%; }
      

      .uk-width-3-4\@xl           { width: 75%; }
      .uk-min-width-3-4\@xl       { min-width: 75%; }
      .uk-max-width-3-4\@xl       { max-width: 75%; }
      .uk-child-width-3-4\@xl > :not([class*='uk-width']) { width: 75%; }
      

      .uk-width-2-4\@xl           { width: 50%; }
      .uk-min-width-2-4\@xl       { min-width: 50%; }
      .uk-max-width-2-4\@xl       { max-width: 50%; }
      .uk-child-width-2-4\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-4\@xl           { width: 25%; }
      .uk-min-width-1-4\@xl       { min-width: 25%; }
      .uk-max-width-1-4\@xl       { max-width: 25%; }
      .uk-child-width-1-4\@xl > :not([class*='uk-width']) { width: 25%; }
      

      .uk-width-2-3\@xl           { width: 66.6667%; }
      .uk-min-width-2-3\@xl       { min-width: 66.6667%; }
      .uk-max-width-2-3\@xl       { max-width: 66.6667%; }
      .uk-child-width-2-3\@xl > :not([class*='uk-width']) { width: 66.6667%; }
      

      .uk-width-1-3\@xl           { width: 33.3333%; }
      .uk-min-width-1-3\@xl       { min-width: 33.3333%; }
      .uk-max-width-1-3\@xl       { max-width: 33.3333%; }
      .uk-child-width-1-3\@xl > :not([class*='uk-width']) { width: 33.3333%; }
      

      .uk-width-1-2\@xl           { width: 50%; }
      .uk-min-width-1-2\@xl       { min-width: 50%; }
      .uk-max-width-1-2\@xl       { max-width: 50%; }
      .uk-child-width-1-2\@xl > :not([class*='uk-width']) { width: 50%; }
      

      .uk-width-1-1\@xl           { width: 100%; }
      .uk-min-width-1-1\@xl       { min-width: 100%; }
      .uk-max-width-1-1\@xl       { max-width: 100%; }
      .uk-child-width-1-1\@xl > :not([class*='uk-width']) { width: 100%; }
      
  
  
         .uk-width-inhertial\@xl           { width: inhertial; }
         .uk-min-width-inhertial\@xl       { min-width: inhertial; }
         .uk-max-width-inhertial\@xl       { max-width: inhertial; }
         .uk-child-width-inhertial\@xl > :not([class*='uk-width']) { width: inhertial; }
        
         .uk-width-initial\@xl           { width: initial; }
         .uk-min-width-initial\@xl       { min-width: initial; }
         .uk-max-width-initial\@xl       { max-width: initial; }
         .uk-child-width-initial\@xl > :not([class*='uk-width']) { width: initial; }
        
         .uk-width-auto\@xl           { width: auto; }
         .uk-min-width-auto\@xl       { min-width: auto; }
         .uk-max-width-auto\@xl       { max-width: auto; }
         .uk-child-width-auto\@xl > :not([class*='uk-width']) { width: auto; }
        
         .uk-width-fit-content\@xl           { width: fit-content; }
         .uk-min-width-fit-content\@xl       { min-width: fit-content; }
         .uk-max-width-fit-content\@xl       { max-width: fit-content; }
         .uk-child-width-fit-content\@xl > :not([class*='uk-width']) { width: fit-content; }
        
         .uk-width-max-content\@xl           { width: max-content; }
         .uk-min-width-max-content\@xl       { min-width: max-content; }
         .uk-max-width-max-content\@xl       { max-width: max-content; }
         .uk-child-width-max-content\@xl > :not([class*='uk-width']) { width: max-content; }
        
         .uk-width-min-content\@xl           { width: min-content; }
         .uk-min-width-min-content\@xl       { min-width: min-content; }
         .uk-max-width-min-content\@xl       { max-width: min-content; }
         .uk-child-width-min-content\@xl > :not([class*='uk-width']) { width: min-content; }
        
         .uk-width-none\@xl           { width: none; }
         .uk-min-width-none\@xl       { min-width: none; }
         .uk-max-width-none\@xl       { max-width: none; }
         .uk-child-width-none\@xl > :not([class*='uk-width']) { width: none; }
        
         .uk-width-revert\@xl           { width: revert; }
         .uk-min-width-revert\@xl       { min-width: revert; }
         .uk-max-width-revert\@xl       { max-width: revert; }
         .uk-child-width-revert\@xl > :not([class*='uk-width']) { width: revert; }
        
         .uk-width-unset\@xl           { width: unset; }
         .uk-min-width-unset\@xl       { min-width: unset; }
         .uk-max-width-unset\@xl       { max-width: unset; }
         .uk-child-width-unset\@xl > :not([class*='uk-width']) { width: unset; }
        
  
  
         .uk-width-small\@xl           { width: 150px; }
         .uk-min-width-small\@xl       { min-width: 150px; }
         .uk-max-width-small\@xl       { max-width: 150px; }
         .uk-child-width-small\@xl > :not([class*='uk-width']) { width: 150px; }
        
         .uk-width-medium\@xl           { width: 300px; }
         .uk-min-width-medium\@xl       { min-width: 300px; }
         .uk-max-width-medium\@xl       { max-width: 300px; }
         .uk-child-width-medium\@xl > :not([class*='uk-width']) { width: 300px; }
        
         .uk-width-large\@xl           { width: 450px; }
         .uk-min-width-large\@xl       { min-width: 450px; }
         .uk-max-width-large\@xl       { max-width: 450px; }
         .uk-child-width-large\@xl > :not([class*='uk-width']) { width: 450px; }
        
         .uk-width-xlarge\@xl           { width: 600px; }
         .uk-min-width-xlarge\@xl       { min-width: 600px; }
         .uk-max-width-xlarge\@xl       { max-width: 600px; }
         .uk-child-width-xlarge\@xl > :not([class*='uk-width']) { width: 600px; }
        
         .uk-width-2xlarge\@xl           { width: 750px; }
         .uk-min-width-2xlarge\@xl       { min-width: 750px; }
         .uk-max-width-2xlarge\@xl       { max-width: 750px; }
         .uk-child-width-2xlarge\@xl > :not([class*='uk-width']) { width: 750px; }
        

  .uk-min-width-fill\@xl { min-width: ${size[j]}; }
  .uk-max-width-fill\@xl { max-width: ${size[j]}; }

  .uk-width-fill\@xl     { width: -webkit-fill-available !important; }
  .uk-width-expand\@xl   { flex: 1; min-width: 1px; min-width: 100%; }

  .uk-child-width-fill\@xl > :not([class*='uk-width']) { width: -webkit-fill-available !important; }
  .uk-child-width-expand\@xl > :not([class*='uk-width']) { flex: 1; min-width: 1px; min-width: 100%; }

}
[class*='uk-child-height'] > :not([class*='uk-height']) { box-sizing: border-box; height: 100vh; }
[class*='uk-height'] { box-sizing: border-box; max-height: 100%; height: 100vh; }
.uk-child-height-fill > :not([class*='uk-height']) { height: -webkit-fill-available !important; }
.uk-child-height-expand > :not([class*='uk-height']) { flex: 1; min-height: 1px; }
.uk-min-height-fill { min-height: -webkit-fill-available !important; }
.uk-max-height-fill { max-height: -webkit-fill-available !important; }
.uk-height-fill { height: -webkit-fill-available !important; }
.uk-height-expand { flex: 1; min-height: 1px; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


      .uk-height-11-12           { height: 91.6667vh; }
      .uk-min-height-11-12       { min-height: 91.6667vh; }
      .uk-max-height-11-12       { max-height: 91.6667vh; }
      .uk-child-height-11-12 > :not([class*='uk-height']) { height: 91.6667vh; }
    

      .uk-height-10-12           { height: 83.3333vh; }
      .uk-min-height-10-12       { min-height: 83.3333vh; }
      .uk-max-height-10-12       { max-height: 83.3333vh; }
      .uk-child-height-10-12 > :not([class*='uk-height']) { height: 83.3333vh; }
    

      .uk-height-9-12           { height: 75vh; }
      .uk-min-height-9-12       { min-height: 75vh; }
      .uk-max-height-9-12       { max-height: 75vh; }
      .uk-child-height-9-12 > :not([class*='uk-height']) { height: 75vh; }
    

      .uk-height-8-12           { height: 66.6667vh; }
      .uk-min-height-8-12       { min-height: 66.6667vh; }
      .uk-max-height-8-12       { max-height: 66.6667vh; }
      .uk-child-height-8-12 > :not([class*='uk-height']) { height: 66.6667vh; }
    

      .uk-height-7-12           { height: 58.3333vh; }
      .uk-min-height-7-12       { min-height: 58.3333vh; }
      .uk-max-height-7-12       { max-height: 58.3333vh; }
      .uk-child-height-7-12 > :not([class*='uk-height']) { height: 58.3333vh; }
    

      .uk-height-6-12           { height: 50vh; }
      .uk-min-height-6-12       { min-height: 50vh; }
      .uk-max-height-6-12       { max-height: 50vh; }
      .uk-child-height-6-12 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-5-12           { height: 41.6667vh; }
      .uk-min-height-5-12       { min-height: 41.6667vh; }
      .uk-max-height-5-12       { max-height: 41.6667vh; }
      .uk-child-height-5-12 > :not([class*='uk-height']) { height: 41.6667vh; }
    

      .uk-height-4-12           { height: 33.3333vh; }
      .uk-min-height-4-12       { min-height: 33.3333vh; }
      .uk-max-height-4-12       { max-height: 33.3333vh; }
      .uk-child-height-4-12 > :not([class*='uk-height']) { height: 33.3333vh; }
    

      .uk-height-3-12           { height: 25vh; }
      .uk-min-height-3-12       { min-height: 25vh; }
      .uk-max-height-3-12       { max-height: 25vh; }
      .uk-child-height-3-12 > :not([class*='uk-height']) { height: 25vh; }
    

      .uk-height-2-12           { height: 16.6667vh; }
      .uk-min-height-2-12       { min-height: 16.6667vh; }
      .uk-max-height-2-12       { max-height: 16.6667vh; }
      .uk-child-height-2-12 > :not([class*='uk-height']) { height: 16.6667vh; }
    

      .uk-height-1-12           { height: 8.3333vh; }
      .uk-min-height-1-12       { min-height: 8.3333vh; }
      .uk-max-height-1-12       { max-height: 8.3333vh; }
      .uk-child-height-1-12 > :not([class*='uk-height']) { height: 8.3333vh; }
    

      .uk-height-10-11           { height: 90.9091vh; }
      .uk-min-height-10-11       { min-height: 90.9091vh; }
      .uk-max-height-10-11       { max-height: 90.9091vh; }
      .uk-child-height-10-11 > :not([class*='uk-height']) { height: 90.9091vh; }
    

      .uk-height-9-11           { height: 81.8182vh; }
      .uk-min-height-9-11       { min-height: 81.8182vh; }
      .uk-max-height-9-11       { max-height: 81.8182vh; }
      .uk-child-height-9-11 > :not([class*='uk-height']) { height: 81.8182vh; }
    

      .uk-height-8-11           { height: 72.7273vh; }
      .uk-min-height-8-11       { min-height: 72.7273vh; }
      .uk-max-height-8-11       { max-height: 72.7273vh; }
      .uk-child-height-8-11 > :not([class*='uk-height']) { height: 72.7273vh; }
    

      .uk-height-7-11           { height: 63.6364vh; }
      .uk-min-height-7-11       { min-height: 63.6364vh; }
      .uk-max-height-7-11       { max-height: 63.6364vh; }
      .uk-child-height-7-11 > :not([class*='uk-height']) { height: 63.6364vh; }
    

      .uk-height-6-11           { height: 54.5455vh; }
      .uk-min-height-6-11       { min-height: 54.5455vh; }
      .uk-max-height-6-11       { max-height: 54.5455vh; }
      .uk-child-height-6-11 > :not([class*='uk-height']) { height: 54.5455vh; }
    

      .uk-height-5-11           { height: 45.4545vh; }
      .uk-min-height-5-11       { min-height: 45.4545vh; }
      .uk-max-height-5-11       { max-height: 45.4545vh; }
      .uk-child-height-5-11 > :not([class*='uk-height']) { height: 45.4545vh; }
    

      .uk-height-4-11           { height: 36.3636vh; }
      .uk-min-height-4-11       { min-height: 36.3636vh; }
      .uk-max-height-4-11       { max-height: 36.3636vh; }
      .uk-child-height-4-11 > :not([class*='uk-height']) { height: 36.3636vh; }
    

      .uk-height-3-11           { height: 27.2727vh; }
      .uk-min-height-3-11       { min-height: 27.2727vh; }
      .uk-max-height-3-11       { max-height: 27.2727vh; }
      .uk-child-height-3-11 > :not([class*='uk-height']) { height: 27.2727vh; }
    

      .uk-height-2-11           { height: 18.1818vh; }
      .uk-min-height-2-11       { min-height: 18.1818vh; }
      .uk-max-height-2-11       { max-height: 18.1818vh; }
      .uk-child-height-2-11 > :not([class*='uk-height']) { height: 18.1818vh; }
    

      .uk-height-1-11           { height: 9.0909vh; }
      .uk-min-height-1-11       { min-height: 9.0909vh; }
      .uk-max-height-1-11       { max-height: 9.0909vh; }
      .uk-child-height-1-11 > :not([class*='uk-height']) { height: 9.0909vh; }
    

      .uk-height-9-10           { height: 90vh; }
      .uk-min-height-9-10       { min-height: 90vh; }
      .uk-max-height-9-10       { max-height: 90vh; }
      .uk-child-height-9-10 > :not([class*='uk-height']) { height: 90vh; }
    

      .uk-height-8-10           { height: 80vh; }
      .uk-min-height-8-10       { min-height: 80vh; }
      .uk-max-height-8-10       { max-height: 80vh; }
      .uk-child-height-8-10 > :not([class*='uk-height']) { height: 80vh; }
    

      .uk-height-7-10           { height: 70vh; }
      .uk-min-height-7-10       { min-height: 70vh; }
      .uk-max-height-7-10       { max-height: 70vh; }
      .uk-child-height-7-10 > :not([class*='uk-height']) { height: 70vh; }
    

      .uk-height-6-10           { height: 60vh; }
      .uk-min-height-6-10       { min-height: 60vh; }
      .uk-max-height-6-10       { max-height: 60vh; }
      .uk-child-height-6-10 > :not([class*='uk-height']) { height: 60vh; }
    

      .uk-height-5-10           { height: 50vh; }
      .uk-min-height-5-10       { min-height: 50vh; }
      .uk-max-height-5-10       { max-height: 50vh; }
      .uk-child-height-5-10 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-4-10           { height: 40vh; }
      .uk-min-height-4-10       { min-height: 40vh; }
      .uk-max-height-4-10       { max-height: 40vh; }
      .uk-child-height-4-10 > :not([class*='uk-height']) { height: 40vh; }
    

      .uk-height-3-10           { height: 30vh; }
      .uk-min-height-3-10       { min-height: 30vh; }
      .uk-max-height-3-10       { max-height: 30vh; }
      .uk-child-height-3-10 > :not([class*='uk-height']) { height: 30vh; }
    

      .uk-height-2-10           { height: 20vh; }
      .uk-min-height-2-10       { min-height: 20vh; }
      .uk-max-height-2-10       { max-height: 20vh; }
      .uk-child-height-2-10 > :not([class*='uk-height']) { height: 20vh; }
    

      .uk-height-1-10           { height: 10vh; }
      .uk-min-height-1-10       { min-height: 10vh; }
      .uk-max-height-1-10       { max-height: 10vh; }
      .uk-child-height-1-10 > :not([class*='uk-height']) { height: 10vh; }
    

      .uk-height-8-9           { height: 88.8889vh; }
      .uk-min-height-8-9       { min-height: 88.8889vh; }
      .uk-max-height-8-9       { max-height: 88.8889vh; }
      .uk-child-height-8-9 > :not([class*='uk-height']) { height: 88.8889vh; }
    

      .uk-height-7-9           { height: 77.7778vh; }
      .uk-min-height-7-9       { min-height: 77.7778vh; }
      .uk-max-height-7-9       { max-height: 77.7778vh; }
      .uk-child-height-7-9 > :not([class*='uk-height']) { height: 77.7778vh; }
    

      .uk-height-6-9           { height: 66.6667vh; }
      .uk-min-height-6-9       { min-height: 66.6667vh; }
      .uk-max-height-6-9       { max-height: 66.6667vh; }
      .uk-child-height-6-9 > :not([class*='uk-height']) { height: 66.6667vh; }
    

      .uk-height-5-9           { height: 55.5556vh; }
      .uk-min-height-5-9       { min-height: 55.5556vh; }
      .uk-max-height-5-9       { max-height: 55.5556vh; }
      .uk-child-height-5-9 > :not([class*='uk-height']) { height: 55.5556vh; }
    

      .uk-height-4-9           { height: 44.4444vh; }
      .uk-min-height-4-9       { min-height: 44.4444vh; }
      .uk-max-height-4-9       { max-height: 44.4444vh; }
      .uk-child-height-4-9 > :not([class*='uk-height']) { height: 44.4444vh; }
    

      .uk-height-3-9           { height: 33.3333vh; }
      .uk-min-height-3-9       { min-height: 33.3333vh; }
      .uk-max-height-3-9       { max-height: 33.3333vh; }
      .uk-child-height-3-9 > :not([class*='uk-height']) { height: 33.3333vh; }
    

      .uk-height-2-9           { height: 22.2222vh; }
      .uk-min-height-2-9       { min-height: 22.2222vh; }
      .uk-max-height-2-9       { max-height: 22.2222vh; }
      .uk-child-height-2-9 > :not([class*='uk-height']) { height: 22.2222vh; }
    

      .uk-height-1-9           { height: 11.1111vh; }
      .uk-min-height-1-9       { min-height: 11.1111vh; }
      .uk-max-height-1-9       { max-height: 11.1111vh; }
      .uk-child-height-1-9 > :not([class*='uk-height']) { height: 11.1111vh; }
    

      .uk-height-7-8           { height: 87.5vh; }
      .uk-min-height-7-8       { min-height: 87.5vh; }
      .uk-max-height-7-8       { max-height: 87.5vh; }
      .uk-child-height-7-8 > :not([class*='uk-height']) { height: 87.5vh; }
    

      .uk-height-6-8           { height: 75vh; }
      .uk-min-height-6-8       { min-height: 75vh; }
      .uk-max-height-6-8       { max-height: 75vh; }
      .uk-child-height-6-8 > :not([class*='uk-height']) { height: 75vh; }
    

      .uk-height-5-8           { height: 62.5vh; }
      .uk-min-height-5-8       { min-height: 62.5vh; }
      .uk-max-height-5-8       { max-height: 62.5vh; }
      .uk-child-height-5-8 > :not([class*='uk-height']) { height: 62.5vh; }
    

      .uk-height-4-8           { height: 50vh; }
      .uk-min-height-4-8       { min-height: 50vh; }
      .uk-max-height-4-8       { max-height: 50vh; }
      .uk-child-height-4-8 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-3-8           { height: 37.5vh; }
      .uk-min-height-3-8       { min-height: 37.5vh; }
      .uk-max-height-3-8       { max-height: 37.5vh; }
      .uk-child-height-3-8 > :not([class*='uk-height']) { height: 37.5vh; }
    

      .uk-height-2-8           { height: 25vh; }
      .uk-min-height-2-8       { min-height: 25vh; }
      .uk-max-height-2-8       { max-height: 25vh; }
      .uk-child-height-2-8 > :not([class*='uk-height']) { height: 25vh; }
    

      .uk-height-1-8           { height: 12.5vh; }
      .uk-min-height-1-8       { min-height: 12.5vh; }
      .uk-max-height-1-8       { max-height: 12.5vh; }
      .uk-child-height-1-8 > :not([class*='uk-height']) { height: 12.5vh; }
    

      .uk-height-6-7           { height: 85.7143vh; }
      .uk-min-height-6-7       { min-height: 85.7143vh; }
      .uk-max-height-6-7       { max-height: 85.7143vh; }
      .uk-child-height-6-7 > :not([class*='uk-height']) { height: 85.7143vh; }
    

      .uk-height-5-7           { height: 71.4286vh; }
      .uk-min-height-5-7       { min-height: 71.4286vh; }
      .uk-max-height-5-7       { max-height: 71.4286vh; }
      .uk-child-height-5-7 > :not([class*='uk-height']) { height: 71.4286vh; }
    

      .uk-height-4-7           { height: 57.1429vh; }
      .uk-min-height-4-7       { min-height: 57.1429vh; }
      .uk-max-height-4-7       { max-height: 57.1429vh; }
      .uk-child-height-4-7 > :not([class*='uk-height']) { height: 57.1429vh; }
    

      .uk-height-3-7           { height: 42.8571vh; }
      .uk-min-height-3-7       { min-height: 42.8571vh; }
      .uk-max-height-3-7       { max-height: 42.8571vh; }
      .uk-child-height-3-7 > :not([class*='uk-height']) { height: 42.8571vh; }
    

      .uk-height-2-7           { height: 28.5714vh; }
      .uk-min-height-2-7       { min-height: 28.5714vh; }
      .uk-max-height-2-7       { max-height: 28.5714vh; }
      .uk-child-height-2-7 > :not([class*='uk-height']) { height: 28.5714vh; }
    

      .uk-height-1-7           { height: 14.2857vh; }
      .uk-min-height-1-7       { min-height: 14.2857vh; }
      .uk-max-height-1-7       { max-height: 14.2857vh; }
      .uk-child-height-1-7 > :not([class*='uk-height']) { height: 14.2857vh; }
    

      .uk-height-5-6           { height: 83.3333vh; }
      .uk-min-height-5-6       { min-height: 83.3333vh; }
      .uk-max-height-5-6       { max-height: 83.3333vh; }
      .uk-child-height-5-6 > :not([class*='uk-height']) { height: 83.3333vh; }
    

      .uk-height-4-6           { height: 66.6667vh; }
      .uk-min-height-4-6       { min-height: 66.6667vh; }
      .uk-max-height-4-6       { max-height: 66.6667vh; }
      .uk-child-height-4-6 > :not([class*='uk-height']) { height: 66.6667vh; }
    

      .uk-height-3-6           { height: 50vh; }
      .uk-min-height-3-6       { min-height: 50vh; }
      .uk-max-height-3-6       { max-height: 50vh; }
      .uk-child-height-3-6 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-2-6           { height: 33.3333vh; }
      .uk-min-height-2-6       { min-height: 33.3333vh; }
      .uk-max-height-2-6       { max-height: 33.3333vh; }
      .uk-child-height-2-6 > :not([class*='uk-height']) { height: 33.3333vh; }
    

      .uk-height-1-6           { height: 16.6667vh; }
      .uk-min-height-1-6       { min-height: 16.6667vh; }
      .uk-max-height-1-6       { max-height: 16.6667vh; }
      .uk-child-height-1-6 > :not([class*='uk-height']) { height: 16.6667vh; }
    

      .uk-height-4-5           { height: 80vh; }
      .uk-min-height-4-5       { min-height: 80vh; }
      .uk-max-height-4-5       { max-height: 80vh; }
      .uk-child-height-4-5 > :not([class*='uk-height']) { height: 80vh; }
    

      .uk-height-3-5           { height: 60vh; }
      .uk-min-height-3-5       { min-height: 60vh; }
      .uk-max-height-3-5       { max-height: 60vh; }
      .uk-child-height-3-5 > :not([class*='uk-height']) { height: 60vh; }
    

      .uk-height-2-5           { height: 40vh; }
      .uk-min-height-2-5       { min-height: 40vh; }
      .uk-max-height-2-5       { max-height: 40vh; }
      .uk-child-height-2-5 > :not([class*='uk-height']) { height: 40vh; }
    

      .uk-height-1-5           { height: 20vh; }
      .uk-min-height-1-5       { min-height: 20vh; }
      .uk-max-height-1-5       { max-height: 20vh; }
      .uk-child-height-1-5 > :not([class*='uk-height']) { height: 20vh; }
    

      .uk-height-3-4           { height: 75vh; }
      .uk-min-height-3-4       { min-height: 75vh; }
      .uk-max-height-3-4       { max-height: 75vh; }
      .uk-child-height-3-4 > :not([class*='uk-height']) { height: 75vh; }
    

      .uk-height-2-4           { height: 50vh; }
      .uk-min-height-2-4       { min-height: 50vh; }
      .uk-max-height-2-4       { max-height: 50vh; }
      .uk-child-height-2-4 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-1-4           { height: 25vh; }
      .uk-min-height-1-4       { min-height: 25vh; }
      .uk-max-height-1-4       { max-height: 25vh; }
      .uk-child-height-1-4 > :not([class*='uk-height']) { height: 25vh; }
    

      .uk-height-2-3           { height: 66.6667vh; }
      .uk-min-height-2-3       { min-height: 66.6667vh; }
      .uk-max-height-2-3       { max-height: 66.6667vh; }
      .uk-child-height-2-3 > :not([class*='uk-height']) { height: 66.6667vh; }
    

      .uk-height-1-3           { height: 33.3333vh; }
      .uk-min-height-1-3       { min-height: 33.3333vh; }
      .uk-max-height-1-3       { max-height: 33.3333vh; }
      .uk-child-height-1-3 > :not([class*='uk-height']) { height: 33.3333vh; }
    

      .uk-height-1-2           { height: 50vh; }
      .uk-min-height-1-2       { min-height: 50vh; }
      .uk-max-height-1-2       { max-height: 50vh; }
      .uk-child-height-1-2 > :not([class*='uk-height']) { height: 50vh; }
    

      .uk-height-1-1           { height: 100vh; }
      .uk-min-height-1-1       { min-height: 100vh; }
      .uk-max-height-1-1       { max-height: 100vh; }
      .uk-child-height-1-1 > :not([class*='uk-height']) { height: 100vh; }
    


       .uk-height-inhertial          { height: inhertial; }
       .uk-min-height-inhertial      { min-height: inhertial; }
       .uk-max-height-inhertial      { max-height: inhertial; }
       .uk-child-height-inhertial > :not([class*='uk-height']) { height: inhertial; }
      
       .uk-height-initial          { height: initial; }
       .uk-min-height-initial      { min-height: initial; }
       .uk-max-height-initial      { max-height: initial; }
       .uk-child-height-initial > :not([class*='uk-height']) { height: initial; }
      
       .uk-height-auto          { height: auto; }
       .uk-min-height-auto      { min-height: auto; }
       .uk-max-height-auto      { max-height: auto; }
       .uk-child-height-auto > :not([class*='uk-height']) { height: auto; }
      
       .uk-height-fit-content          { height: fit-content; }
       .uk-min-height-fit-content      { min-height: fit-content; }
       .uk-max-height-fit-content      { max-height: fit-content; }
       .uk-child-height-fit-content > :not([class*='uk-height']) { height: fit-content; }
      
       .uk-height-max-content          { height: max-content; }
       .uk-min-height-max-content      { min-height: max-content; }
       .uk-max-height-max-content      { max-height: max-content; }
       .uk-child-height-max-content > :not([class*='uk-height']) { height: max-content; }
      
       .uk-height-min-content          { height: min-content; }
       .uk-min-height-min-content      { min-height: min-content; }
       .uk-max-height-min-content      { max-height: min-content; }
       .uk-child-height-min-content > :not([class*='uk-height']) { height: min-content; }
      
       .uk-height-none          { height: none; }
       .uk-min-height-none      { min-height: none; }
       .uk-max-height-none      { max-height: none; }
       .uk-child-height-none > :not([class*='uk-height']) { height: none; }
      
       .uk-height-revert          { height: revert; }
       .uk-min-height-revert      { min-height: revert; }
       .uk-max-height-revert      { max-height: revert; }
       .uk-child-height-revert > :not([class*='uk-height']) { height: revert; }
      
       .uk-height-unset          { height: unset; }
       .uk-min-height-unset      { min-height: unset; }
       .uk-max-height-unset      { max-height: unset; }
       .uk-child-height-unset > :not([class*='uk-height']) { height: unset; }
      


       .uk-height-small           { height: 150px; }
       .uk-min-height-small       { min-height: 150px; }
       .uk-max-height-small       { max-height: 150px; }
       .uk-child-height-small > :not([class*='uk-height']) { height: 150px; }
      
       .uk-height-medium           { height: 300px; }
       .uk-min-height-medium       { min-height: 300px; }
       .uk-max-height-medium       { max-height: 300px; }
       .uk-child-height-medium > :not([class*='uk-height']) { height: 300px; }
      
       .uk-height-large           { height: 450px; }
       .uk-min-height-large       { min-height: 450px; }
       .uk-max-height-large       { max-height: 450px; }
       .uk-child-height-large > :not([class*='uk-height']) { height: 450px; }
      
       .uk-height-xlarge           { height: 600px; }
       .uk-min-height-xlarge       { min-height: 600px; }
       .uk-max-height-xlarge       { max-height: 600px; }
       .uk-child-height-xlarge > :not([class*='uk-height']) { height: 600px; }
      
       .uk-height-2xlarge           { height: 750px; }
       .uk-min-height-2xlarge       { min-height: 750px; }
       .uk-max-height-2xlarge       { max-height: 750px; }
       .uk-child-height-2xlarge > :not([class*='uk-height']) { height: 750px; }
      

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 640px) {

  
      .uk-height-11-12\@s           { height: 91.6667vh; }
      .uk-min-height-11-12\@s       { min-height: 91.6667vh; }
      .uk-max-height-11-12\@s       { max-height: 91.6667vh; }
      .uk-child-height-11-12\@s > :not([class*='uk-height']) { height: 91.6667vh; }
      

      .uk-height-10-12\@s           { height: 83.3333vh; }
      .uk-min-height-10-12\@s       { min-height: 83.3333vh; }
      .uk-max-height-10-12\@s       { max-height: 83.3333vh; }
      .uk-child-height-10-12\@s > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-9-12\@s           { height: 75vh; }
      .uk-min-height-9-12\@s       { min-height: 75vh; }
      .uk-max-height-9-12\@s       { max-height: 75vh; }
      .uk-child-height-9-12\@s > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-8-12\@s           { height: 66.6667vh; }
      .uk-min-height-8-12\@s       { min-height: 66.6667vh; }
      .uk-max-height-8-12\@s       { max-height: 66.6667vh; }
      .uk-child-height-8-12\@s > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-7-12\@s           { height: 58.3333vh; }
      .uk-min-height-7-12\@s       { min-height: 58.3333vh; }
      .uk-max-height-7-12\@s       { max-height: 58.3333vh; }
      .uk-child-height-7-12\@s > :not([class*='uk-height']) { height: 58.3333vh; }
      

      .uk-height-6-12\@s           { height: 50vh; }
      .uk-min-height-6-12\@s       { min-height: 50vh; }
      .uk-max-height-6-12\@s       { max-height: 50vh; }
      .uk-child-height-6-12\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-5-12\@s           { height: 41.6667vh; }
      .uk-min-height-5-12\@s       { min-height: 41.6667vh; }
      .uk-max-height-5-12\@s       { max-height: 41.6667vh; }
      .uk-child-height-5-12\@s > :not([class*='uk-height']) { height: 41.6667vh; }
      

      .uk-height-4-12\@s           { height: 33.3333vh; }
      .uk-min-height-4-12\@s       { min-height: 33.3333vh; }
      .uk-max-height-4-12\@s       { max-height: 33.3333vh; }
      .uk-child-height-4-12\@s > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-3-12\@s           { height: 25vh; }
      .uk-min-height-3-12\@s       { min-height: 25vh; }
      .uk-max-height-3-12\@s       { max-height: 25vh; }
      .uk-child-height-3-12\@s > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-12\@s           { height: 16.6667vh; }
      .uk-min-height-2-12\@s       { min-height: 16.6667vh; }
      .uk-max-height-2-12\@s       { max-height: 16.6667vh; }
      .uk-child-height-2-12\@s > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-1-12\@s           { height: 8.3333vh; }
      .uk-min-height-1-12\@s       { min-height: 8.3333vh; }
      .uk-max-height-1-12\@s       { max-height: 8.3333vh; }
      .uk-child-height-1-12\@s > :not([class*='uk-height']) { height: 8.3333vh; }
      

      .uk-height-10-11\@s           { height: 90.9091vh; }
      .uk-min-height-10-11\@s       { min-height: 90.9091vh; }
      .uk-max-height-10-11\@s       { max-height: 90.9091vh; }
      .uk-child-height-10-11\@s > :not([class*='uk-height']) { height: 90.9091vh; }
      

      .uk-height-9-11\@s           { height: 81.8182vh; }
      .uk-min-height-9-11\@s       { min-height: 81.8182vh; }
      .uk-max-height-9-11\@s       { max-height: 81.8182vh; }
      .uk-child-height-9-11\@s > :not([class*='uk-height']) { height: 81.8182vh; }
      

      .uk-height-8-11\@s           { height: 72.7273vh; }
      .uk-min-height-8-11\@s       { min-height: 72.7273vh; }
      .uk-max-height-8-11\@s       { max-height: 72.7273vh; }
      .uk-child-height-8-11\@s > :not([class*='uk-height']) { height: 72.7273vh; }
      

      .uk-height-7-11\@s           { height: 63.6364vh; }
      .uk-min-height-7-11\@s       { min-height: 63.6364vh; }
      .uk-max-height-7-11\@s       { max-height: 63.6364vh; }
      .uk-child-height-7-11\@s > :not([class*='uk-height']) { height: 63.6364vh; }
      

      .uk-height-6-11\@s           { height: 54.5455vh; }
      .uk-min-height-6-11\@s       { min-height: 54.5455vh; }
      .uk-max-height-6-11\@s       { max-height: 54.5455vh; }
      .uk-child-height-6-11\@s > :not([class*='uk-height']) { height: 54.5455vh; }
      

      .uk-height-5-11\@s           { height: 45.4545vh; }
      .uk-min-height-5-11\@s       { min-height: 45.4545vh; }
      .uk-max-height-5-11\@s       { max-height: 45.4545vh; }
      .uk-child-height-5-11\@s > :not([class*='uk-height']) { height: 45.4545vh; }
      

      .uk-height-4-11\@s           { height: 36.3636vh; }
      .uk-min-height-4-11\@s       { min-height: 36.3636vh; }
      .uk-max-height-4-11\@s       { max-height: 36.3636vh; }
      .uk-child-height-4-11\@s > :not([class*='uk-height']) { height: 36.3636vh; }
      

      .uk-height-3-11\@s           { height: 27.2727vh; }
      .uk-min-height-3-11\@s       { min-height: 27.2727vh; }
      .uk-max-height-3-11\@s       { max-height: 27.2727vh; }
      .uk-child-height-3-11\@s > :not([class*='uk-height']) { height: 27.2727vh; }
      

      .uk-height-2-11\@s           { height: 18.1818vh; }
      .uk-min-height-2-11\@s       { min-height: 18.1818vh; }
      .uk-max-height-2-11\@s       { max-height: 18.1818vh; }
      .uk-child-height-2-11\@s > :not([class*='uk-height']) { height: 18.1818vh; }
      

      .uk-height-1-11\@s           { height: 9.0909vh; }
      .uk-min-height-1-11\@s       { min-height: 9.0909vh; }
      .uk-max-height-1-11\@s       { max-height: 9.0909vh; }
      .uk-child-height-1-11\@s > :not([class*='uk-height']) { height: 9.0909vh; }
      

      .uk-height-9-10\@s           { height: 90vh; }
      .uk-min-height-9-10\@s       { min-height: 90vh; }
      .uk-max-height-9-10\@s       { max-height: 90vh; }
      .uk-child-height-9-10\@s > :not([class*='uk-height']) { height: 90vh; }
      

      .uk-height-8-10\@s           { height: 80vh; }
      .uk-min-height-8-10\@s       { min-height: 80vh; }
      .uk-max-height-8-10\@s       { max-height: 80vh; }
      .uk-child-height-8-10\@s > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-7-10\@s           { height: 70vh; }
      .uk-min-height-7-10\@s       { min-height: 70vh; }
      .uk-max-height-7-10\@s       { max-height: 70vh; }
      .uk-child-height-7-10\@s > :not([class*='uk-height']) { height: 70vh; }
      

      .uk-height-6-10\@s           { height: 60vh; }
      .uk-min-height-6-10\@s       { min-height: 60vh; }
      .uk-max-height-6-10\@s       { max-height: 60vh; }
      .uk-child-height-6-10\@s > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-5-10\@s           { height: 50vh; }
      .uk-min-height-5-10\@s       { min-height: 50vh; }
      .uk-max-height-5-10\@s       { max-height: 50vh; }
      .uk-child-height-5-10\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-4-10\@s           { height: 40vh; }
      .uk-min-height-4-10\@s       { min-height: 40vh; }
      .uk-max-height-4-10\@s       { max-height: 40vh; }
      .uk-child-height-4-10\@s > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-3-10\@s           { height: 30vh; }
      .uk-min-height-3-10\@s       { min-height: 30vh; }
      .uk-max-height-3-10\@s       { max-height: 30vh; }
      .uk-child-height-3-10\@s > :not([class*='uk-height']) { height: 30vh; }
      

      .uk-height-2-10\@s           { height: 20vh; }
      .uk-min-height-2-10\@s       { min-height: 20vh; }
      .uk-max-height-2-10\@s       { max-height: 20vh; }
      .uk-child-height-2-10\@s > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-1-10\@s           { height: 10vh; }
      .uk-min-height-1-10\@s       { min-height: 10vh; }
      .uk-max-height-1-10\@s       { max-height: 10vh; }
      .uk-child-height-1-10\@s > :not([class*='uk-height']) { height: 10vh; }
      

      .uk-height-8-9\@s           { height: 88.8889vh; }
      .uk-min-height-8-9\@s       { min-height: 88.8889vh; }
      .uk-max-height-8-9\@s       { max-height: 88.8889vh; }
      .uk-child-height-8-9\@s > :not([class*='uk-height']) { height: 88.8889vh; }
      

      .uk-height-7-9\@s           { height: 77.7778vh; }
      .uk-min-height-7-9\@s       { min-height: 77.7778vh; }
      .uk-max-height-7-9\@s       { max-height: 77.7778vh; }
      .uk-child-height-7-9\@s > :not([class*='uk-height']) { height: 77.7778vh; }
      

      .uk-height-6-9\@s           { height: 66.6667vh; }
      .uk-min-height-6-9\@s       { min-height: 66.6667vh; }
      .uk-max-height-6-9\@s       { max-height: 66.6667vh; }
      .uk-child-height-6-9\@s > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-5-9\@s           { height: 55.5556vh; }
      .uk-min-height-5-9\@s       { min-height: 55.5556vh; }
      .uk-max-height-5-9\@s       { max-height: 55.5556vh; }
      .uk-child-height-5-9\@s > :not([class*='uk-height']) { height: 55.5556vh; }
      

      .uk-height-4-9\@s           { height: 44.4444vh; }
      .uk-min-height-4-9\@s       { min-height: 44.4444vh; }
      .uk-max-height-4-9\@s       { max-height: 44.4444vh; }
      .uk-child-height-4-9\@s > :not([class*='uk-height']) { height: 44.4444vh; }
      

      .uk-height-3-9\@s           { height: 33.3333vh; }
      .uk-min-height-3-9\@s       { min-height: 33.3333vh; }
      .uk-max-height-3-9\@s       { max-height: 33.3333vh; }
      .uk-child-height-3-9\@s > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-2-9\@s           { height: 22.2222vh; }
      .uk-min-height-2-9\@s       { min-height: 22.2222vh; }
      .uk-max-height-2-9\@s       { max-height: 22.2222vh; }
      .uk-child-height-2-9\@s > :not([class*='uk-height']) { height: 22.2222vh; }
      

      .uk-height-1-9\@s           { height: 11.1111vh; }
      .uk-min-height-1-9\@s       { min-height: 11.1111vh; }
      .uk-max-height-1-9\@s       { max-height: 11.1111vh; }
      .uk-child-height-1-9\@s > :not([class*='uk-height']) { height: 11.1111vh; }
      

      .uk-height-7-8\@s           { height: 87.5vh; }
      .uk-min-height-7-8\@s       { min-height: 87.5vh; }
      .uk-max-height-7-8\@s       { max-height: 87.5vh; }
      .uk-child-height-7-8\@s > :not([class*='uk-height']) { height: 87.5vh; }
      

      .uk-height-6-8\@s           { height: 75vh; }
      .uk-min-height-6-8\@s       { min-height: 75vh; }
      .uk-max-height-6-8\@s       { max-height: 75vh; }
      .uk-child-height-6-8\@s > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-5-8\@s           { height: 62.5vh; }
      .uk-min-height-5-8\@s       { min-height: 62.5vh; }
      .uk-max-height-5-8\@s       { max-height: 62.5vh; }
      .uk-child-height-5-8\@s > :not([class*='uk-height']) { height: 62.5vh; }
      

      .uk-height-4-8\@s           { height: 50vh; }
      .uk-min-height-4-8\@s       { min-height: 50vh; }
      .uk-max-height-4-8\@s       { max-height: 50vh; }
      .uk-child-height-4-8\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-3-8\@s           { height: 37.5vh; }
      .uk-min-height-3-8\@s       { min-height: 37.5vh; }
      .uk-max-height-3-8\@s       { max-height: 37.5vh; }
      .uk-child-height-3-8\@s > :not([class*='uk-height']) { height: 37.5vh; }
      

      .uk-height-2-8\@s           { height: 25vh; }
      .uk-min-height-2-8\@s       { min-height: 25vh; }
      .uk-max-height-2-8\@s       { max-height: 25vh; }
      .uk-child-height-2-8\@s > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-1-8\@s           { height: 12.5vh; }
      .uk-min-height-1-8\@s       { min-height: 12.5vh; }
      .uk-max-height-1-8\@s       { max-height: 12.5vh; }
      .uk-child-height-1-8\@s > :not([class*='uk-height']) { height: 12.5vh; }
      

      .uk-height-6-7\@s           { height: 85.7143vh; }
      .uk-min-height-6-7\@s       { min-height: 85.7143vh; }
      .uk-max-height-6-7\@s       { max-height: 85.7143vh; }
      .uk-child-height-6-7\@s > :not([class*='uk-height']) { height: 85.7143vh; }
      

      .uk-height-5-7\@s           { height: 71.4286vh; }
      .uk-min-height-5-7\@s       { min-height: 71.4286vh; }
      .uk-max-height-5-7\@s       { max-height: 71.4286vh; }
      .uk-child-height-5-7\@s > :not([class*='uk-height']) { height: 71.4286vh; }
      

      .uk-height-4-7\@s           { height: 57.1429vh; }
      .uk-min-height-4-7\@s       { min-height: 57.1429vh; }
      .uk-max-height-4-7\@s       { max-height: 57.1429vh; }
      .uk-child-height-4-7\@s > :not([class*='uk-height']) { height: 57.1429vh; }
      

      .uk-height-3-7\@s           { height: 42.8571vh; }
      .uk-min-height-3-7\@s       { min-height: 42.8571vh; }
      .uk-max-height-3-7\@s       { max-height: 42.8571vh; }
      .uk-child-height-3-7\@s > :not([class*='uk-height']) { height: 42.8571vh; }
      

      .uk-height-2-7\@s           { height: 28.5714vh; }
      .uk-min-height-2-7\@s       { min-height: 28.5714vh; }
      .uk-max-height-2-7\@s       { max-height: 28.5714vh; }
      .uk-child-height-2-7\@s > :not([class*='uk-height']) { height: 28.5714vh; }
      

      .uk-height-1-7\@s           { height: 14.2857vh; }
      .uk-min-height-1-7\@s       { min-height: 14.2857vh; }
      .uk-max-height-1-7\@s       { max-height: 14.2857vh; }
      .uk-child-height-1-7\@s > :not([class*='uk-height']) { height: 14.2857vh; }
      

      .uk-height-5-6\@s           { height: 83.3333vh; }
      .uk-min-height-5-6\@s       { min-height: 83.3333vh; }
      .uk-max-height-5-6\@s       { max-height: 83.3333vh; }
      .uk-child-height-5-6\@s > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-4-6\@s           { height: 66.6667vh; }
      .uk-min-height-4-6\@s       { min-height: 66.6667vh; }
      .uk-max-height-4-6\@s       { max-height: 66.6667vh; }
      .uk-child-height-4-6\@s > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-3-6\@s           { height: 50vh; }
      .uk-min-height-3-6\@s       { min-height: 50vh; }
      .uk-max-height-3-6\@s       { max-height: 50vh; }
      .uk-child-height-3-6\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-2-6\@s           { height: 33.3333vh; }
      .uk-min-height-2-6\@s       { min-height: 33.3333vh; }
      .uk-max-height-2-6\@s       { max-height: 33.3333vh; }
      .uk-child-height-2-6\@s > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-6\@s           { height: 16.6667vh; }
      .uk-min-height-1-6\@s       { min-height: 16.6667vh; }
      .uk-max-height-1-6\@s       { max-height: 16.6667vh; }
      .uk-child-height-1-6\@s > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-4-5\@s           { height: 80vh; }
      .uk-min-height-4-5\@s       { min-height: 80vh; }
      .uk-max-height-4-5\@s       { max-height: 80vh; }
      .uk-child-height-4-5\@s > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-3-5\@s           { height: 60vh; }
      .uk-min-height-3-5\@s       { min-height: 60vh; }
      .uk-max-height-3-5\@s       { max-height: 60vh; }
      .uk-child-height-3-5\@s > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-2-5\@s           { height: 40vh; }
      .uk-min-height-2-5\@s       { min-height: 40vh; }
      .uk-max-height-2-5\@s       { max-height: 40vh; }
      .uk-child-height-2-5\@s > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-1-5\@s           { height: 20vh; }
      .uk-min-height-1-5\@s       { min-height: 20vh; }
      .uk-max-height-1-5\@s       { max-height: 20vh; }
      .uk-child-height-1-5\@s > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-3-4\@s           { height: 75vh; }
      .uk-min-height-3-4\@s       { min-height: 75vh; }
      .uk-max-height-3-4\@s       { max-height: 75vh; }
      .uk-child-height-3-4\@s > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-2-4\@s           { height: 50vh; }
      .uk-min-height-2-4\@s       { min-height: 50vh; }
      .uk-max-height-2-4\@s       { max-height: 50vh; }
      .uk-child-height-2-4\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-4\@s           { height: 25vh; }
      .uk-min-height-1-4\@s       { min-height: 25vh; }
      .uk-max-height-1-4\@s       { max-height: 25vh; }
      .uk-child-height-1-4\@s > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-3\@s           { height: 66.6667vh; }
      .uk-min-height-2-3\@s       { min-height: 66.6667vh; }
      .uk-max-height-2-3\@s       { max-height: 66.6667vh; }
      .uk-child-height-2-3\@s > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-1-3\@s           { height: 33.3333vh; }
      .uk-min-height-1-3\@s       { min-height: 33.3333vh; }
      .uk-max-height-1-3\@s       { max-height: 33.3333vh; }
      .uk-child-height-1-3\@s > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-2\@s           { height: 50vh; }
      .uk-min-height-1-2\@s       { min-height: 50vh; }
      .uk-max-height-1-2\@s       { max-height: 50vh; }
      .uk-child-height-1-2\@s > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-1\@s           { height: 100vh; }
      .uk-min-height-1-1\@s       { min-height: 100vh; }
      .uk-max-height-1-1\@s       { max-height: 100vh; }
      .uk-child-height-1-1\@s > :not([class*='uk-height']) { height: 100vh; }
      
  
  
         .uk-height-inhertial\@s           { height: inhertial; }
         .uk-min-height-inhertial\@s       { min-height: inhertial; }
         .uk-max-height-inhertial\@s       { max-height: inhertial; }
         .uk-child-height-inhertial\@s > :not([class*='uk-height']) { height: inhertial; }
        
         .uk-height-initial\@s           { height: initial; }
         .uk-min-height-initial\@s       { min-height: initial; }
         .uk-max-height-initial\@s       { max-height: initial; }
         .uk-child-height-initial\@s > :not([class*='uk-height']) { height: initial; }
        
         .uk-height-auto\@s           { height: auto; }
         .uk-min-height-auto\@s       { min-height: auto; }
         .uk-max-height-auto\@s       { max-height: auto; }
         .uk-child-height-auto\@s > :not([class*='uk-height']) { height: auto; }
        
         .uk-height-fit-content\@s           { height: fit-content; }
         .uk-min-height-fit-content\@s       { min-height: fit-content; }
         .uk-max-height-fit-content\@s       { max-height: fit-content; }
         .uk-child-height-fit-content\@s > :not([class*='uk-height']) { height: fit-content; }
        
         .uk-height-max-content\@s           { height: max-content; }
         .uk-min-height-max-content\@s       { min-height: max-content; }
         .uk-max-height-max-content\@s       { max-height: max-content; }
         .uk-child-height-max-content\@s > :not([class*='uk-height']) { height: max-content; }
        
         .uk-height-min-content\@s           { height: min-content; }
         .uk-min-height-min-content\@s       { min-height: min-content; }
         .uk-max-height-min-content\@s       { max-height: min-content; }
         .uk-child-height-min-content\@s > :not([class*='uk-height']) { height: min-content; }
        
         .uk-height-none\@s           { height: none; }
         .uk-min-height-none\@s       { min-height: none; }
         .uk-max-height-none\@s       { max-height: none; }
         .uk-child-height-none\@s > :not([class*='uk-height']) { height: none; }
        
         .uk-height-revert\@s           { height: revert; }
         .uk-min-height-revert\@s       { min-height: revert; }
         .uk-max-height-revert\@s       { max-height: revert; }
         .uk-child-height-revert\@s > :not([class*='uk-height']) { height: revert; }
        
         .uk-height-unset\@s           { height: unset; }
         .uk-min-height-unset\@s       { min-height: unset; }
         .uk-max-height-unset\@s       { max-height: unset; }
         .uk-child-height-unset\@s > :not([class*='uk-height']) { height: unset; }
        
  
  
         .uk-height-small\@s           { height: 150px; }
         .uk-min-height-small\@s       { min-height: 150px; }
         .uk-max-height-small\@s       { max-height: 150px; }
         .uk-child-height-small\@s > :not([class*='uk-height']) { height: 150px; }
        
         .uk-height-medium\@s           { height: 300px; }
         .uk-min-height-medium\@s       { min-height: 300px; }
         .uk-max-height-medium\@s       { max-height: 300px; }
         .uk-child-height-medium\@s > :not([class*='uk-height']) { height: 300px; }
        
         .uk-height-large\@s           { height: 450px; }
         .uk-min-height-large\@s       { min-height: 450px; }
         .uk-max-height-large\@s       { max-height: 450px; }
         .uk-child-height-large\@s > :not([class*='uk-height']) { height: 450px; }
        
         .uk-height-xlarge\@s           { height: 600px; }
         .uk-min-height-xlarge\@s       { min-height: 600px; }
         .uk-max-height-xlarge\@s       { max-height: 600px; }
         .uk-child-height-xlarge\@s > :not([class*='uk-height']) { height: 600px; }
        
         .uk-height-2xlarge\@s           { height: 750px; }
         .uk-min-height-2xlarge\@s       { min-height: 750px; }
         .uk-max-height-2xlarge\@s       { max-height: 750px; }
         .uk-child-height-2xlarge\@s > :not([class*='uk-height']) { height: 750px; }
        

  .uk-min-height-fill\@s { min-height: ${size[j]}; }
  .uk-max-height-fill\@s { max-height: ${size[j]}; }

  .uk-height-fill\@s     { height: -webkit-fill-available !important; }
  .uk-height-expand\@s   { flex: 1; min-height: 1px; min-height: 100vh; }

  .uk-child-height-fill\@s > :not([class*='uk-height']) { height: -webkit-fill-available !important; }
  .uk-child-height-expand\@s > :not([class*='uk-height']) { flex: 1; min-height: 1px; min-height: 100vh; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 960px) {

  
      .uk-height-11-12\@m           { height: 91.6667vh; }
      .uk-min-height-11-12\@m       { min-height: 91.6667vh; }
      .uk-max-height-11-12\@m       { max-height: 91.6667vh; }
      .uk-child-height-11-12\@m > :not([class*='uk-height']) { height: 91.6667vh; }
      

      .uk-height-10-12\@m           { height: 83.3333vh; }
      .uk-min-height-10-12\@m       { min-height: 83.3333vh; }
      .uk-max-height-10-12\@m       { max-height: 83.3333vh; }
      .uk-child-height-10-12\@m > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-9-12\@m           { height: 75vh; }
      .uk-min-height-9-12\@m       { min-height: 75vh; }
      .uk-max-height-9-12\@m       { max-height: 75vh; }
      .uk-child-height-9-12\@m > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-8-12\@m           { height: 66.6667vh; }
      .uk-min-height-8-12\@m       { min-height: 66.6667vh; }
      .uk-max-height-8-12\@m       { max-height: 66.6667vh; }
      .uk-child-height-8-12\@m > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-7-12\@m           { height: 58.3333vh; }
      .uk-min-height-7-12\@m       { min-height: 58.3333vh; }
      .uk-max-height-7-12\@m       { max-height: 58.3333vh; }
      .uk-child-height-7-12\@m > :not([class*='uk-height']) { height: 58.3333vh; }
      

      .uk-height-6-12\@m           { height: 50vh; }
      .uk-min-height-6-12\@m       { min-height: 50vh; }
      .uk-max-height-6-12\@m       { max-height: 50vh; }
      .uk-child-height-6-12\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-5-12\@m           { height: 41.6667vh; }
      .uk-min-height-5-12\@m       { min-height: 41.6667vh; }
      .uk-max-height-5-12\@m       { max-height: 41.6667vh; }
      .uk-child-height-5-12\@m > :not([class*='uk-height']) { height: 41.6667vh; }
      

      .uk-height-4-12\@m           { height: 33.3333vh; }
      .uk-min-height-4-12\@m       { min-height: 33.3333vh; }
      .uk-max-height-4-12\@m       { max-height: 33.3333vh; }
      .uk-child-height-4-12\@m > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-3-12\@m           { height: 25vh; }
      .uk-min-height-3-12\@m       { min-height: 25vh; }
      .uk-max-height-3-12\@m       { max-height: 25vh; }
      .uk-child-height-3-12\@m > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-12\@m           { height: 16.6667vh; }
      .uk-min-height-2-12\@m       { min-height: 16.6667vh; }
      .uk-max-height-2-12\@m       { max-height: 16.6667vh; }
      .uk-child-height-2-12\@m > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-1-12\@m           { height: 8.3333vh; }
      .uk-min-height-1-12\@m       { min-height: 8.3333vh; }
      .uk-max-height-1-12\@m       { max-height: 8.3333vh; }
      .uk-child-height-1-12\@m > :not([class*='uk-height']) { height: 8.3333vh; }
      

      .uk-height-10-11\@m           { height: 90.9091vh; }
      .uk-min-height-10-11\@m       { min-height: 90.9091vh; }
      .uk-max-height-10-11\@m       { max-height: 90.9091vh; }
      .uk-child-height-10-11\@m > :not([class*='uk-height']) { height: 90.9091vh; }
      

      .uk-height-9-11\@m           { height: 81.8182vh; }
      .uk-min-height-9-11\@m       { min-height: 81.8182vh; }
      .uk-max-height-9-11\@m       { max-height: 81.8182vh; }
      .uk-child-height-9-11\@m > :not([class*='uk-height']) { height: 81.8182vh; }
      

      .uk-height-8-11\@m           { height: 72.7273vh; }
      .uk-min-height-8-11\@m       { min-height: 72.7273vh; }
      .uk-max-height-8-11\@m       { max-height: 72.7273vh; }
      .uk-child-height-8-11\@m > :not([class*='uk-height']) { height: 72.7273vh; }
      

      .uk-height-7-11\@m           { height: 63.6364vh; }
      .uk-min-height-7-11\@m       { min-height: 63.6364vh; }
      .uk-max-height-7-11\@m       { max-height: 63.6364vh; }
      .uk-child-height-7-11\@m > :not([class*='uk-height']) { height: 63.6364vh; }
      

      .uk-height-6-11\@m           { height: 54.5455vh; }
      .uk-min-height-6-11\@m       { min-height: 54.5455vh; }
      .uk-max-height-6-11\@m       { max-height: 54.5455vh; }
      .uk-child-height-6-11\@m > :not([class*='uk-height']) { height: 54.5455vh; }
      

      .uk-height-5-11\@m           { height: 45.4545vh; }
      .uk-min-height-5-11\@m       { min-height: 45.4545vh; }
      .uk-max-height-5-11\@m       { max-height: 45.4545vh; }
      .uk-child-height-5-11\@m > :not([class*='uk-height']) { height: 45.4545vh; }
      

      .uk-height-4-11\@m           { height: 36.3636vh; }
      .uk-min-height-4-11\@m       { min-height: 36.3636vh; }
      .uk-max-height-4-11\@m       { max-height: 36.3636vh; }
      .uk-child-height-4-11\@m > :not([class*='uk-height']) { height: 36.3636vh; }
      

      .uk-height-3-11\@m           { height: 27.2727vh; }
      .uk-min-height-3-11\@m       { min-height: 27.2727vh; }
      .uk-max-height-3-11\@m       { max-height: 27.2727vh; }
      .uk-child-height-3-11\@m > :not([class*='uk-height']) { height: 27.2727vh; }
      

      .uk-height-2-11\@m           { height: 18.1818vh; }
      .uk-min-height-2-11\@m       { min-height: 18.1818vh; }
      .uk-max-height-2-11\@m       { max-height: 18.1818vh; }
      .uk-child-height-2-11\@m > :not([class*='uk-height']) { height: 18.1818vh; }
      

      .uk-height-1-11\@m           { height: 9.0909vh; }
      .uk-min-height-1-11\@m       { min-height: 9.0909vh; }
      .uk-max-height-1-11\@m       { max-height: 9.0909vh; }
      .uk-child-height-1-11\@m > :not([class*='uk-height']) { height: 9.0909vh; }
      

      .uk-height-9-10\@m           { height: 90vh; }
      .uk-min-height-9-10\@m       { min-height: 90vh; }
      .uk-max-height-9-10\@m       { max-height: 90vh; }
      .uk-child-height-9-10\@m > :not([class*='uk-height']) { height: 90vh; }
      

      .uk-height-8-10\@m           { height: 80vh; }
      .uk-min-height-8-10\@m       { min-height: 80vh; }
      .uk-max-height-8-10\@m       { max-height: 80vh; }
      .uk-child-height-8-10\@m > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-7-10\@m           { height: 70vh; }
      .uk-min-height-7-10\@m       { min-height: 70vh; }
      .uk-max-height-7-10\@m       { max-height: 70vh; }
      .uk-child-height-7-10\@m > :not([class*='uk-height']) { height: 70vh; }
      

      .uk-height-6-10\@m           { height: 60vh; }
      .uk-min-height-6-10\@m       { min-height: 60vh; }
      .uk-max-height-6-10\@m       { max-height: 60vh; }
      .uk-child-height-6-10\@m > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-5-10\@m           { height: 50vh; }
      .uk-min-height-5-10\@m       { min-height: 50vh; }
      .uk-max-height-5-10\@m       { max-height: 50vh; }
      .uk-child-height-5-10\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-4-10\@m           { height: 40vh; }
      .uk-min-height-4-10\@m       { min-height: 40vh; }
      .uk-max-height-4-10\@m       { max-height: 40vh; }
      .uk-child-height-4-10\@m > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-3-10\@m           { height: 30vh; }
      .uk-min-height-3-10\@m       { min-height: 30vh; }
      .uk-max-height-3-10\@m       { max-height: 30vh; }
      .uk-child-height-3-10\@m > :not([class*='uk-height']) { height: 30vh; }
      

      .uk-height-2-10\@m           { height: 20vh; }
      .uk-min-height-2-10\@m       { min-height: 20vh; }
      .uk-max-height-2-10\@m       { max-height: 20vh; }
      .uk-child-height-2-10\@m > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-1-10\@m           { height: 10vh; }
      .uk-min-height-1-10\@m       { min-height: 10vh; }
      .uk-max-height-1-10\@m       { max-height: 10vh; }
      .uk-child-height-1-10\@m > :not([class*='uk-height']) { height: 10vh; }
      

      .uk-height-8-9\@m           { height: 88.8889vh; }
      .uk-min-height-8-9\@m       { min-height: 88.8889vh; }
      .uk-max-height-8-9\@m       { max-height: 88.8889vh; }
      .uk-child-height-8-9\@m > :not([class*='uk-height']) { height: 88.8889vh; }
      

      .uk-height-7-9\@m           { height: 77.7778vh; }
      .uk-min-height-7-9\@m       { min-height: 77.7778vh; }
      .uk-max-height-7-9\@m       { max-height: 77.7778vh; }
      .uk-child-height-7-9\@m > :not([class*='uk-height']) { height: 77.7778vh; }
      

      .uk-height-6-9\@m           { height: 66.6667vh; }
      .uk-min-height-6-9\@m       { min-height: 66.6667vh; }
      .uk-max-height-6-9\@m       { max-height: 66.6667vh; }
      .uk-child-height-6-9\@m > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-5-9\@m           { height: 55.5556vh; }
      .uk-min-height-5-9\@m       { min-height: 55.5556vh; }
      .uk-max-height-5-9\@m       { max-height: 55.5556vh; }
      .uk-child-height-5-9\@m > :not([class*='uk-height']) { height: 55.5556vh; }
      

      .uk-height-4-9\@m           { height: 44.4444vh; }
      .uk-min-height-4-9\@m       { min-height: 44.4444vh; }
      .uk-max-height-4-9\@m       { max-height: 44.4444vh; }
      .uk-child-height-4-9\@m > :not([class*='uk-height']) { height: 44.4444vh; }
      

      .uk-height-3-9\@m           { height: 33.3333vh; }
      .uk-min-height-3-9\@m       { min-height: 33.3333vh; }
      .uk-max-height-3-9\@m       { max-height: 33.3333vh; }
      .uk-child-height-3-9\@m > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-2-9\@m           { height: 22.2222vh; }
      .uk-min-height-2-9\@m       { min-height: 22.2222vh; }
      .uk-max-height-2-9\@m       { max-height: 22.2222vh; }
      .uk-child-height-2-9\@m > :not([class*='uk-height']) { height: 22.2222vh; }
      

      .uk-height-1-9\@m           { height: 11.1111vh; }
      .uk-min-height-1-9\@m       { min-height: 11.1111vh; }
      .uk-max-height-1-9\@m       { max-height: 11.1111vh; }
      .uk-child-height-1-9\@m > :not([class*='uk-height']) { height: 11.1111vh; }
      

      .uk-height-7-8\@m           { height: 87.5vh; }
      .uk-min-height-7-8\@m       { min-height: 87.5vh; }
      .uk-max-height-7-8\@m       { max-height: 87.5vh; }
      .uk-child-height-7-8\@m > :not([class*='uk-height']) { height: 87.5vh; }
      

      .uk-height-6-8\@m           { height: 75vh; }
      .uk-min-height-6-8\@m       { min-height: 75vh; }
      .uk-max-height-6-8\@m       { max-height: 75vh; }
      .uk-child-height-6-8\@m > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-5-8\@m           { height: 62.5vh; }
      .uk-min-height-5-8\@m       { min-height: 62.5vh; }
      .uk-max-height-5-8\@m       { max-height: 62.5vh; }
      .uk-child-height-5-8\@m > :not([class*='uk-height']) { height: 62.5vh; }
      

      .uk-height-4-8\@m           { height: 50vh; }
      .uk-min-height-4-8\@m       { min-height: 50vh; }
      .uk-max-height-4-8\@m       { max-height: 50vh; }
      .uk-child-height-4-8\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-3-8\@m           { height: 37.5vh; }
      .uk-min-height-3-8\@m       { min-height: 37.5vh; }
      .uk-max-height-3-8\@m       { max-height: 37.5vh; }
      .uk-child-height-3-8\@m > :not([class*='uk-height']) { height: 37.5vh; }
      

      .uk-height-2-8\@m           { height: 25vh; }
      .uk-min-height-2-8\@m       { min-height: 25vh; }
      .uk-max-height-2-8\@m       { max-height: 25vh; }
      .uk-child-height-2-8\@m > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-1-8\@m           { height: 12.5vh; }
      .uk-min-height-1-8\@m       { min-height: 12.5vh; }
      .uk-max-height-1-8\@m       { max-height: 12.5vh; }
      .uk-child-height-1-8\@m > :not([class*='uk-height']) { height: 12.5vh; }
      

      .uk-height-6-7\@m           { height: 85.7143vh; }
      .uk-min-height-6-7\@m       { min-height: 85.7143vh; }
      .uk-max-height-6-7\@m       { max-height: 85.7143vh; }
      .uk-child-height-6-7\@m > :not([class*='uk-height']) { height: 85.7143vh; }
      

      .uk-height-5-7\@m           { height: 71.4286vh; }
      .uk-min-height-5-7\@m       { min-height: 71.4286vh; }
      .uk-max-height-5-7\@m       { max-height: 71.4286vh; }
      .uk-child-height-5-7\@m > :not([class*='uk-height']) { height: 71.4286vh; }
      

      .uk-height-4-7\@m           { height: 57.1429vh; }
      .uk-min-height-4-7\@m       { min-height: 57.1429vh; }
      .uk-max-height-4-7\@m       { max-height: 57.1429vh; }
      .uk-child-height-4-7\@m > :not([class*='uk-height']) { height: 57.1429vh; }
      

      .uk-height-3-7\@m           { height: 42.8571vh; }
      .uk-min-height-3-7\@m       { min-height: 42.8571vh; }
      .uk-max-height-3-7\@m       { max-height: 42.8571vh; }
      .uk-child-height-3-7\@m > :not([class*='uk-height']) { height: 42.8571vh; }
      

      .uk-height-2-7\@m           { height: 28.5714vh; }
      .uk-min-height-2-7\@m       { min-height: 28.5714vh; }
      .uk-max-height-2-7\@m       { max-height: 28.5714vh; }
      .uk-child-height-2-7\@m > :not([class*='uk-height']) { height: 28.5714vh; }
      

      .uk-height-1-7\@m           { height: 14.2857vh; }
      .uk-min-height-1-7\@m       { min-height: 14.2857vh; }
      .uk-max-height-1-7\@m       { max-height: 14.2857vh; }
      .uk-child-height-1-7\@m > :not([class*='uk-height']) { height: 14.2857vh; }
      

      .uk-height-5-6\@m           { height: 83.3333vh; }
      .uk-min-height-5-6\@m       { min-height: 83.3333vh; }
      .uk-max-height-5-6\@m       { max-height: 83.3333vh; }
      .uk-child-height-5-6\@m > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-4-6\@m           { height: 66.6667vh; }
      .uk-min-height-4-6\@m       { min-height: 66.6667vh; }
      .uk-max-height-4-6\@m       { max-height: 66.6667vh; }
      .uk-child-height-4-6\@m > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-3-6\@m           { height: 50vh; }
      .uk-min-height-3-6\@m       { min-height: 50vh; }
      .uk-max-height-3-6\@m       { max-height: 50vh; }
      .uk-child-height-3-6\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-2-6\@m           { height: 33.3333vh; }
      .uk-min-height-2-6\@m       { min-height: 33.3333vh; }
      .uk-max-height-2-6\@m       { max-height: 33.3333vh; }
      .uk-child-height-2-6\@m > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-6\@m           { height: 16.6667vh; }
      .uk-min-height-1-6\@m       { min-height: 16.6667vh; }
      .uk-max-height-1-6\@m       { max-height: 16.6667vh; }
      .uk-child-height-1-6\@m > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-4-5\@m           { height: 80vh; }
      .uk-min-height-4-5\@m       { min-height: 80vh; }
      .uk-max-height-4-5\@m       { max-height: 80vh; }
      .uk-child-height-4-5\@m > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-3-5\@m           { height: 60vh; }
      .uk-min-height-3-5\@m       { min-height: 60vh; }
      .uk-max-height-3-5\@m       { max-height: 60vh; }
      .uk-child-height-3-5\@m > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-2-5\@m           { height: 40vh; }
      .uk-min-height-2-5\@m       { min-height: 40vh; }
      .uk-max-height-2-5\@m       { max-height: 40vh; }
      .uk-child-height-2-5\@m > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-1-5\@m           { height: 20vh; }
      .uk-min-height-1-5\@m       { min-height: 20vh; }
      .uk-max-height-1-5\@m       { max-height: 20vh; }
      .uk-child-height-1-5\@m > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-3-4\@m           { height: 75vh; }
      .uk-min-height-3-4\@m       { min-height: 75vh; }
      .uk-max-height-3-4\@m       { max-height: 75vh; }
      .uk-child-height-3-4\@m > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-2-4\@m           { height: 50vh; }
      .uk-min-height-2-4\@m       { min-height: 50vh; }
      .uk-max-height-2-4\@m       { max-height: 50vh; }
      .uk-child-height-2-4\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-4\@m           { height: 25vh; }
      .uk-min-height-1-4\@m       { min-height: 25vh; }
      .uk-max-height-1-4\@m       { max-height: 25vh; }
      .uk-child-height-1-4\@m > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-3\@m           { height: 66.6667vh; }
      .uk-min-height-2-3\@m       { min-height: 66.6667vh; }
      .uk-max-height-2-3\@m       { max-height: 66.6667vh; }
      .uk-child-height-2-3\@m > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-1-3\@m           { height: 33.3333vh; }
      .uk-min-height-1-3\@m       { min-height: 33.3333vh; }
      .uk-max-height-1-3\@m       { max-height: 33.3333vh; }
      .uk-child-height-1-3\@m > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-2\@m           { height: 50vh; }
      .uk-min-height-1-2\@m       { min-height: 50vh; }
      .uk-max-height-1-2\@m       { max-height: 50vh; }
      .uk-child-height-1-2\@m > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-1\@m           { height: 100vh; }
      .uk-min-height-1-1\@m       { min-height: 100vh; }
      .uk-max-height-1-1\@m       { max-height: 100vh; }
      .uk-child-height-1-1\@m > :not([class*='uk-height']) { height: 100vh; }
      
  
  
         .uk-height-inhertial\@m           { height: inhertial; }
         .uk-min-height-inhertial\@m       { min-height: inhertial; }
         .uk-max-height-inhertial\@m       { max-height: inhertial; }
         .uk-child-height-inhertial\@m > :not([class*='uk-height']) { height: inhertial; }
        
         .uk-height-initial\@m           { height: initial; }
         .uk-min-height-initial\@m       { min-height: initial; }
         .uk-max-height-initial\@m       { max-height: initial; }
         .uk-child-height-initial\@m > :not([class*='uk-height']) { height: initial; }
        
         .uk-height-auto\@m           { height: auto; }
         .uk-min-height-auto\@m       { min-height: auto; }
         .uk-max-height-auto\@m       { max-height: auto; }
         .uk-child-height-auto\@m > :not([class*='uk-height']) { height: auto; }
        
         .uk-height-fit-content\@m           { height: fit-content; }
         .uk-min-height-fit-content\@m       { min-height: fit-content; }
         .uk-max-height-fit-content\@m       { max-height: fit-content; }
         .uk-child-height-fit-content\@m > :not([class*='uk-height']) { height: fit-content; }
        
         .uk-height-max-content\@m           { height: max-content; }
         .uk-min-height-max-content\@m       { min-height: max-content; }
         .uk-max-height-max-content\@m       { max-height: max-content; }
         .uk-child-height-max-content\@m > :not([class*='uk-height']) { height: max-content; }
        
         .uk-height-min-content\@m           { height: min-content; }
         .uk-min-height-min-content\@m       { min-height: min-content; }
         .uk-max-height-min-content\@m       { max-height: min-content; }
         .uk-child-height-min-content\@m > :not([class*='uk-height']) { height: min-content; }
        
         .uk-height-none\@m           { height: none; }
         .uk-min-height-none\@m       { min-height: none; }
         .uk-max-height-none\@m       { max-height: none; }
         .uk-child-height-none\@m > :not([class*='uk-height']) { height: none; }
        
         .uk-height-revert\@m           { height: revert; }
         .uk-min-height-revert\@m       { min-height: revert; }
         .uk-max-height-revert\@m       { max-height: revert; }
         .uk-child-height-revert\@m > :not([class*='uk-height']) { height: revert; }
        
         .uk-height-unset\@m           { height: unset; }
         .uk-min-height-unset\@m       { min-height: unset; }
         .uk-max-height-unset\@m       { max-height: unset; }
         .uk-child-height-unset\@m > :not([class*='uk-height']) { height: unset; }
        
  
  
         .uk-height-small\@m           { height: 150px; }
         .uk-min-height-small\@m       { min-height: 150px; }
         .uk-max-height-small\@m       { max-height: 150px; }
         .uk-child-height-small\@m > :not([class*='uk-height']) { height: 150px; }
        
         .uk-height-medium\@m           { height: 300px; }
         .uk-min-height-medium\@m       { min-height: 300px; }
         .uk-max-height-medium\@m       { max-height: 300px; }
         .uk-child-height-medium\@m > :not([class*='uk-height']) { height: 300px; }
        
         .uk-height-large\@m           { height: 450px; }
         .uk-min-height-large\@m       { min-height: 450px; }
         .uk-max-height-large\@m       { max-height: 450px; }
         .uk-child-height-large\@m > :not([class*='uk-height']) { height: 450px; }
        
         .uk-height-xlarge\@m           { height: 600px; }
         .uk-min-height-xlarge\@m       { min-height: 600px; }
         .uk-max-height-xlarge\@m       { max-height: 600px; }
         .uk-child-height-xlarge\@m > :not([class*='uk-height']) { height: 600px; }
        
         .uk-height-2xlarge\@m           { height: 750px; }
         .uk-min-height-2xlarge\@m       { min-height: 750px; }
         .uk-max-height-2xlarge\@m       { max-height: 750px; }
         .uk-child-height-2xlarge\@m > :not([class*='uk-height']) { height: 750px; }
        

  .uk-min-height-fill\@m { min-height: ${size[j]}; }
  .uk-max-height-fill\@m { max-height: ${size[j]}; }

  .uk-height-fill\@m     { height: -webkit-fill-available !important; }
  .uk-height-expand\@m   { flex: 1; min-height: 1px; min-height: 100vh; }

  .uk-child-height-fill\@m > :not([class*='uk-height']) { height: -webkit-fill-available !important; }
  .uk-child-height-expand\@m > :not([class*='uk-height']) { flex: 1; min-height: 1px; min-height: 100vh; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1200px) {

  
      .uk-height-11-12\@l           { height: 91.6667vh; }
      .uk-min-height-11-12\@l       { min-height: 91.6667vh; }
      .uk-max-height-11-12\@l       { max-height: 91.6667vh; }
      .uk-child-height-11-12\@l > :not([class*='uk-height']) { height: 91.6667vh; }
      

      .uk-height-10-12\@l           { height: 83.3333vh; }
      .uk-min-height-10-12\@l       { min-height: 83.3333vh; }
      .uk-max-height-10-12\@l       { max-height: 83.3333vh; }
      .uk-child-height-10-12\@l > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-9-12\@l           { height: 75vh; }
      .uk-min-height-9-12\@l       { min-height: 75vh; }
      .uk-max-height-9-12\@l       { max-height: 75vh; }
      .uk-child-height-9-12\@l > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-8-12\@l           { height: 66.6667vh; }
      .uk-min-height-8-12\@l       { min-height: 66.6667vh; }
      .uk-max-height-8-12\@l       { max-height: 66.6667vh; }
      .uk-child-height-8-12\@l > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-7-12\@l           { height: 58.3333vh; }
      .uk-min-height-7-12\@l       { min-height: 58.3333vh; }
      .uk-max-height-7-12\@l       { max-height: 58.3333vh; }
      .uk-child-height-7-12\@l > :not([class*='uk-height']) { height: 58.3333vh; }
      

      .uk-height-6-12\@l           { height: 50vh; }
      .uk-min-height-6-12\@l       { min-height: 50vh; }
      .uk-max-height-6-12\@l       { max-height: 50vh; }
      .uk-child-height-6-12\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-5-12\@l           { height: 41.6667vh; }
      .uk-min-height-5-12\@l       { min-height: 41.6667vh; }
      .uk-max-height-5-12\@l       { max-height: 41.6667vh; }
      .uk-child-height-5-12\@l > :not([class*='uk-height']) { height: 41.6667vh; }
      

      .uk-height-4-12\@l           { height: 33.3333vh; }
      .uk-min-height-4-12\@l       { min-height: 33.3333vh; }
      .uk-max-height-4-12\@l       { max-height: 33.3333vh; }
      .uk-child-height-4-12\@l > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-3-12\@l           { height: 25vh; }
      .uk-min-height-3-12\@l       { min-height: 25vh; }
      .uk-max-height-3-12\@l       { max-height: 25vh; }
      .uk-child-height-3-12\@l > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-12\@l           { height: 16.6667vh; }
      .uk-min-height-2-12\@l       { min-height: 16.6667vh; }
      .uk-max-height-2-12\@l       { max-height: 16.6667vh; }
      .uk-child-height-2-12\@l > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-1-12\@l           { height: 8.3333vh; }
      .uk-min-height-1-12\@l       { min-height: 8.3333vh; }
      .uk-max-height-1-12\@l       { max-height: 8.3333vh; }
      .uk-child-height-1-12\@l > :not([class*='uk-height']) { height: 8.3333vh; }
      

      .uk-height-10-11\@l           { height: 90.9091vh; }
      .uk-min-height-10-11\@l       { min-height: 90.9091vh; }
      .uk-max-height-10-11\@l       { max-height: 90.9091vh; }
      .uk-child-height-10-11\@l > :not([class*='uk-height']) { height: 90.9091vh; }
      

      .uk-height-9-11\@l           { height: 81.8182vh; }
      .uk-min-height-9-11\@l       { min-height: 81.8182vh; }
      .uk-max-height-9-11\@l       { max-height: 81.8182vh; }
      .uk-child-height-9-11\@l > :not([class*='uk-height']) { height: 81.8182vh; }
      

      .uk-height-8-11\@l           { height: 72.7273vh; }
      .uk-min-height-8-11\@l       { min-height: 72.7273vh; }
      .uk-max-height-8-11\@l       { max-height: 72.7273vh; }
      .uk-child-height-8-11\@l > :not([class*='uk-height']) { height: 72.7273vh; }
      

      .uk-height-7-11\@l           { height: 63.6364vh; }
      .uk-min-height-7-11\@l       { min-height: 63.6364vh; }
      .uk-max-height-7-11\@l       { max-height: 63.6364vh; }
      .uk-child-height-7-11\@l > :not([class*='uk-height']) { height: 63.6364vh; }
      

      .uk-height-6-11\@l           { height: 54.5455vh; }
      .uk-min-height-6-11\@l       { min-height: 54.5455vh; }
      .uk-max-height-6-11\@l       { max-height: 54.5455vh; }
      .uk-child-height-6-11\@l > :not([class*='uk-height']) { height: 54.5455vh; }
      

      .uk-height-5-11\@l           { height: 45.4545vh; }
      .uk-min-height-5-11\@l       { min-height: 45.4545vh; }
      .uk-max-height-5-11\@l       { max-height: 45.4545vh; }
      .uk-child-height-5-11\@l > :not([class*='uk-height']) { height: 45.4545vh; }
      

      .uk-height-4-11\@l           { height: 36.3636vh; }
      .uk-min-height-4-11\@l       { min-height: 36.3636vh; }
      .uk-max-height-4-11\@l       { max-height: 36.3636vh; }
      .uk-child-height-4-11\@l > :not([class*='uk-height']) { height: 36.3636vh; }
      

      .uk-height-3-11\@l           { height: 27.2727vh; }
      .uk-min-height-3-11\@l       { min-height: 27.2727vh; }
      .uk-max-height-3-11\@l       { max-height: 27.2727vh; }
      .uk-child-height-3-11\@l > :not([class*='uk-height']) { height: 27.2727vh; }
      

      .uk-height-2-11\@l           { height: 18.1818vh; }
      .uk-min-height-2-11\@l       { min-height: 18.1818vh; }
      .uk-max-height-2-11\@l       { max-height: 18.1818vh; }
      .uk-child-height-2-11\@l > :not([class*='uk-height']) { height: 18.1818vh; }
      

      .uk-height-1-11\@l           { height: 9.0909vh; }
      .uk-min-height-1-11\@l       { min-height: 9.0909vh; }
      .uk-max-height-1-11\@l       { max-height: 9.0909vh; }
      .uk-child-height-1-11\@l > :not([class*='uk-height']) { height: 9.0909vh; }
      

      .uk-height-9-10\@l           { height: 90vh; }
      .uk-min-height-9-10\@l       { min-height: 90vh; }
      .uk-max-height-9-10\@l       { max-height: 90vh; }
      .uk-child-height-9-10\@l > :not([class*='uk-height']) { height: 90vh; }
      

      .uk-height-8-10\@l           { height: 80vh; }
      .uk-min-height-8-10\@l       { min-height: 80vh; }
      .uk-max-height-8-10\@l       { max-height: 80vh; }
      .uk-child-height-8-10\@l > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-7-10\@l           { height: 70vh; }
      .uk-min-height-7-10\@l       { min-height: 70vh; }
      .uk-max-height-7-10\@l       { max-height: 70vh; }
      .uk-child-height-7-10\@l > :not([class*='uk-height']) { height: 70vh; }
      

      .uk-height-6-10\@l           { height: 60vh; }
      .uk-min-height-6-10\@l       { min-height: 60vh; }
      .uk-max-height-6-10\@l       { max-height: 60vh; }
      .uk-child-height-6-10\@l > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-5-10\@l           { height: 50vh; }
      .uk-min-height-5-10\@l       { min-height: 50vh; }
      .uk-max-height-5-10\@l       { max-height: 50vh; }
      .uk-child-height-5-10\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-4-10\@l           { height: 40vh; }
      .uk-min-height-4-10\@l       { min-height: 40vh; }
      .uk-max-height-4-10\@l       { max-height: 40vh; }
      .uk-child-height-4-10\@l > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-3-10\@l           { height: 30vh; }
      .uk-min-height-3-10\@l       { min-height: 30vh; }
      .uk-max-height-3-10\@l       { max-height: 30vh; }
      .uk-child-height-3-10\@l > :not([class*='uk-height']) { height: 30vh; }
      

      .uk-height-2-10\@l           { height: 20vh; }
      .uk-min-height-2-10\@l       { min-height: 20vh; }
      .uk-max-height-2-10\@l       { max-height: 20vh; }
      .uk-child-height-2-10\@l > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-1-10\@l           { height: 10vh; }
      .uk-min-height-1-10\@l       { min-height: 10vh; }
      .uk-max-height-1-10\@l       { max-height: 10vh; }
      .uk-child-height-1-10\@l > :not([class*='uk-height']) { height: 10vh; }
      

      .uk-height-8-9\@l           { height: 88.8889vh; }
      .uk-min-height-8-9\@l       { min-height: 88.8889vh; }
      .uk-max-height-8-9\@l       { max-height: 88.8889vh; }
      .uk-child-height-8-9\@l > :not([class*='uk-height']) { height: 88.8889vh; }
      

      .uk-height-7-9\@l           { height: 77.7778vh; }
      .uk-min-height-7-9\@l       { min-height: 77.7778vh; }
      .uk-max-height-7-9\@l       { max-height: 77.7778vh; }
      .uk-child-height-7-9\@l > :not([class*='uk-height']) { height: 77.7778vh; }
      

      .uk-height-6-9\@l           { height: 66.6667vh; }
      .uk-min-height-6-9\@l       { min-height: 66.6667vh; }
      .uk-max-height-6-9\@l       { max-height: 66.6667vh; }
      .uk-child-height-6-9\@l > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-5-9\@l           { height: 55.5556vh; }
      .uk-min-height-5-9\@l       { min-height: 55.5556vh; }
      .uk-max-height-5-9\@l       { max-height: 55.5556vh; }
      .uk-child-height-5-9\@l > :not([class*='uk-height']) { height: 55.5556vh; }
      

      .uk-height-4-9\@l           { height: 44.4444vh; }
      .uk-min-height-4-9\@l       { min-height: 44.4444vh; }
      .uk-max-height-4-9\@l       { max-height: 44.4444vh; }
      .uk-child-height-4-9\@l > :not([class*='uk-height']) { height: 44.4444vh; }
      

      .uk-height-3-9\@l           { height: 33.3333vh; }
      .uk-min-height-3-9\@l       { min-height: 33.3333vh; }
      .uk-max-height-3-9\@l       { max-height: 33.3333vh; }
      .uk-child-height-3-9\@l > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-2-9\@l           { height: 22.2222vh; }
      .uk-min-height-2-9\@l       { min-height: 22.2222vh; }
      .uk-max-height-2-9\@l       { max-height: 22.2222vh; }
      .uk-child-height-2-9\@l > :not([class*='uk-height']) { height: 22.2222vh; }
      

      .uk-height-1-9\@l           { height: 11.1111vh; }
      .uk-min-height-1-9\@l       { min-height: 11.1111vh; }
      .uk-max-height-1-9\@l       { max-height: 11.1111vh; }
      .uk-child-height-1-9\@l > :not([class*='uk-height']) { height: 11.1111vh; }
      

      .uk-height-7-8\@l           { height: 87.5vh; }
      .uk-min-height-7-8\@l       { min-height: 87.5vh; }
      .uk-max-height-7-8\@l       { max-height: 87.5vh; }
      .uk-child-height-7-8\@l > :not([class*='uk-height']) { height: 87.5vh; }
      

      .uk-height-6-8\@l           { height: 75vh; }
      .uk-min-height-6-8\@l       { min-height: 75vh; }
      .uk-max-height-6-8\@l       { max-height: 75vh; }
      .uk-child-height-6-8\@l > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-5-8\@l           { height: 62.5vh; }
      .uk-min-height-5-8\@l       { min-height: 62.5vh; }
      .uk-max-height-5-8\@l       { max-height: 62.5vh; }
      .uk-child-height-5-8\@l > :not([class*='uk-height']) { height: 62.5vh; }
      

      .uk-height-4-8\@l           { height: 50vh; }
      .uk-min-height-4-8\@l       { min-height: 50vh; }
      .uk-max-height-4-8\@l       { max-height: 50vh; }
      .uk-child-height-4-8\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-3-8\@l           { height: 37.5vh; }
      .uk-min-height-3-8\@l       { min-height: 37.5vh; }
      .uk-max-height-3-8\@l       { max-height: 37.5vh; }
      .uk-child-height-3-8\@l > :not([class*='uk-height']) { height: 37.5vh; }
      

      .uk-height-2-8\@l           { height: 25vh; }
      .uk-min-height-2-8\@l       { min-height: 25vh; }
      .uk-max-height-2-8\@l       { max-height: 25vh; }
      .uk-child-height-2-8\@l > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-1-8\@l           { height: 12.5vh; }
      .uk-min-height-1-8\@l       { min-height: 12.5vh; }
      .uk-max-height-1-8\@l       { max-height: 12.5vh; }
      .uk-child-height-1-8\@l > :not([class*='uk-height']) { height: 12.5vh; }
      

      .uk-height-6-7\@l           { height: 85.7143vh; }
      .uk-min-height-6-7\@l       { min-height: 85.7143vh; }
      .uk-max-height-6-7\@l       { max-height: 85.7143vh; }
      .uk-child-height-6-7\@l > :not([class*='uk-height']) { height: 85.7143vh; }
      

      .uk-height-5-7\@l           { height: 71.4286vh; }
      .uk-min-height-5-7\@l       { min-height: 71.4286vh; }
      .uk-max-height-5-7\@l       { max-height: 71.4286vh; }
      .uk-child-height-5-7\@l > :not([class*='uk-height']) { height: 71.4286vh; }
      

      .uk-height-4-7\@l           { height: 57.1429vh; }
      .uk-min-height-4-7\@l       { min-height: 57.1429vh; }
      .uk-max-height-4-7\@l       { max-height: 57.1429vh; }
      .uk-child-height-4-7\@l > :not([class*='uk-height']) { height: 57.1429vh; }
      

      .uk-height-3-7\@l           { height: 42.8571vh; }
      .uk-min-height-3-7\@l       { min-height: 42.8571vh; }
      .uk-max-height-3-7\@l       { max-height: 42.8571vh; }
      .uk-child-height-3-7\@l > :not([class*='uk-height']) { height: 42.8571vh; }
      

      .uk-height-2-7\@l           { height: 28.5714vh; }
      .uk-min-height-2-7\@l       { min-height: 28.5714vh; }
      .uk-max-height-2-7\@l       { max-height: 28.5714vh; }
      .uk-child-height-2-7\@l > :not([class*='uk-height']) { height: 28.5714vh; }
      

      .uk-height-1-7\@l           { height: 14.2857vh; }
      .uk-min-height-1-7\@l       { min-height: 14.2857vh; }
      .uk-max-height-1-7\@l       { max-height: 14.2857vh; }
      .uk-child-height-1-7\@l > :not([class*='uk-height']) { height: 14.2857vh; }
      

      .uk-height-5-6\@l           { height: 83.3333vh; }
      .uk-min-height-5-6\@l       { min-height: 83.3333vh; }
      .uk-max-height-5-6\@l       { max-height: 83.3333vh; }
      .uk-child-height-5-6\@l > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-4-6\@l           { height: 66.6667vh; }
      .uk-min-height-4-6\@l       { min-height: 66.6667vh; }
      .uk-max-height-4-6\@l       { max-height: 66.6667vh; }
      .uk-child-height-4-6\@l > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-3-6\@l           { height: 50vh; }
      .uk-min-height-3-6\@l       { min-height: 50vh; }
      .uk-max-height-3-6\@l       { max-height: 50vh; }
      .uk-child-height-3-6\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-2-6\@l           { height: 33.3333vh; }
      .uk-min-height-2-6\@l       { min-height: 33.3333vh; }
      .uk-max-height-2-6\@l       { max-height: 33.3333vh; }
      .uk-child-height-2-6\@l > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-6\@l           { height: 16.6667vh; }
      .uk-min-height-1-6\@l       { min-height: 16.6667vh; }
      .uk-max-height-1-6\@l       { max-height: 16.6667vh; }
      .uk-child-height-1-6\@l > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-4-5\@l           { height: 80vh; }
      .uk-min-height-4-5\@l       { min-height: 80vh; }
      .uk-max-height-4-5\@l       { max-height: 80vh; }
      .uk-child-height-4-5\@l > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-3-5\@l           { height: 60vh; }
      .uk-min-height-3-5\@l       { min-height: 60vh; }
      .uk-max-height-3-5\@l       { max-height: 60vh; }
      .uk-child-height-3-5\@l > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-2-5\@l           { height: 40vh; }
      .uk-min-height-2-5\@l       { min-height: 40vh; }
      .uk-max-height-2-5\@l       { max-height: 40vh; }
      .uk-child-height-2-5\@l > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-1-5\@l           { height: 20vh; }
      .uk-min-height-1-5\@l       { min-height: 20vh; }
      .uk-max-height-1-5\@l       { max-height: 20vh; }
      .uk-child-height-1-5\@l > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-3-4\@l           { height: 75vh; }
      .uk-min-height-3-4\@l       { min-height: 75vh; }
      .uk-max-height-3-4\@l       { max-height: 75vh; }
      .uk-child-height-3-4\@l > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-2-4\@l           { height: 50vh; }
      .uk-min-height-2-4\@l       { min-height: 50vh; }
      .uk-max-height-2-4\@l       { max-height: 50vh; }
      .uk-child-height-2-4\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-4\@l           { height: 25vh; }
      .uk-min-height-1-4\@l       { min-height: 25vh; }
      .uk-max-height-1-4\@l       { max-height: 25vh; }
      .uk-child-height-1-4\@l > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-3\@l           { height: 66.6667vh; }
      .uk-min-height-2-3\@l       { min-height: 66.6667vh; }
      .uk-max-height-2-3\@l       { max-height: 66.6667vh; }
      .uk-child-height-2-3\@l > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-1-3\@l           { height: 33.3333vh; }
      .uk-min-height-1-3\@l       { min-height: 33.3333vh; }
      .uk-max-height-1-3\@l       { max-height: 33.3333vh; }
      .uk-child-height-1-3\@l > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-2\@l           { height: 50vh; }
      .uk-min-height-1-2\@l       { min-height: 50vh; }
      .uk-max-height-1-2\@l       { max-height: 50vh; }
      .uk-child-height-1-2\@l > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-1\@l           { height: 100vh; }
      .uk-min-height-1-1\@l       { min-height: 100vh; }
      .uk-max-height-1-1\@l       { max-height: 100vh; }
      .uk-child-height-1-1\@l > :not([class*='uk-height']) { height: 100vh; }
      
  
  
         .uk-height-inhertial\@l           { height: inhertial; }
         .uk-min-height-inhertial\@l       { min-height: inhertial; }
         .uk-max-height-inhertial\@l       { max-height: inhertial; }
         .uk-child-height-inhertial\@l > :not([class*='uk-height']) { height: inhertial; }
        
         .uk-height-initial\@l           { height: initial; }
         .uk-min-height-initial\@l       { min-height: initial; }
         .uk-max-height-initial\@l       { max-height: initial; }
         .uk-child-height-initial\@l > :not([class*='uk-height']) { height: initial; }
        
         .uk-height-auto\@l           { height: auto; }
         .uk-min-height-auto\@l       { min-height: auto; }
         .uk-max-height-auto\@l       { max-height: auto; }
         .uk-child-height-auto\@l > :not([class*='uk-height']) { height: auto; }
        
         .uk-height-fit-content\@l           { height: fit-content; }
         .uk-min-height-fit-content\@l       { min-height: fit-content; }
         .uk-max-height-fit-content\@l       { max-height: fit-content; }
         .uk-child-height-fit-content\@l > :not([class*='uk-height']) { height: fit-content; }
        
         .uk-height-max-content\@l           { height: max-content; }
         .uk-min-height-max-content\@l       { min-height: max-content; }
         .uk-max-height-max-content\@l       { max-height: max-content; }
         .uk-child-height-max-content\@l > :not([class*='uk-height']) { height: max-content; }
        
         .uk-height-min-content\@l           { height: min-content; }
         .uk-min-height-min-content\@l       { min-height: min-content; }
         .uk-max-height-min-content\@l       { max-height: min-content; }
         .uk-child-height-min-content\@l > :not([class*='uk-height']) { height: min-content; }
        
         .uk-height-none\@l           { height: none; }
         .uk-min-height-none\@l       { min-height: none; }
         .uk-max-height-none\@l       { max-height: none; }
         .uk-child-height-none\@l > :not([class*='uk-height']) { height: none; }
        
         .uk-height-revert\@l           { height: revert; }
         .uk-min-height-revert\@l       { min-height: revert; }
         .uk-max-height-revert\@l       { max-height: revert; }
         .uk-child-height-revert\@l > :not([class*='uk-height']) { height: revert; }
        
         .uk-height-unset\@l           { height: unset; }
         .uk-min-height-unset\@l       { min-height: unset; }
         .uk-max-height-unset\@l       { max-height: unset; }
         .uk-child-height-unset\@l > :not([class*='uk-height']) { height: unset; }
        
  
  
         .uk-height-small\@l           { height: 150px; }
         .uk-min-height-small\@l       { min-height: 150px; }
         .uk-max-height-small\@l       { max-height: 150px; }
         .uk-child-height-small\@l > :not([class*='uk-height']) { height: 150px; }
        
         .uk-height-medium\@l           { height: 300px; }
         .uk-min-height-medium\@l       { min-height: 300px; }
         .uk-max-height-medium\@l       { max-height: 300px; }
         .uk-child-height-medium\@l > :not([class*='uk-height']) { height: 300px; }
        
         .uk-height-large\@l           { height: 450px; }
         .uk-min-height-large\@l       { min-height: 450px; }
         .uk-max-height-large\@l       { max-height: 450px; }
         .uk-child-height-large\@l > :not([class*='uk-height']) { height: 450px; }
        
         .uk-height-xlarge\@l           { height: 600px; }
         .uk-min-height-xlarge\@l       { min-height: 600px; }
         .uk-max-height-xlarge\@l       { max-height: 600px; }
         .uk-child-height-xlarge\@l > :not([class*='uk-height']) { height: 600px; }
        
         .uk-height-2xlarge\@l           { height: 750px; }
         .uk-min-height-2xlarge\@l       { min-height: 750px; }
         .uk-max-height-2xlarge\@l       { max-height: 750px; }
         .uk-child-height-2xlarge\@l > :not([class*='uk-height']) { height: 750px; }
        

  .uk-min-height-fill\@l { min-height: ${size[j]}; }
  .uk-max-height-fill\@l { max-height: ${size[j]}; }

  .uk-height-fill\@l     { height: -webkit-fill-available !important; }
  .uk-height-expand\@l   { flex: 1; min-height: 1px; min-height: 100vh; }

  .uk-child-height-fill\@l > :not([class*='uk-height']) { height: -webkit-fill-available !important; }
  .uk-child-height-expand\@l > :not([class*='uk-height']) { flex: 1; min-height: 1px; min-height: 100vh; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1600px) {

  
      .uk-height-11-12\@xl           { height: 91.6667vh; }
      .uk-min-height-11-12\@xl       { min-height: 91.6667vh; }
      .uk-max-height-11-12\@xl       { max-height: 91.6667vh; }
      .uk-child-height-11-12\@xl > :not([class*='uk-height']) { height: 91.6667vh; }
      

      .uk-height-10-12\@xl           { height: 83.3333vh; }
      .uk-min-height-10-12\@xl       { min-height: 83.3333vh; }
      .uk-max-height-10-12\@xl       { max-height: 83.3333vh; }
      .uk-child-height-10-12\@xl > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-9-12\@xl           { height: 75vh; }
      .uk-min-height-9-12\@xl       { min-height: 75vh; }
      .uk-max-height-9-12\@xl       { max-height: 75vh; }
      .uk-child-height-9-12\@xl > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-8-12\@xl           { height: 66.6667vh; }
      .uk-min-height-8-12\@xl       { min-height: 66.6667vh; }
      .uk-max-height-8-12\@xl       { max-height: 66.6667vh; }
      .uk-child-height-8-12\@xl > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-7-12\@xl           { height: 58.3333vh; }
      .uk-min-height-7-12\@xl       { min-height: 58.3333vh; }
      .uk-max-height-7-12\@xl       { max-height: 58.3333vh; }
      .uk-child-height-7-12\@xl > :not([class*='uk-height']) { height: 58.3333vh; }
      

      .uk-height-6-12\@xl           { height: 50vh; }
      .uk-min-height-6-12\@xl       { min-height: 50vh; }
      .uk-max-height-6-12\@xl       { max-height: 50vh; }
      .uk-child-height-6-12\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-5-12\@xl           { height: 41.6667vh; }
      .uk-min-height-5-12\@xl       { min-height: 41.6667vh; }
      .uk-max-height-5-12\@xl       { max-height: 41.6667vh; }
      .uk-child-height-5-12\@xl > :not([class*='uk-height']) { height: 41.6667vh; }
      

      .uk-height-4-12\@xl           { height: 33.3333vh; }
      .uk-min-height-4-12\@xl       { min-height: 33.3333vh; }
      .uk-max-height-4-12\@xl       { max-height: 33.3333vh; }
      .uk-child-height-4-12\@xl > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-3-12\@xl           { height: 25vh; }
      .uk-min-height-3-12\@xl       { min-height: 25vh; }
      .uk-max-height-3-12\@xl       { max-height: 25vh; }
      .uk-child-height-3-12\@xl > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-12\@xl           { height: 16.6667vh; }
      .uk-min-height-2-12\@xl       { min-height: 16.6667vh; }
      .uk-max-height-2-12\@xl       { max-height: 16.6667vh; }
      .uk-child-height-2-12\@xl > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-1-12\@xl           { height: 8.3333vh; }
      .uk-min-height-1-12\@xl       { min-height: 8.3333vh; }
      .uk-max-height-1-12\@xl       { max-height: 8.3333vh; }
      .uk-child-height-1-12\@xl > :not([class*='uk-height']) { height: 8.3333vh; }
      

      .uk-height-10-11\@xl           { height: 90.9091vh; }
      .uk-min-height-10-11\@xl       { min-height: 90.9091vh; }
      .uk-max-height-10-11\@xl       { max-height: 90.9091vh; }
      .uk-child-height-10-11\@xl > :not([class*='uk-height']) { height: 90.9091vh; }
      

      .uk-height-9-11\@xl           { height: 81.8182vh; }
      .uk-min-height-9-11\@xl       { min-height: 81.8182vh; }
      .uk-max-height-9-11\@xl       { max-height: 81.8182vh; }
      .uk-child-height-9-11\@xl > :not([class*='uk-height']) { height: 81.8182vh; }
      

      .uk-height-8-11\@xl           { height: 72.7273vh; }
      .uk-min-height-8-11\@xl       { min-height: 72.7273vh; }
      .uk-max-height-8-11\@xl       { max-height: 72.7273vh; }
      .uk-child-height-8-11\@xl > :not([class*='uk-height']) { height: 72.7273vh; }
      

      .uk-height-7-11\@xl           { height: 63.6364vh; }
      .uk-min-height-7-11\@xl       { min-height: 63.6364vh; }
      .uk-max-height-7-11\@xl       { max-height: 63.6364vh; }
      .uk-child-height-7-11\@xl > :not([class*='uk-height']) { height: 63.6364vh; }
      

      .uk-height-6-11\@xl           { height: 54.5455vh; }
      .uk-min-height-6-11\@xl       { min-height: 54.5455vh; }
      .uk-max-height-6-11\@xl       { max-height: 54.5455vh; }
      .uk-child-height-6-11\@xl > :not([class*='uk-height']) { height: 54.5455vh; }
      

      .uk-height-5-11\@xl           { height: 45.4545vh; }
      .uk-min-height-5-11\@xl       { min-height: 45.4545vh; }
      .uk-max-height-5-11\@xl       { max-height: 45.4545vh; }
      .uk-child-height-5-11\@xl > :not([class*='uk-height']) { height: 45.4545vh; }
      

      .uk-height-4-11\@xl           { height: 36.3636vh; }
      .uk-min-height-4-11\@xl       { min-height: 36.3636vh; }
      .uk-max-height-4-11\@xl       { max-height: 36.3636vh; }
      .uk-child-height-4-11\@xl > :not([class*='uk-height']) { height: 36.3636vh; }
      

      .uk-height-3-11\@xl           { height: 27.2727vh; }
      .uk-min-height-3-11\@xl       { min-height: 27.2727vh; }
      .uk-max-height-3-11\@xl       { max-height: 27.2727vh; }
      .uk-child-height-3-11\@xl > :not([class*='uk-height']) { height: 27.2727vh; }
      

      .uk-height-2-11\@xl           { height: 18.1818vh; }
      .uk-min-height-2-11\@xl       { min-height: 18.1818vh; }
      .uk-max-height-2-11\@xl       { max-height: 18.1818vh; }
      .uk-child-height-2-11\@xl > :not([class*='uk-height']) { height: 18.1818vh; }
      

      .uk-height-1-11\@xl           { height: 9.0909vh; }
      .uk-min-height-1-11\@xl       { min-height: 9.0909vh; }
      .uk-max-height-1-11\@xl       { max-height: 9.0909vh; }
      .uk-child-height-1-11\@xl > :not([class*='uk-height']) { height: 9.0909vh; }
      

      .uk-height-9-10\@xl           { height: 90vh; }
      .uk-min-height-9-10\@xl       { min-height: 90vh; }
      .uk-max-height-9-10\@xl       { max-height: 90vh; }
      .uk-child-height-9-10\@xl > :not([class*='uk-height']) { height: 90vh; }
      

      .uk-height-8-10\@xl           { height: 80vh; }
      .uk-min-height-8-10\@xl       { min-height: 80vh; }
      .uk-max-height-8-10\@xl       { max-height: 80vh; }
      .uk-child-height-8-10\@xl > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-7-10\@xl           { height: 70vh; }
      .uk-min-height-7-10\@xl       { min-height: 70vh; }
      .uk-max-height-7-10\@xl       { max-height: 70vh; }
      .uk-child-height-7-10\@xl > :not([class*='uk-height']) { height: 70vh; }
      

      .uk-height-6-10\@xl           { height: 60vh; }
      .uk-min-height-6-10\@xl       { min-height: 60vh; }
      .uk-max-height-6-10\@xl       { max-height: 60vh; }
      .uk-child-height-6-10\@xl > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-5-10\@xl           { height: 50vh; }
      .uk-min-height-5-10\@xl       { min-height: 50vh; }
      .uk-max-height-5-10\@xl       { max-height: 50vh; }
      .uk-child-height-5-10\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-4-10\@xl           { height: 40vh; }
      .uk-min-height-4-10\@xl       { min-height: 40vh; }
      .uk-max-height-4-10\@xl       { max-height: 40vh; }
      .uk-child-height-4-10\@xl > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-3-10\@xl           { height: 30vh; }
      .uk-min-height-3-10\@xl       { min-height: 30vh; }
      .uk-max-height-3-10\@xl       { max-height: 30vh; }
      .uk-child-height-3-10\@xl > :not([class*='uk-height']) { height: 30vh; }
      

      .uk-height-2-10\@xl           { height: 20vh; }
      .uk-min-height-2-10\@xl       { min-height: 20vh; }
      .uk-max-height-2-10\@xl       { max-height: 20vh; }
      .uk-child-height-2-10\@xl > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-1-10\@xl           { height: 10vh; }
      .uk-min-height-1-10\@xl       { min-height: 10vh; }
      .uk-max-height-1-10\@xl       { max-height: 10vh; }
      .uk-child-height-1-10\@xl > :not([class*='uk-height']) { height: 10vh; }
      

      .uk-height-8-9\@xl           { height: 88.8889vh; }
      .uk-min-height-8-9\@xl       { min-height: 88.8889vh; }
      .uk-max-height-8-9\@xl       { max-height: 88.8889vh; }
      .uk-child-height-8-9\@xl > :not([class*='uk-height']) { height: 88.8889vh; }
      

      .uk-height-7-9\@xl           { height: 77.7778vh; }
      .uk-min-height-7-9\@xl       { min-height: 77.7778vh; }
      .uk-max-height-7-9\@xl       { max-height: 77.7778vh; }
      .uk-child-height-7-9\@xl > :not([class*='uk-height']) { height: 77.7778vh; }
      

      .uk-height-6-9\@xl           { height: 66.6667vh; }
      .uk-min-height-6-9\@xl       { min-height: 66.6667vh; }
      .uk-max-height-6-9\@xl       { max-height: 66.6667vh; }
      .uk-child-height-6-9\@xl > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-5-9\@xl           { height: 55.5556vh; }
      .uk-min-height-5-9\@xl       { min-height: 55.5556vh; }
      .uk-max-height-5-9\@xl       { max-height: 55.5556vh; }
      .uk-child-height-5-9\@xl > :not([class*='uk-height']) { height: 55.5556vh; }
      

      .uk-height-4-9\@xl           { height: 44.4444vh; }
      .uk-min-height-4-9\@xl       { min-height: 44.4444vh; }
      .uk-max-height-4-9\@xl       { max-height: 44.4444vh; }
      .uk-child-height-4-9\@xl > :not([class*='uk-height']) { height: 44.4444vh; }
      

      .uk-height-3-9\@xl           { height: 33.3333vh; }
      .uk-min-height-3-9\@xl       { min-height: 33.3333vh; }
      .uk-max-height-3-9\@xl       { max-height: 33.3333vh; }
      .uk-child-height-3-9\@xl > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-2-9\@xl           { height: 22.2222vh; }
      .uk-min-height-2-9\@xl       { min-height: 22.2222vh; }
      .uk-max-height-2-9\@xl       { max-height: 22.2222vh; }
      .uk-child-height-2-9\@xl > :not([class*='uk-height']) { height: 22.2222vh; }
      

      .uk-height-1-9\@xl           { height: 11.1111vh; }
      .uk-min-height-1-9\@xl       { min-height: 11.1111vh; }
      .uk-max-height-1-9\@xl       { max-height: 11.1111vh; }
      .uk-child-height-1-9\@xl > :not([class*='uk-height']) { height: 11.1111vh; }
      

      .uk-height-7-8\@xl           { height: 87.5vh; }
      .uk-min-height-7-8\@xl       { min-height: 87.5vh; }
      .uk-max-height-7-8\@xl       { max-height: 87.5vh; }
      .uk-child-height-7-8\@xl > :not([class*='uk-height']) { height: 87.5vh; }
      

      .uk-height-6-8\@xl           { height: 75vh; }
      .uk-min-height-6-8\@xl       { min-height: 75vh; }
      .uk-max-height-6-8\@xl       { max-height: 75vh; }
      .uk-child-height-6-8\@xl > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-5-8\@xl           { height: 62.5vh; }
      .uk-min-height-5-8\@xl       { min-height: 62.5vh; }
      .uk-max-height-5-8\@xl       { max-height: 62.5vh; }
      .uk-child-height-5-8\@xl > :not([class*='uk-height']) { height: 62.5vh; }
      

      .uk-height-4-8\@xl           { height: 50vh; }
      .uk-min-height-4-8\@xl       { min-height: 50vh; }
      .uk-max-height-4-8\@xl       { max-height: 50vh; }
      .uk-child-height-4-8\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-3-8\@xl           { height: 37.5vh; }
      .uk-min-height-3-8\@xl       { min-height: 37.5vh; }
      .uk-max-height-3-8\@xl       { max-height: 37.5vh; }
      .uk-child-height-3-8\@xl > :not([class*='uk-height']) { height: 37.5vh; }
      

      .uk-height-2-8\@xl           { height: 25vh; }
      .uk-min-height-2-8\@xl       { min-height: 25vh; }
      .uk-max-height-2-8\@xl       { max-height: 25vh; }
      .uk-child-height-2-8\@xl > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-1-8\@xl           { height: 12.5vh; }
      .uk-min-height-1-8\@xl       { min-height: 12.5vh; }
      .uk-max-height-1-8\@xl       { max-height: 12.5vh; }
      .uk-child-height-1-8\@xl > :not([class*='uk-height']) { height: 12.5vh; }
      

      .uk-height-6-7\@xl           { height: 85.7143vh; }
      .uk-min-height-6-7\@xl       { min-height: 85.7143vh; }
      .uk-max-height-6-7\@xl       { max-height: 85.7143vh; }
      .uk-child-height-6-7\@xl > :not([class*='uk-height']) { height: 85.7143vh; }
      

      .uk-height-5-7\@xl           { height: 71.4286vh; }
      .uk-min-height-5-7\@xl       { min-height: 71.4286vh; }
      .uk-max-height-5-7\@xl       { max-height: 71.4286vh; }
      .uk-child-height-5-7\@xl > :not([class*='uk-height']) { height: 71.4286vh; }
      

      .uk-height-4-7\@xl           { height: 57.1429vh; }
      .uk-min-height-4-7\@xl       { min-height: 57.1429vh; }
      .uk-max-height-4-7\@xl       { max-height: 57.1429vh; }
      .uk-child-height-4-7\@xl > :not([class*='uk-height']) { height: 57.1429vh; }
      

      .uk-height-3-7\@xl           { height: 42.8571vh; }
      .uk-min-height-3-7\@xl       { min-height: 42.8571vh; }
      .uk-max-height-3-7\@xl       { max-height: 42.8571vh; }
      .uk-child-height-3-7\@xl > :not([class*='uk-height']) { height: 42.8571vh; }
      

      .uk-height-2-7\@xl           { height: 28.5714vh; }
      .uk-min-height-2-7\@xl       { min-height: 28.5714vh; }
      .uk-max-height-2-7\@xl       { max-height: 28.5714vh; }
      .uk-child-height-2-7\@xl > :not([class*='uk-height']) { height: 28.5714vh; }
      

      .uk-height-1-7\@xl           { height: 14.2857vh; }
      .uk-min-height-1-7\@xl       { min-height: 14.2857vh; }
      .uk-max-height-1-7\@xl       { max-height: 14.2857vh; }
      .uk-child-height-1-7\@xl > :not([class*='uk-height']) { height: 14.2857vh; }
      

      .uk-height-5-6\@xl           { height: 83.3333vh; }
      .uk-min-height-5-6\@xl       { min-height: 83.3333vh; }
      .uk-max-height-5-6\@xl       { max-height: 83.3333vh; }
      .uk-child-height-5-6\@xl > :not([class*='uk-height']) { height: 83.3333vh; }
      

      .uk-height-4-6\@xl           { height: 66.6667vh; }
      .uk-min-height-4-6\@xl       { min-height: 66.6667vh; }
      .uk-max-height-4-6\@xl       { max-height: 66.6667vh; }
      .uk-child-height-4-6\@xl > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-3-6\@xl           { height: 50vh; }
      .uk-min-height-3-6\@xl       { min-height: 50vh; }
      .uk-max-height-3-6\@xl       { max-height: 50vh; }
      .uk-child-height-3-6\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-2-6\@xl           { height: 33.3333vh; }
      .uk-min-height-2-6\@xl       { min-height: 33.3333vh; }
      .uk-max-height-2-6\@xl       { max-height: 33.3333vh; }
      .uk-child-height-2-6\@xl > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-6\@xl           { height: 16.6667vh; }
      .uk-min-height-1-6\@xl       { min-height: 16.6667vh; }
      .uk-max-height-1-6\@xl       { max-height: 16.6667vh; }
      .uk-child-height-1-6\@xl > :not([class*='uk-height']) { height: 16.6667vh; }
      

      .uk-height-4-5\@xl           { height: 80vh; }
      .uk-min-height-4-5\@xl       { min-height: 80vh; }
      .uk-max-height-4-5\@xl       { max-height: 80vh; }
      .uk-child-height-4-5\@xl > :not([class*='uk-height']) { height: 80vh; }
      

      .uk-height-3-5\@xl           { height: 60vh; }
      .uk-min-height-3-5\@xl       { min-height: 60vh; }
      .uk-max-height-3-5\@xl       { max-height: 60vh; }
      .uk-child-height-3-5\@xl > :not([class*='uk-height']) { height: 60vh; }
      

      .uk-height-2-5\@xl           { height: 40vh; }
      .uk-min-height-2-5\@xl       { min-height: 40vh; }
      .uk-max-height-2-5\@xl       { max-height: 40vh; }
      .uk-child-height-2-5\@xl > :not([class*='uk-height']) { height: 40vh; }
      

      .uk-height-1-5\@xl           { height: 20vh; }
      .uk-min-height-1-5\@xl       { min-height: 20vh; }
      .uk-max-height-1-5\@xl       { max-height: 20vh; }
      .uk-child-height-1-5\@xl > :not([class*='uk-height']) { height: 20vh; }
      

      .uk-height-3-4\@xl           { height: 75vh; }
      .uk-min-height-3-4\@xl       { min-height: 75vh; }
      .uk-max-height-3-4\@xl       { max-height: 75vh; }
      .uk-child-height-3-4\@xl > :not([class*='uk-height']) { height: 75vh; }
      

      .uk-height-2-4\@xl           { height: 50vh; }
      .uk-min-height-2-4\@xl       { min-height: 50vh; }
      .uk-max-height-2-4\@xl       { max-height: 50vh; }
      .uk-child-height-2-4\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-4\@xl           { height: 25vh; }
      .uk-min-height-1-4\@xl       { min-height: 25vh; }
      .uk-max-height-1-4\@xl       { max-height: 25vh; }
      .uk-child-height-1-4\@xl > :not([class*='uk-height']) { height: 25vh; }
      

      .uk-height-2-3\@xl           { height: 66.6667vh; }
      .uk-min-height-2-3\@xl       { min-height: 66.6667vh; }
      .uk-max-height-2-3\@xl       { max-height: 66.6667vh; }
      .uk-child-height-2-3\@xl > :not([class*='uk-height']) { height: 66.6667vh; }
      

      .uk-height-1-3\@xl           { height: 33.3333vh; }
      .uk-min-height-1-3\@xl       { min-height: 33.3333vh; }
      .uk-max-height-1-3\@xl       { max-height: 33.3333vh; }
      .uk-child-height-1-3\@xl > :not([class*='uk-height']) { height: 33.3333vh; }
      

      .uk-height-1-2\@xl           { height: 50vh; }
      .uk-min-height-1-2\@xl       { min-height: 50vh; }
      .uk-max-height-1-2\@xl       { max-height: 50vh; }
      .uk-child-height-1-2\@xl > :not([class*='uk-height']) { height: 50vh; }
      

      .uk-height-1-1\@xl           { height: 100vh; }
      .uk-min-height-1-1\@xl       { min-height: 100vh; }
      .uk-max-height-1-1\@xl       { max-height: 100vh; }
      .uk-child-height-1-1\@xl > :not([class*='uk-height']) { height: 100vh; }
      
  
  
         .uk-height-inhertial\@xl           { height: inhertial; }
         .uk-min-height-inhertial\@xl       { min-height: inhertial; }
         .uk-max-height-inhertial\@xl       { max-height: inhertial; }
         .uk-child-height-inhertial\@xl > :not([class*='uk-height']) { height: inhertial; }
        
         .uk-height-initial\@xl           { height: initial; }
         .uk-min-height-initial\@xl       { min-height: initial; }
         .uk-max-height-initial\@xl       { max-height: initial; }
         .uk-child-height-initial\@xl > :not([class*='uk-height']) { height: initial; }
        
         .uk-height-auto\@xl           { height: auto; }
         .uk-min-height-auto\@xl       { min-height: auto; }
         .uk-max-height-auto\@xl       { max-height: auto; }
         .uk-child-height-auto\@xl > :not([class*='uk-height']) { height: auto; }
        
         .uk-height-fit-content\@xl           { height: fit-content; }
         .uk-min-height-fit-content\@xl       { min-height: fit-content; }
         .uk-max-height-fit-content\@xl       { max-height: fit-content; }
         .uk-child-height-fit-content\@xl > :not([class*='uk-height']) { height: fit-content; }
        
         .uk-height-max-content\@xl           { height: max-content; }
         .uk-min-height-max-content\@xl       { min-height: max-content; }
         .uk-max-height-max-content\@xl       { max-height: max-content; }
         .uk-child-height-max-content\@xl > :not([class*='uk-height']) { height: max-content; }
        
         .uk-height-min-content\@xl           { height: min-content; }
         .uk-min-height-min-content\@xl       { min-height: min-content; }
         .uk-max-height-min-content\@xl       { max-height: min-content; }
         .uk-child-height-min-content\@xl > :not([class*='uk-height']) { height: min-content; }
        
         .uk-height-none\@xl           { height: none; }
         .uk-min-height-none\@xl       { min-height: none; }
         .uk-max-height-none\@xl       { max-height: none; }
         .uk-child-height-none\@xl > :not([class*='uk-height']) { height: none; }
        
         .uk-height-revert\@xl           { height: revert; }
         .uk-min-height-revert\@xl       { min-height: revert; }
         .uk-max-height-revert\@xl       { max-height: revert; }
         .uk-child-height-revert\@xl > :not([class*='uk-height']) { height: revert; }
        
         .uk-height-unset\@xl           { height: unset; }
         .uk-min-height-unset\@xl       { min-height: unset; }
         .uk-max-height-unset\@xl       { max-height: unset; }
         .uk-child-height-unset\@xl > :not([class*='uk-height']) { height: unset; }
        
  
  
         .uk-height-small\@xl           { height: 150px; }
         .uk-min-height-small\@xl       { min-height: 150px; }
         .uk-max-height-small\@xl       { max-height: 150px; }
         .uk-child-height-small\@xl > :not([class*='uk-height']) { height: 150px; }
        
         .uk-height-medium\@xl           { height: 300px; }
         .uk-min-height-medium\@xl       { min-height: 300px; }
         .uk-max-height-medium\@xl       { max-height: 300px; }
         .uk-child-height-medium\@xl > :not([class*='uk-height']) { height: 300px; }
        
         .uk-height-large\@xl           { height: 450px; }
         .uk-min-height-large\@xl       { min-height: 450px; }
         .uk-max-height-large\@xl       { max-height: 450px; }
         .uk-child-height-large\@xl > :not([class*='uk-height']) { height: 450px; }
        
         .uk-height-xlarge\@xl           { height: 600px; }
         .uk-min-height-xlarge\@xl       { min-height: 600px; }
         .uk-max-height-xlarge\@xl       { max-height: 600px; }
         .uk-child-height-xlarge\@xl > :not([class*='uk-height']) { height: 600px; }
        
         .uk-height-2xlarge\@xl           { height: 750px; }
         .uk-min-height-2xlarge\@xl       { min-height: 750px; }
         .uk-max-height-2xlarge\@xl       { max-height: 750px; }
         .uk-child-height-2xlarge\@xl > :not([class*='uk-height']) { height: 750px; }
        

  .uk-min-height-fill\@xl { min-height: ${size[j]}; }
  .uk-max-height-fill\@xl { max-height: ${size[j]}; }

  .uk-height-fill\@xl     { height: -webkit-fill-available !important; }
  .uk-height-expand\@xl   { flex: 1; min-height: 1px; min-height: 100vh; }

  .uk-child-height-fill\@xl > :not([class*='uk-height']) { height: -webkit-fill-available !important; }
  .uk-child-height-expand\@xl > :not([class*='uk-height']) { flex: 1; min-height: 1px; min-height: 100vh; }

}

/* Style modifiers
 ========================================================================== */
.uk-text-lead {
  font-size: 1.5rem;
  line-height: 1.5;
  color: #333;
}
.uk-text-meta {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #999;
}
.uk-text-meta a {
  color: #999;
}
.uk-text-meta a:hover {
  color: #666;
  text-decoration: none;
}
/* Size modifiers
 ========================================================================== */
.uk-text-small {
  font-size: 0.875rem;
  line-height: 1.5;
}
.uk-text-large {
  font-size: 1.5rem;
  line-height: 1.5;
}
.uk-text-default {
  font-size: 16px;
  line-height: 1.5;
}
/* Weight modifier
 ========================================================================== */
.uk-text-light {
  font-weight: 300;
}
.uk-text-normal {
  font-weight: 400;
}
.uk-text-bold {
  font-weight: 700;
}
.uk-text-lighter {
  font-weight: lighter;
}
.uk-text-bolder {
  font-weight: bolder;
}
/* Style modifier
 ========================================================================== */
.uk-text-italic {
  font-style: italic;
}
/* Transform modifier
 ========================================================================== */
.uk-text-capitalize {
  text-transform: capitalize !important;
}
.uk-text-uppercase {
  text-transform: uppercase !important;
}
.uk-text-lowercase {
  text-transform: lowercase !important;
}
/* Decoration modifier
 ========================================================================== */
.uk-text-decoration-none {
  text-decoration: none !important;
}
/* Color modifiers
 ========================================================================== */

/* TODO: css compiled */

      .uk-text-mute { color: var(--color-mute) !important; }
      .uk-text-mute>:not([class*='uk-text']){ color: var(--color-mute) !important; }
    

      .uk-text-danger { color: var(--color-danger) !important; }
      .uk-text-danger>:not([class*='uk-text']){ color: var(--color-danger) !important; }
    

      .uk-text-success { color: var(--color-success) !important; }
      .uk-text-success>:not([class*='uk-text']){ color: var(--color-success) !important; }
    

      .uk-text-default { color: var(--color-default) !important; }
      .uk-text-default>:not([class*='uk-text']){ color: var(--color-default) !important; }
    

      .uk-text-primary { color: var(--color-primary) !important; }
      .uk-text-primary>:not([class*='uk-text']){ color: var(--color-primary) !important; }
    

      .uk-text-warning { color: var(--color-warning) !important; }
      .uk-text-warning>:not([class*='uk-text']){ color: var(--color-warning) !important; }
    

      .uk-text-secondary { color: var(--color-secondary) !important; }
      .uk-text-secondary>:not([class*='uk-text']){ color: var(--color-secondary) !important; }
    


    .uk-text-top { vertical-align: top !important; }
    .uk-text-top >:not([class*='uk-text']) { vertical-align: top !important; }
  
    .uk-text-middle { vertical-align: middle !important; }
    .uk-text-middle >:not([class*='uk-text']) { vertical-align: middle !important; }
  
    .uk-text-bottom { vertical-align: bottom !important; }
    .uk-text-bottom >:not([class*='uk-text']) { vertical-align: bottom !important; }
  
    .uk-text-baseline { vertical-align: baseline !important; }
    .uk-text-baseline >:not([class*='uk-text']) { vertical-align: baseline !important; }
  


    .uk-text-left { text-align: left !important; }
    .uk-text-left >:not([class*='uk-text']) { text-align: left !important; }
  
    .uk-text-right { text-align: right !important; }
    .uk-text-right >:not([class*='uk-text']) { text-align: right !important; }
  
    .uk-text-center { text-align: center !important; }
    .uk-text-center >:not([class*='uk-text']) { text-align: center !important; }
  
    .uk-text-justify { text-align: justify !important; }
    .uk-text-justify >:not([class*='uk-text']) { text-align: justify !important; }
  

/* TODO: css compiled */

/* Background modifier
 ========================================================================== */
/*
 * 1. The background clips to the foreground text. Works in all browsers.
 * 2. Default color is set to transparent.
 * 3. Container fits the text
 * 4. Style
 */
.uk-text-background {
  display: inline-block;
  /* 1 */
  -webkit-background-clip: text;
  /* 2 */
  color: transparent !important;
  /* 3 */
  background-color: var(--color-primary);
}
/* Alignment modifiers
 ========================================================================== */

/* Phone landscape and bigger */
@media (min-width: 640px) {
  
      .uk-text-left\@s { text-align: left !important; }
      .uk-text-left\@s >:not([class*='uk-text']) { text-align: left !important; }
    
      .uk-text-right\@s { text-align: right !important; }
      .uk-text-right\@s >:not([class*='uk-text']) { text-align: right !important; }
    
      .uk-text-center\@s { text-align: center !important; }
      .uk-text-center\@s >:not([class*='uk-text']) { text-align: center !important; }
    
      .uk-text-justify\@s { text-align: justify !important; }
      .uk-text-justify\@s >:not([class*='uk-text']) { text-align: justify !important; }
    
  
      .uk-text-top\@s { vertical-align: top !important; }
      .uk-text-top\@s >:not([class*='uk-text']) { vertical-align: top !important; }
    
      .uk-text-middle\@s { vertical-align: middle !important; }
      .uk-text-middle\@s >:not([class*='uk-text']) { vertical-align: middle !important; }
    
      .uk-text-bottom\@s { vertical-align: bottom !important; }
      .uk-text-bottom\@s >:not([class*='uk-text']) { vertical-align: bottom !important; }
    
      .uk-text-baseline\@s { vertical-align: baseline !important; }
      .uk-text-baseline\@s >:not([class*='uk-text']) { vertical-align: baseline !important; }
    
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  
      .uk-text-left\@m { text-align: left !important; }
      .uk-text-left\@m >:not([class*='uk-text']) { text-align: left !important; }
    
      .uk-text-right\@m { text-align: right !important; }
      .uk-text-right\@m >:not([class*='uk-text']) { text-align: right !important; }
    
      .uk-text-center\@m { text-align: center !important; }
      .uk-text-center\@m >:not([class*='uk-text']) { text-align: center !important; }
    
      .uk-text-justify\@m { text-align: justify !important; }
      .uk-text-justify\@m >:not([class*='uk-text']) { text-align: justify !important; }
    
  
      .uk-text-top\@m { vertical-align: top !important; }
      .uk-text-top\@m >:not([class*='uk-text']) { vertical-align: top !important; }
    
      .uk-text-middle\@m { vertical-align: middle !important; }
      .uk-text-middle\@m >:not([class*='uk-text']) { vertical-align: middle !important; }
    
      .uk-text-bottom\@m { vertical-align: bottom !important; }
      .uk-text-bottom\@m >:not([class*='uk-text']) { vertical-align: bottom !important; }
    
      .uk-text-baseline\@m { vertical-align: baseline !important; }
      .uk-text-baseline\@m >:not([class*='uk-text']) { vertical-align: baseline !important; }
    
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  
      .uk-text-left\@l { text-align: left !important; }
      .uk-text-left\@l >:not([class*='uk-text']) { text-align: left !important; }
    
      .uk-text-right\@l { text-align: right !important; }
      .uk-text-right\@l >:not([class*='uk-text']) { text-align: right !important; }
    
      .uk-text-center\@l { text-align: center !important; }
      .uk-text-center\@l >:not([class*='uk-text']) { text-align: center !important; }
    
      .uk-text-justify\@l { text-align: justify !important; }
      .uk-text-justify\@l >:not([class*='uk-text']) { text-align: justify !important; }
    
  
      .uk-text-top\@l { vertical-align: top !important; }
      .uk-text-top\@l >:not([class*='uk-text']) { vertical-align: top !important; }
    
      .uk-text-middle\@l { vertical-align: middle !important; }
      .uk-text-middle\@l >:not([class*='uk-text']) { vertical-align: middle !important; }
    
      .uk-text-bottom\@l { vertical-align: bottom !important; }
      .uk-text-bottom\@l >:not([class*='uk-text']) { vertical-align: bottom !important; }
    
      .uk-text-baseline\@l { vertical-align: baseline !important; }
      .uk-text-baseline\@l >:not([class*='uk-text']) { vertical-align: baseline !important; }
    
}

/* Large screen and bigger */
@media (min-width: 1600px) {
  
      .uk-text-left\@xl { text-align: left !important; }
      .uk-text-left\@xl >:not([class*='uk-text']) { text-align: left !important; }
    
      .uk-text-right\@xl { text-align: right !important; }
      .uk-text-right\@xl >:not([class*='uk-text']) { text-align: right !important; }
    
      .uk-text-center\@xl { text-align: center !important; }
      .uk-text-center\@xl >:not([class*='uk-text']) { text-align: center !important; }
    
      .uk-text-justify\@xl { text-align: justify !important; }
      .uk-text-justify\@xl >:not([class*='uk-text']) { text-align: justify !important; }
    
  
      .uk-text-top\@xl { vertical-align: top !important; }
      .uk-text-top\@xl >:not([class*='uk-text']) { vertical-align: top !important; }
    
      .uk-text-middle\@xl { vertical-align: middle !important; }
      .uk-text-middle\@xl >:not([class*='uk-text']) { vertical-align: middle !important; }
    
      .uk-text-bottom\@xl { vertical-align: bottom !important; }
      .uk-text-bottom\@xl >:not([class*='uk-text']) { vertical-align: bottom !important; }
    
      .uk-text-baseline\@xl { vertical-align: baseline !important; }
      .uk-text-baseline\@xl >:not([class*='uk-text']) { vertical-align: baseline !important; }
    
}

/*
 ========================================================================== */
/*
 * Prevent text from wrapping onto multiple lines
 */
.uk-text-nowrap {
  white-space: nowrap;
}
/*
 * 1. Make sure a max-width is set after which truncation can occur
 * 2. Prevent text from wrapping onto multiple lines, and truncate with an ellipsis
 * 3. Fix for table cells
 */
.uk-text-truncate {
  /* 1 */
  max-width: 100%;
  /* 2 */
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
/* 2 */
th.uk-text-truncate,
td.uk-text-truncate {
  max-width: 0;
}
/*
 * Wrap long words onto the next line and break them if they are too long to fit.
 * 1. Make it work with table cells in all browsers.
 * Note: Not using `hyphens: auto` because it hyphenates text even if not needed.
 */
.uk-text-break {
  overflow-wrap: break-word;
}
/* 1 */
th.uk-text-break,
td.uk-text-break {
  word-break: break-word;
}

[class*='uk-column-'] {
  column-gap: 30px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  [class*='uk-column-'] {
    column-gap: 40px;
  }
}
/*
 * Fix image 1px line wrapping into the next column in Chrome
 */
[class*='uk-column-'] img {
  transform: translate3d(0, 0, 0);
}
/* Divider
 ========================================================================== */
/*
 * 1. Double the column gap
 */
.uk-column-divider {
  column-rule: 1px solid #e5e5e5;
  /* 1 */
  column-gap: 60px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-column-divider {
    column-gap: 80px;
  }
}
/* Width modifiers
 ========================================================================== */
.uk-column-1-2 {
  column-count: 2;
}
.uk-column-1-3 {
  column-count: 3;
}
.uk-column-1-4 {
  column-count: 4;
}
.uk-column-1-5 {
  column-count: 5;
}
.uk-column-1-6 {
  column-count: 6;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-column-1-2\@s {
    column-count: 2;
  }
  .uk-column-1-3\@s {
    column-count: 3;
  }
  .uk-column-1-4\@s {
    column-count: 4;
  }
  .uk-column-1-5\@s {
    column-count: 5;
  }
  .uk-column-1-6\@s {
    column-count: 6;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-column-1-2\@m {
    column-count: 2;
  }
  .uk-column-1-3\@m {
    column-count: 3;
  }
  .uk-column-1-4\@m {
    column-count: 4;
  }
  .uk-column-1-5\@m {
    column-count: 5;
  }
  .uk-column-1-6\@m {
    column-count: 6;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-column-1-2\@l {
    column-count: 2;
  }
  .uk-column-1-3\@l {
    column-count: 3;
  }
  .uk-column-1-4\@l {
    column-count: 4;
  }
  .uk-column-1-5\@l {
    column-count: 5;
  }
  .uk-column-1-6\@l {
    column-count: 6;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .uk-column-1-2\@xl {
    column-count: 2;
  }
  .uk-column-1-3\@xl {
    column-count: 3;
  }
  .uk-column-1-4\@xl {
    column-count: 4;
  }
  .uk-column-1-5\@xl {
    column-count: 5;
  }
  .uk-column-1-6\@xl {
    column-count: 6;
  }
}
/* Make element span across all columns
 * Does not work in Firefox yet
 ========================================================================== */
.uk-column-span {
  column-span: all;
}

/*
 * Works with iframes and embedded content
 * 1. Use attribute to apply transform instantly. Needed if transform is transitioned.
 * 2. Reset responsiveness for embedded content
 * 3. Center object
 * Note: Percent values on the `top` property only works if this element
 *       is absolute positioned or if the container has a height
 */
/* 1 */
[uk-cover],
[data-uk-cover] {
  /* 2 */
  max-width: none;
  /* 3 */
  position: absolute;
  left: 50%; top: 50%;
  --uk-position-translate-x: -50%;
  --uk-position-translate-y: -50%;
  transform: translate(var(--uk-position-translate-x), var(--uk-position-translate-y));
}
iframe[uk-cover],
iframe[data-uk-cover] {
  pointer-events: none;
}
/* Container
 ========================================================================== */
/*
 * 1. Parent container which clips resized object
 * 2. Needed if the child is positioned absolute. See note above
 */
.uk-cover-container {
  /* 1 */
  overflow: hidden;
  /* 2 */
  position: relative;
}

/* Color
 ========================================================================== */

/* TODO: css compiled */

      .uk-background-mute { background-color: var(--color-mute); }
    

      .uk-background-danger { background-color: var(--color-danger); }
    

      .uk-background-success { background-color: var(--color-success); }
    

      .uk-background-default { background-color: var(--color-default); }
    

      .uk-background-primary { background-color: var(--color-primary); }
    

      .uk-background-warning { background-color: var(--color-warning); }
    

      .uk-background-secondary { background-color: var(--color-secondary); }
    

      .uk-background-transparent-mute { background-color: var(--color-transparent-mute); }
    

      .uk-background-transparent-danger { background-color: var(--color-transparent-danger); }
    

      .uk-background-transparent-success { background-color: var(--color-transparent-success); }
    

      .uk-background-transparent-default { background-color: var(--color-transparent-default); }
    

      .uk-background-transparent-primary { background-color: var(--color-transparent-primary); }
    

      .uk-background-transparent-warning { background-color: var(--color-transparent-warning); }
    

      .uk-background-transparent-secondary { background-color: var(--color-transparent-secondary); }
    
/* TODO: css compiled */

/* Size
 ========================================================================== */
.uk-background-cover,
.uk-background-contain,
.uk-background-width-1-1,
.uk-background-height-1-1 {
  background-position: 50% 50%;
  background-repeat: no-repeat;
}
.uk-background-cover {
  background-size: cover;
}
.uk-background-contain {
  background-size: contain;
}
.uk-background-width-1-1 {
  background-size: 100%;
}
.uk-background-height-1-1 {
  background-size: auto 100%;
}
/* Position
 ========================================================================== */
.uk-background-top-left {
  background-position: 0 0;
}
.uk-background-top-center {
  background-position: 50% 0;
}
.uk-background-top-right {
  background-position: 100% 0;
}
.uk-background-center-left {
  background-position: 0 50%;
}
.uk-background-center-center {
  background-position: 50% 50%;
}
.uk-background-center-right {
  background-position: 100% 50%;
}
.uk-background-bottom-left {
  background-position: 0 100%;
}
.uk-background-bottom-center {
  background-position: 50% 100%;
}
.uk-background-bottom-right {
  background-position: 100% 100%;
}
/* Repeat
 ========================================================================== */
.uk-background-norepeat {
  background-repeat: no-repeat;
}
/* Attachment
 ========================================================================== */
/*
 * 1. Fix bug introduced in Chrome 67: the background image is not visible if any element on the page uses `translate3d`
 */
.uk-background-fixed {
  background-attachment: fixed;
  /* 1 */
  backface-visibility: hidden;
}
/*
 * Exclude touch devices because `fixed` doesn't work on iOS and Android
 */
@media (pointer: coarse) {
  .uk-background-fixed {
    background-attachment: scroll;
  }
}
/* Image
 ========================================================================== */
/* Phone portrait and smaller */
@media (max-width: 639px) {
  .uk-background-image\@s {
    background-image: none !important;
  }
}
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .uk-background-image\@m {
    background-image: none !important;
  }
}
/* Tablet landscape and smaller */
@media (max-width: 1199px) {
  .uk-background-image\@l {
    background-image: none !important;
  }
}
/* Desktop and smaller */
@media (max-width: 1599px) {
  .uk-background-image\@xl {
    background-image: none !important;
  }
}
/* Blend modes
 ========================================================================== */
.uk-background-blend-multiply {
  background-blend-mode: multiply;
}
.uk-background-blend-screen {
  background-blend-mode: screen;
}
.uk-background-blend-overlay {
  background-blend-mode: overlay;
}
.uk-background-blend-darken {
  background-blend-mode: darken;
}
.uk-background-blend-lighten {
  background-blend-mode: lighten;
}
.uk-background-blend-color-dodge {
  background-blend-mode: color-dodge;
}
.uk-background-blend-color-burn {
  background-blend-mode: color-burn;
}
.uk-background-blend-hard-light {
  background-blend-mode: hard-light;
}
.uk-background-blend-soft-light {
  background-blend-mode: soft-light;
}
.uk-background-blend-difference {
  background-blend-mode: difference;
}
.uk-background-blend-exclusion {
  background-blend-mode: exclusion;
}
.uk-background-blend-hue {
  background-blend-mode: hue;
}
.uk-background-blend-saturation {
  background-blend-mode: saturation;
}
.uk-background-blend-color {
  background-blend-mode: color;
}
.uk-background-blend-luminosity {
  background-blend-mode: luminosity;
}

/*
 * Default
 */
[class*='uk-align'] {
  display: block;
  margin-bottom: 30px;
}
* + [class*='uk-align'] {
  margin-top: 30px;
}
/*
 * Center
 */
.uk-align-center {
  margin-left: auto;
  margin-right: auto;
}
/*
 * Left/Right
 */
.uk-align-left {
  margin-right: 30px;
  margin-top: 0;
  float: left;
}
.uk-align-right {
  margin-left: 30px;
  margin-top: 0;
  float: right;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-align-left\@s {
    margin-right: 30px;
    margin-top: 0;
    float: left;
  }
  .uk-align-right\@s {
    margin-left: 30px;
    margin-top: 0;
    float: right;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-align-left\@m {
    margin-right: 30px;
    margin-top: 0;
    float: left;
  }
  .uk-align-right\@m {
    margin-left: 30px;
    margin-top: 0;
    float: right;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-align-left\@l {
    margin-top: 0;
    float: left;
  }
  .uk-align-right\@l {
    margin-top: 0;
    float: right;
  }
  .uk-align-left,
  .uk-align-left\@s,
  .uk-align-left\@m,
  .uk-align-left\@l {
    margin-right: 40px;
  }
  .uk-align-right,
  .uk-align-right\@s,
  .uk-align-right\@m,
  .uk-align-right\@l {
    margin-left: 40px;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .uk-align-left\@xl {
    margin-right: 40px;
    margin-top: 0;
    float: left;
  }
  .uk-align-right\@xl {
    margin-left: 40px;
    margin-top: 0;
    float: right;
  }
}

/*
 * 1. Fill all SVG elements with the current text color if no `fill` attribute is set
 * 2. Set the fill and stroke color of all SVG elements to the current text color
 */
/* 1 */
.uk-svg,
.uk-svg:not(.uk-preserve) [fill*='#']:not(.uk-preserve) {
  fill: currentcolor;
}
.uk-svg:not(.uk-preserve) [stroke*='#']:not(.uk-preserve) {
  stroke: currentcolor;
}
/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */
.uk-svg {
  transform: translate(0, 0);
}

/* Panel
 ========================================================================== */
.uk-panel {
  display: flow-root;
  position: relative;
  box-sizing: border-box;
}
/*
 * Remove margin from the last-child
 */
.uk-panel > :last-child {
  margin-bottom: 0;
}
/*
 * Scrollable
 */
.uk-panel-scrollable {
  -webkit-overflow-scrolling: touch;
  height: 170px; padding: 10px;
  border: 1px solid #e5e5e5;
  overflow: auto;
  resize: both;
}
/* Clearfix
 ========================================================================== */
/*
 * 1. `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
 * 2. `table` is used again with `::after` because `clear` only works with block elements.
 * Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari
 */
/* 1 */
.uk-clearfix::before {
  content: "";
  display: table-cell;
}
/* 2 */
.uk-clearfix::after {
  content: "";
  display: table;
  clear: both;
}
/* Float
 ========================================================================== */
/*
 * 1. Prevent content overflow
 */
.uk-float-left {
  float: left;
}
.uk-float-right {
  float: right;
}
/* 1 */
[class*='uk-float-'] {
  max-width: 100%;
}
/* Overfow
 ========================================================================== */
.uk-overflow-hidden {
  overflow: hidden;
}
/*
 * Enable scrollbars if content is clipped
 */
.uk-overflow-auto {
  overflow: auto;
  -webkit-overflow-scrolling: touch;
}
.uk-overflow-auto > :last-child {
  margin-bottom: 0;
}
/* Box Sizing
 ========================================================================== */
.uk-box-sizing-content {
  box-sizing: content-box;
}
.uk-box-sizing-border {
  box-sizing: border-box;
}
/* Resize
 ========================================================================== */
.uk-resize {
  resize: both;
}
.uk-resize-horizontal {
  resize: horizontal;
}
.uk-resize-vertical {
  resize: vertical;
}
/* Display
 ========================================================================== */
.uk-display-block {
  display: block !important;
}
.uk-display-inline {
  display: inline !important;
}
.uk-display-inline-block {
  display: inline-block !important;
}
/* Inline
 ========================================================================== */
/*
 * 1. Container fits its content
 * 2. Create position context
 * 3. Prevent content overflow
 * 4. Behave like most inline-block elements
 * 5. Force new layer without creating a new stacking context
 *    to fix 1px glitch when combined with overlays and transitions in Webkit
 * 6. Clip child elements
 */
[class*='uk-inline'] {
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  /* 3 */
  max-width: 100%;
  /* 4 */
  vertical-align: middle;
  /* 5 */
  -webkit-backface-visibility: hidden;
}
.uk-inline-clip {
  /* 6 */
  overflow: hidden;
}
/* Responsive objects
 ========================================================================== */
/*
 * Preserve original dimensions
 * Because `img, `video`, `canvas` and  `audio` are already responsive by default, see Base component
 */
.uk-preserve-width,
.uk-preserve-width canvas,
.uk-preserve-width img,
.uk-preserve-width svg,
.uk-preserve-width video {
  max-width: none;
}
/*
 * Responsiveness
 * Corrects `max-width` and `max-height` behavior if padding and border are used
 */
.uk-responsive-width,
.uk-responsive-height {
  box-sizing: border-box;
}
/*
 * 1. Set a maximum width. `important` needed to override `uk-preserve-width img`
 * 2. Auto scale the height. Only needed if `height` attribute is present
 */
.uk-responsive-width {
  /* 1 */
  max-width: 100% !important;
  /* 2 */
  height: auto;
}
/*
 * 1. Set a maximum height. Only works if the parent element has a fixed height
 * 2. Auto scale the width. Only needed if `width` attribute is present
 * 3. Reset max-width, which `img, `video`, `canvas` and  `audio` already have by default
 */
.uk-responsive-height {
  /* 1 */
  max-height: 100%;
  /* 2 */
  width: auto;
  /* 3 */
  max-width: none;
}
/*
 * Fix initial iframe width. Without the viewport is expanded on iOS devices
 */
[uk-responsive],
[data-uk-responsive] {
  max-width: 100%;
}
/* Object
 ========================================================================== */
.uk-object-cover {
  object-fit: cover;
}
.uk-object-contain {
  object-fit: contain;
}
.uk-object-fill {
  object-fit: fill;
}
.uk-object-none {
  object-fit: none;
}
.uk-object-scale-down {
  object-fit: scale-down;
}
/* 
 * Position
 */
.uk-object-top-left {
  object-position: 0 0;
}
.uk-object-top-center {
  object-position: 50% 0;
}
.uk-object-top-right {
  object-position: 100% 0;
}
.uk-object-center-left {
  object-position: 0 50%;
}
.uk-object-center-center {
  object-position: 50% 50%;
}
.uk-object-center-right {
  object-position: 100% 50%;
}
.uk-object-bottom-left {
  object-position: 0 100%;
}
.uk-object-bottom-center {
  object-position: 50% 100%;
}
.uk-object-bottom-right {
  object-position: 100% 100%;
}
/* Border
 ========================================================================== */
.uk-border-circle {
  border-radius: 50%;
}
.uk-border-pill {
  border-radius: 500px;
}
.uk-border-rounded {
  border-radius: 5px;
}
/*
 * Fix `overflow: hidden` to be ignored with border-radius and CSS transforms in Webkit
 */
.uk-inline-clip[class*='uk-border-'] {
  -webkit-transform: translateZ(0);
}
/* Box-shadow
 ========================================================================== */
.uk-box-shadow-small {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}
.uk-box-shadow-medium {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}
.uk-box-shadow-large {
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}
.uk-box-shadow-xlarge {
  box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
}
/*
 * Hover
 */
[class*='uk-box-shadow-hover'] {
  transition: box-shadow 0.1s ease-in-out;
}
.uk-box-shadow-hover-small:hover {
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
}
.uk-box-shadow-hover-medium:hover {
  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
}
.uk-box-shadow-hover-large:hover {
  box-shadow: 0 14px 25px rgba(0, 0, 0, 0.16);
}
.uk-box-shadow-hover-xlarge:hover {
  box-shadow: 0 28px 50px rgba(0, 0, 0, 0.16);
}
/* Box-shadow bottom
 ========================================================================== */
/*
 * 1. Set position.
 * 2. Set style
 * 3. Fix shadow being clipped in Safari if container is animated
 */
@supports (filter: blur(0)) {
  .uk-box-shadow-bottom {
    display: inline-block;
    position: relative;
    z-index: 0;
    max-width: 100%;
    vertical-align: middle;
  }
  .uk-box-shadow-bottom::after {
    content: "";
    /* 1 */
    position: absolute;
    bottom: -30px;
    left: 0;
    right: 0;
    z-index: -1;
    /* 2 */
    height: 30px;
    border-radius: 100%;
    background: #444;
    filter: blur(20px);
    /* 3 */
    will-change: filter;
  }
}
/* Drop cap
 ========================================================================== */
/*
 * 1. Firefox doesn't apply `::first-letter` if the first letter is inside child elements
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=214004
 * 2. In Firefox, a floating `::first-letter` doesn't have a line box and there for no `line-height`
 *    https://bugzilla.mozilla.org/show_bug.cgi?id=317933
 */
.uk-dropcap::first-letter,
.uk-dropcap > p:first-of-type::first-letter {
  display: block;
  margin-right: 10px;
  float: left;
  font-size: 4.5em;
  line-height: 1;
  margin-bottom: -2px;
}
/* 2 */
@-moz-document url-prefix() {
  .uk-dropcap::first-letter,
  .uk-dropcap > p:first-of-type::first-letter {
    margin-top: 1.1%;
  }
}
/* Logo
 ========================================================================== */
/*
 * 1. Style
 * 2. Required for `a`
 * 3. Behave like image but can be overridden through flex utility classes
 */
.uk-logo {
  /* 1 */
  font-size: 1.5rem;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  color: #333;
  /* 2 */
  text-decoration: none;
}
/* 3 */
:where(.uk-logo) {
  display: inline-block;
  vertical-align: middle;
}
/* Hover */
.uk-logo:hover {
  color: #333;
  /* 1 */
  text-decoration: none;
}
.uk-logo :where(img, svg, video) {
  display: block;
}
.uk-logo-inverse {
  display: none;
}
/* Disabled State
 ========================================================================== */
.uk-disabled {
  pointer-events: none;
}
/* Drag State
 ========================================================================== */
/*
 * 1. Needed if moving over elements with have their own cursor on hover, e.g. links or buttons
 * 2. Fix dragging over iframes
 */
.uk-drag,
.uk-drag * {
  cursor: move;
}
/* 2 */
.uk-drag iframe {
  pointer-events: none;
}
/* Dragover State
 ========================================================================== */
/*
 * Create a box-shadow when dragging a file over the upload area
 */
.uk-dragover {
  box-shadow: 0 0 20px rgba(100, 100, 100, 0.3);
}
/* Blend modes
 ========================================================================== */
.uk-blend-multiply {
  mix-blend-mode: multiply;
}
.uk-blend-screen {
  mix-blend-mode: screen;
}
.uk-blend-overlay {
  mix-blend-mode: overlay;
}
.uk-blend-darken {
  mix-blend-mode: darken;
}
.uk-blend-lighten {
  mix-blend-mode: lighten;
}
.uk-blend-color-dodge {
  mix-blend-mode: color-dodge;
}
.uk-blend-color-burn {
  mix-blend-mode: color-burn;
}
.uk-blend-hard-light {
  mix-blend-mode: hard-light;
}
.uk-blend-soft-light {
  mix-blend-mode: soft-light;
}
.uk-blend-difference {
  mix-blend-mode: difference;
}
.uk-blend-exclusion {
  mix-blend-mode: exclusion;
}
.uk-blend-hue {
  mix-blend-mode: hue;
}
.uk-blend-saturation {
  mix-blend-mode: saturation;
}
.uk-blend-color {
  mix-blend-mode: color;
}
.uk-blend-luminosity {
  mix-blend-mode: luminosity;
}
/* Transform
========================================================================== */
.uk-transform-center {
  transform: translate(-50%, -50%);
}
/* Transform Origin
========================================================================== */
.uk-transform-origin-top-left {
  transform-origin: 0 0;
}
.uk-transform-origin-top-center {
  transform-origin: 50% 0;
}
.uk-transform-origin-top-right {
  transform-origin: 100% 0;
}
.uk-transform-origin-center-left {
  transform-origin: 0 50%;
}
.uk-transform-origin-center-right {
  transform-origin: 100% 50%;
}
.uk-transform-origin-bottom-left {
  transform-origin: 0 100%;
}
.uk-transform-origin-bottom-center {
  transform-origin: 50% 100%;
}
.uk-transform-origin-bottom-right {
  transform-origin: 100% 100%;
}

/*───────────────────────────────────────────────────────────────────────────────────────────*/

.uk-flex-inline { display: inline-flex; }
.uk-flex { display: flex; }

/*───────────────────────────────────────────────────────────────────────────────────────────*/

.uk-flex-none { flex: none; }
.uk-flex-auto { flex: auto; }
.uk-flex-1 { flex: 1; }

/*───────────────────────────────────────────────────────────────────────────────────────────*/

.uk-flex-first { order: -1; }
.uk-flex-last { order: 99; }

/*───────────────────────────────────────────────────────────────────────────────────────────*/

.uk-flex-start { justify-content: flex-start }.uk-flex-center { justify-content: center }.uk-flex-end { justify-content: flex-end }.uk-flex-between { justify-content: space-between }.uk-flex-around { justify-content: space-around }

.uk-flex-wrap { flex-wrap: wrap }.uk-flex-nowrap { flex-wrap: nowrap }.uk-flex-reverse { flex-wrap: wrap-reverse }

.uk-flex-stretch { align-items: stretch }.uk-flex-top { align-items: flex-start }.uk-flex-middle { align-items: center }.uk-flex-bottom { align-items: flex-end }

.uk-flex-wrap-stretch { align-content: stretch }.uk-flex-wrap-top { align-content: flex-start }.uk-flex-wrap-middle { align-content: center }.uk-flex-wrap-bottom { align-content: flex-end }.uk-flex-wrap-between { align-content: space-between }.uk-flex-wrap-around { align-content: space-around }

.uk-flex-row { flex-direction: row }.uk-flex-row-reverse { flex-direction: row-reverse }.uk-flex-column { flex-direction: column }.uk-flex-column-reverse { flex-direction: column-reverse }

/*───────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 640px) {

  .uk-flex-none\@s { flex: none; }
  .uk-flex-auto\@s { flex: auto; }
  .uk-flex-1\@s { flex: 1; }
  
  .uk-flex-first\@s { order: -1; }
  .uk-flex-last\@s { order: 99; }
  
  .uk-flex-start\@s { justify-content: flex-start }.uk-flex-center\@s { justify-content: center }.uk-flex-end\@s { justify-content: flex-end }.uk-flex-between\@s { justify-content: space-between }.uk-flex-around\@s { justify-content: space-around }
  
  .uk-flex-wrap\@s { flex-wrap: wrap }.uk-flex-nowrap\@s { flex-wrap: nowrap }.uk-flex-reverse\@s { flex-wrap: wrap-reverse }
  
  .uk-flex-stretch\@s { align-items: stretch }.uk-flex-top\@s { align-items: flex-start }.uk-flex-middle\@s { align-items: center }.uk-flex-bottom\@s { align-items: flex-end }
  
  .uk-flex-wrap-stretch\@s { align-content: stretch }.uk-flex-wrap-top\@s { align-content: flex-start }.uk-flex-wrap-middle\@s { align-content: center }.uk-flex-wrap-bottom\@s { align-content: flex-end }.uk-flex-wrap-between\@s { align-content: space-between }.uk-flex-wrap-around\@s { align-content: space-around }
  
  .uk-flex-row\@s { flex-direction: row }.uk-flex-row-reverse\@s { flex-direction: row-reverse }.uk-flex-column\@s { flex-direction: column }.uk-flex-column-reverse\@s { flex-direction: column-reverse }

}

/*───────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 960px) { 

  .uk-flex-none\@m { flex: none; }
  .uk-flex-auto\@m { flex: auto; }
  .uk-flex-1\@m { flex: 1; }
  
  .uk-flex-first\@m { order: -1; }
  .uk-flex-last\@m { order: 99; }
  
  .uk-flex-start\@m { justify-content: flex-start }.uk-flex-center\@m { justify-content: center }.uk-flex-end\@m { justify-content: flex-end }.uk-flex-between\@m { justify-content: space-between }.uk-flex-around\@m { justify-content: space-around }
  
  .uk-flex-wrap\@m { flex-wrap: wrap }.uk-flex-nowrap\@m { flex-wrap: nowrap }.uk-flex-reverse\@m { flex-wrap: wrap-reverse }
  
  .uk-flex-stretch\@m { align-items: stretch }.uk-flex-top\@m { align-items: flex-start }.uk-flex-middle\@m { align-items: center }.uk-flex-bottom\@m { align-items: flex-end }
  
  .uk-flex-wrap-stretch\@m { align-content: stretch }.uk-flex-wrap-top\@m { align-content: flex-start }.uk-flex-wrap-middle\@m { align-content: center }.uk-flex-wrap-bottom\@m { align-content: flex-end }.uk-flex-wrap-between\@m { align-content: space-between }.uk-flex-wrap-around\@m { align-content: space-around }
  
  .uk-flex-row\@m { flex-direction: row }.uk-flex-row-reverse\@m { flex-direction: row-reverse }.uk-flex-column\@m { flex-direction: column }.uk-flex-column-reverse\@m { flex-direction: column-reverse }

}

/*───────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1200px) { 

  .uk-flex-none\@l { flex: none; }
  .uk-flex-auto\@l { flex: auto; }
  .uk-flex-1\@l { flex: 1; }
  
  .uk-flex-first\@l { order: -1; }
  .uk-flex-last\@l { order: 99; }
  
  .uk-flex-start\@l { justify-content: flex-start }.uk-flex-center\@l { justify-content: center }.uk-flex-end\@l { justify-content: flex-end }.uk-flex-between\@l { justify-content: space-between }.uk-flex-around\@l { justify-content: space-around }
  
  .uk-flex-wrap\@l { flex-wrap: wrap }.uk-flex-nowrap\@l { flex-wrap: nowrap }.uk-flex-reverse\@l { flex-wrap: wrap-reverse }
  
  .uk-flex-stretch\@l { align-items: stretch }.uk-flex-top\@l { align-items: flex-start }.uk-flex-middle\@l { align-items: center }.uk-flex-bottom\@l { align-items: flex-end }
  
  .uk-flex-wrap-stretch\@l { align-content: stretch }.uk-flex-wrap-top\@l { align-content: flex-start }.uk-flex-wrap-middle\@l { align-content: center }.uk-flex-wrap-bottom\@l { align-content: flex-end }.uk-flex-wrap-between\@l { align-content: space-between }.uk-flex-wrap-around\@l { align-content: space-around }
  
  .uk-flex-row\@l { flex-direction: row }.uk-flex-row-reverse\@l { flex-direction: row-reverse }.uk-flex-column\@l { flex-direction: column }.uk-flex-column-reverse\@l { flex-direction: column-reverse }
  
}

/*───────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1600px) {

  .uk-flex-none\@xl { flex: none; }
  .uk-flex-auto\@xl { flex: auto; }
  .uk-flex-1\@xl { flex: 1; }
  
  .uk-flex-first\@xl { order: -1; }
  .uk-flex-last\@xl { order: 99; }
  
  .uk-flex-start\@xl { justify-content: flex-start }.uk-flex-center\@xl { justify-content: center }.uk-flex-end\@xl { justify-content: flex-end }.uk-flex-between\@xl { justify-content: space-between }.uk-flex-around\@xl { justify-content: space-around }
  
  .uk-flex-wrap\@xl { flex-wrap: wrap }.uk-flex-nowrap\@xl { flex-wrap: nowrap }.uk-flex-reverse\@xl { flex-wrap: wrap-reverse }
  
  .uk-flex-stretch\@xl { align-items: stretch }.uk-flex-top\@xl { align-items: flex-start }.uk-flex-middle\@xl { align-items: center }.uk-flex-bottom\@xl { align-items: flex-end }
  
  .uk-flex-wrap-stretch\@xl { align-content: stretch }.uk-flex-wrap-top\@xl { align-content: flex-start }.uk-flex-wrap-middle\@xl { align-content: center }.uk-flex-wrap-bottom\@xl { align-content: flex-end }.uk-flex-wrap-between\@xl { align-content: space-between }.uk-flex-wrap-around\@xl { align-content: space-around }
  
  .uk-flex-row\@xl { flex-direction: row }.uk-flex-row-reverse\@xl { flex-direction: row-reverse }.uk-flex-column\@xl { flex-direction: column }.uk-flex-column-reverse\@xl { flex-direction: column-reverse }

}

/*───────────────────────────────────────────────────────────────────────────────────────────*/

.uk-heading-small {
  font-size: 2.6rem;
  line-height: 1.2;
}
.uk-heading-medium {
  font-size: 2.8875rem;
  line-height: 1.1;
}
.uk-heading-large {
  font-size: 3.4rem;
  line-height: 1.1;
}
.uk-heading-xlarge {
  font-size: 4rem;
  line-height: 1;
}
.uk-heading-2xlarge {
  font-size: 6rem;
  line-height: 1;
}
/* Tablet Landscape and bigger */
@media (min-width: 960px) {
  .uk-heading-small {
    font-size: 3.25rem;
  }
  .uk-heading-medium {
    font-size: 3.5rem;
  }
  .uk-heading-large {
    font-size: 4rem;
  }
  .uk-heading-xlarge {
    font-size: 6rem;
  }
  .uk-heading-2xlarge {
    font-size: 8rem;
  }
}
/* Laptop and bigger */
@media (min-width: 1200px) {
  .uk-heading-medium {
    font-size: 4rem;
  }
  .uk-heading-large {
    font-size: 6rem;
  }
  .uk-heading-xlarge {
    font-size: 8rem;
  }
  .uk-heading-2xlarge {
    font-size: 11rem;
  }
}
/* Primary
   Deprecated: Use `uk-heading-medium` instead
 ========================================================================== */
/* Tablet landscape and bigger */
/* Desktop and bigger */
/* Hero
   Deprecated: Use `uk-heading-xlarge` instead
 ========================================================================== */
/* Tablet landscape and bigger */
/* Desktop and bigger */
/* Divider
 ========================================================================== */
.uk-heading-divider {
  padding-bottom: calc(5px + 0.1em);
  border-bottom: calc(0.2px + 0.05em) solid #e5e5e5;
}
/* Bullet
 ========================================================================== */
.uk-heading-bullet {
  position: relative;
}
/*
 * 1. Using `inline-block` to make it work with text alignment
 * 2. Center vertically
 * 3. Style
 */
.uk-heading-bullet::before {
  content: "";
  /* 1 */
  display: inline-block;
  /* 2 */
  position: relative;
  top: calc(-0.1 * 1em);
  vertical-align: middle;
  /* 3 */
  height: calc(4px + 0.7em);
  margin-right: calc(5px + 0.2em);
  border-left: calc(5px + 0.1em) solid #e5e5e5;
}
/* Line
 ========================================================================== */
/*
 * Clip the child element
 */
.uk-heading-line {
  overflow: hidden;
}
/*
 * Extra markup is needed to make it work with text align
 */
.uk-heading-line > * {
  display: inline-block;
  position: relative;
}
/*
 * 1. Center vertically
 * 2. Make the element as large as possible. It's clipped by the container.
 * 3. Style
 */
.uk-heading-line > ::before,
.uk-heading-line > ::after {
  content: "";
  /* 1 */
  position: absolute;
  top: calc(50% - (calc(0.2px + 0.05em) / 2));
  /* 2 */
  width: 2000px;
  /* 3 */
  border-bottom: calc(0.2px + 0.05em) solid #e5e5e5;
}
.uk-heading-line > ::before {
  right: 100%;
  margin-right: calc(5px + 0.3em);
}
.uk-heading-line > ::after {
  left: 100%;
  margin-left: calc(5px + 0.3em);
}

/*
 * Default
 */
.uk-margin {
  margin-bottom: 20px;
}
* + .uk-margin {
  margin-top: 20px !important;
}
.uk-margin-top {
  margin-top: 20px !important;
}
.uk-margin-bottom {
  margin-bottom: 20px !important;
}
.uk-margin-left {
  margin-left: 20px !important;
}
.uk-margin-right {
  margin-right: 20px !important;
}
/* Small
 ========================================================================== */
.uk-margin-small {
  margin-bottom: 10px;
}
* + .uk-margin-small {
  margin-top: 10px !important;
}
.uk-margin-small-top {
  margin-top: 10px !important;
}
.uk-margin-small-bottom {
  margin-bottom: 10px !important;
}
.uk-margin-small-left {
  margin-left: 10px !important;
}
.uk-margin-small-right {
  margin-right: 10px !important;
}
/* Medium
 ========================================================================== */
.uk-margin-medium {
  margin-bottom: 40px;
}
* + .uk-margin-medium {
  margin-top: 40px !important;
}
.uk-margin-medium-top {
  margin-top: 40px !important;
}
.uk-margin-medium-bottom {
  margin-bottom: 40px !important;
}
.uk-margin-medium-left {
  margin-left: 40px !important;
}
.uk-margin-medium-right {
  margin-right: 40px !important;
}

/* Large
 ========================================================================== */
.uk-margin-large {
  margin-bottom: 40px;
}
* + .uk-margin-large {
  margin-top: 40px !important;
}
.uk-margin-large-top {
  margin-top: 40px !important;
}
.uk-margin-large-bottom {
  margin-bottom: 40px !important;
}
.uk-margin-large-left {
  margin-left: 40px !important;
}
.uk-margin-large-right {
  margin-right: 40px !important;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-margin-large {
    margin-bottom: 70px;
  }
  * + .uk-margin-large {
    margin-top: 70px !important;
  }
  .uk-margin-large-top {
    margin-top: 70px !important;
  }
  .uk-margin-large-bottom {
    margin-bottom: 70px !important;
  }
  .uk-margin-large-left {
    margin-left: 70px !important;
  }
  .uk-margin-large-right {
    margin-right: 70px !important;
  }
}

/* XLarge
 ========================================================================== */
.uk-margin-xlarge {
  margin-bottom: 70px;
}
* + .uk-margin-xlarge {
  margin-top: 70px !important;
}
.uk-margin-xlarge-top {
  margin-top: 70px !important;
}
.uk-margin-xlarge-bottom {
  margin-bottom: 70px !important;
}
.uk-margin-xlarge-left {
  margin-left: 70px !important;
}
.uk-margin-xlarge-right {
  margin-right: 70px !important;
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-margin-xlarge {
    margin-bottom: 140px;
  }
  * + .uk-margin-xlarge {
    margin-top: 140px !important;
  }
  .uk-margin-xlarge-top {
    margin-top: 140px !important;
  }
  .uk-margin-xlarge-bottom {
    margin-bottom: 140px !important;
  }
  .uk-margin-xlarge-left {
    margin-left: 140px !important;
  }
  .uk-margin-xlarge-right {
    margin-right: 140px !important;
  }
}

/* Auto
 ========================================================================== */
.uk-margin-auto {
  margin-left: auto !important;
  margin-right: auto !important;
}
.uk-margin-auto-top {
  margin-top: auto !important;
}
.uk-margin-auto-bottom {
  margin-bottom: auto !important;
}
.uk-margin-auto-left {
  margin-left: auto !important;
}
.uk-margin-auto-right {
  margin-right: auto !important;
}
.uk-margin-auto-vertical {
  margin-top: auto !important;
  margin-bottom: auto !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-margin-auto\@s {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .uk-margin-auto-left\@s {
    margin-left: auto !important;
  }
  .uk-margin-auto-right\@s {
    margin-right: auto !important;
  }
}

/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-margin-auto\@m {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .uk-margin-auto-left\@m {
    margin-left: auto !important;
  }
  .uk-margin-auto-right\@m {
    margin-right: auto !important;
  }
}

/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-margin-auto\@l {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .uk-margin-auto-left\@l {
    margin-left: auto !important;
  }
  .uk-margin-auto-right\@l {
    margin-right: auto !important;
  }
}

/* Large screen and bigger */
@media (min-width: 1600px) {
  .uk-margin-auto\@xl {
    margin-left: auto !important;
    margin-right: auto !important;
  }
  .uk-margin-auto-left\@xl {
    margin-left: auto !important;
  }
  .uk-margin-auto-right\@xl {
    margin-right: auto !important;
  }
}

/* Remove
 ========================================================================== */
.uk-margin-remove {
  margin: 0 !important;
}
.uk-margin-remove-top {
  margin-top: 0 !important;
}
.uk-margin-remove-bottom {
  margin-bottom: 0 !important;
}
.uk-margin-remove-left {
  margin-left: 0 !important;
}
.uk-margin-remove-right {
  margin-right: 0 !important;
}
.uk-margin-remove-vertical {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.uk-margin-remove-adjacent + *,
.uk-margin-remove-first-child > :first-child {
  margin-top: 0 !important;
}
.uk-margin-remove-last-child > :last-child {
  margin-bottom: 0 !important;
}

/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-margin-remove-left\@s {
    margin-left: 0 !important;
  }
  .uk-margin-remove-right\@s {
    margin-right: 0 !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-margin-remove-left\@m {
    margin-left: 0 !important;
  }
  .uk-margin-remove-right\@m {
    margin-right: 0 !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-margin-remove-left\@l {
    margin-left: 0 !important;
  }
  .uk-margin-remove-right\@l {
    margin-right: 0 !important;
  }
}

/* Large screen and bigger */
@media (min-width: 1600px) {
  .uk-margin-remove-left\@xl {
    margin-left: 0 !important;
  }
  .uk-margin-remove-right\@xl {
    margin-right: 0 !important;
  }
}
/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/


      .uk-padding { padding: 15px; }
      .uk-child-padding > :not([class*='uk-padding']){ padding: 15px; }
    
      .uk-padding-small { padding: 10px; }
      .uk-child-padding-small > :not([class*='uk-padding']){ padding: 10px; }
    
      .uk-padding-medium { padding: 20px; }
      .uk-child-padding-medium > :not([class*='uk-padding']){ padding: 20px; }
    
      .uk-padding-large { padding: 25px; }
      .uk-child-padding-large > :not([class*='uk-padding']){ padding: 25px; }
    
      .uk-padding-xlarge { padding: 50px; }
      .uk-child-padding-xlarge > :not([class*='uk-padding']){ padding: 50px; }
    
      .uk-padding-2xlarge { padding: 80px; }
      .uk-child-padding-2xlarge > :not([class*='uk-padding']){ padding: 80px; }
    

.uk-padding-remove { padding: 0 !important; }.uk-padding-remove-top { padding-top: 0 !important; }.uk-padding-remove-bottom { padding-bottom: 0 !important; }.uk-padding-remove-left { padding-left: 0 !important; }.uk-padding-remove-right { padding-right: 0 !important; }

.uk-padding-remove-vertical { padding-top: 0 !important; padding-bottom: 0 !important; }
.uk-padding-remove-horizontal { padding-left: 0 !important; padding-right: 0 !important; }

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 640px) {

  
        .uk-padding\@s { padding: 15px; }
        .uk-child-padding\@s > :not([class*='uk-padding']){ padding: 15px; }
      
        .uk-padding-small\@s { padding: 10px; }
        .uk-child-padding-small\@s > :not([class*='uk-padding']){ padding: 10px; }
      
        .uk-padding-medium\@s { padding: 20px; }
        .uk-child-padding-medium\@s > :not([class*='uk-padding']){ padding: 20px; }
      
        .uk-padding-large\@s { padding: 25px; }
        .uk-child-padding-large\@s > :not([class*='uk-padding']){ padding: 25px; }
      
        .uk-padding-xlarge\@s { padding: 50px; }
        .uk-child-padding-xlarge\@s > :not([class*='uk-padding']){ padding: 50px; }
      
        .uk-padding-2xlarge\@s { padding: 80px; }
        .uk-child-padding-2xlarge\@s > :not([class*='uk-padding']){ padding: 80px; }
      

  .uk-padding-remove\@s { padding: 0 !important; }.uk-padding-remove-top\@s { padding-top: 0 !important; }.uk-padding-remove-bottom\@s { padding-bottom: 0 !important; }.uk-padding-remove-left\@s { padding-left: 0 !important; }.uk-padding-remove-right\@s { padding-right: 0 !important; }

  .uk-padding-remove-vertical\@s { padding-top: 0 !important; padding-bottom: 0 !important; }
  .uk-padding-remove-horizontal\@s { padding-left: 0 !important; padding-right: 0 !important; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 960px) {

  
        .uk-padding\@m { padding: 15px; }
        .uk-child-padding\@m > :not([class*='uk-padding']){ padding: 15px; }
      
        .uk-padding-small\@m { padding: 10px; }
        .uk-child-padding-small\@m > :not([class*='uk-padding']){ padding: 10px; }
      
        .uk-padding-medium\@m { padding: 20px; }
        .uk-child-padding-medium\@m > :not([class*='uk-padding']){ padding: 20px; }
      
        .uk-padding-large\@m { padding: 25px; }
        .uk-child-padding-large\@m > :not([class*='uk-padding']){ padding: 25px; }
      
        .uk-padding-xlarge\@m { padding: 50px; }
        .uk-child-padding-xlarge\@m > :not([class*='uk-padding']){ padding: 50px; }
      
        .uk-padding-2xlarge\@m { padding: 80px; }
        .uk-child-padding-2xlarge\@m > :not([class*='uk-padding']){ padding: 80px; }
      

  .uk-padding-remove\@m { padding: 0 !important; }.uk-padding-remove-top\@m { padding-top: 0 !important; }.uk-padding-remove-bottom\@m { padding-bottom: 0 !important; }.uk-padding-remove-left\@m { padding-left: 0 !important; }.uk-padding-remove-right\@m { padding-right: 0 !important; }

  .uk-padding-remove-vertical\@m { padding-top: 0 !important; padding-bottom: 0 !important; }
  .uk-padding-remove-horizontal\@m { padding-left: 0 !important; padding-right: 0 !important; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1200px) {

  
        .uk-padding\@l { padding: 15px; }
        .uk-child-padding\@l > :not([class*='uk-padding']){ padding: 15px; }
      
        .uk-padding-small\@l { padding: 10px; }
        .uk-child-padding-small\@l > :not([class*='uk-padding']){ padding: 10px; }
      
        .uk-padding-medium\@l { padding: 20px; }
        .uk-child-padding-medium\@l > :not([class*='uk-padding']){ padding: 20px; }
      
        .uk-padding-large\@l { padding: 25px; }
        .uk-child-padding-large\@l > :not([class*='uk-padding']){ padding: 25px; }
      
        .uk-padding-xlarge\@l { padding: 50px; }
        .uk-child-padding-xlarge\@l > :not([class*='uk-padding']){ padding: 50px; }
      
        .uk-padding-2xlarge\@l { padding: 80px; }
        .uk-child-padding-2xlarge\@l > :not([class*='uk-padding']){ padding: 80px; }
      

  .uk-padding-remove\@l { padding: 0 !important; }.uk-padding-remove-top\@l { padding-top: 0 !important; }.uk-padding-remove-bottom\@l { padding-bottom: 0 !important; }.uk-padding-remove-left\@l { padding-left: 0 !important; }.uk-padding-remove-right\@l { padding-right: 0 !important; }

  .uk-padding-remove-vertical\@l { padding-top: 0 !important; padding-bottom: 0 !important; }
  .uk-padding-remove-horizontal\@l { padding-left: 0 !important; padding-right: 0 !important; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/

@media (min-width: 1600px) {

  
        .uk-padding\@xl { padding: 15px; }
        .uk-child-padding\@xl > :not([class*='uk-padding']){ padding: 15px; }
      
        .uk-padding-small\@xl { padding: 10px; }
        .uk-child-padding-small\@xl > :not([class*='uk-padding']){ padding: 10px; }
      
        .uk-padding-medium\@xl { padding: 20px; }
        .uk-child-padding-medium\@xl > :not([class*='uk-padding']){ padding: 20px; }
      
        .uk-padding-large\@xl { padding: 25px; }
        .uk-child-padding-large\@xl > :not([class*='uk-padding']){ padding: 25px; }
      
        .uk-padding-xlarge\@xl { padding: 50px; }
        .uk-child-padding-xlarge\@xl > :not([class*='uk-padding']){ padding: 50px; }
      
        .uk-padding-2xlarge\@xl { padding: 80px; }
        .uk-child-padding-2xlarge\@xl > :not([class*='uk-padding']){ padding: 80px; }
      

  .uk-padding-remove\@xl { padding: 0 !important; }.uk-padding-remove-top\@xl { padding-top: 0 !important; }.uk-padding-remove-bottom\@xl { padding-bottom: 0 !important; }.uk-padding-remove-left\@xl { padding-left: 0 !important; }.uk-padding-remove-right\@xl { padding-right: 0 !important; }

  .uk-padding-remove-vertical\@xl { padding-top: 0 !important; padding-bottom: 0 !important; }
  .uk-padding-remove-horizontal\@xl { padding-left: 0 !important; padding-right: 0 !important; }

}

/*───────────────────────────────────────────────────────────────────────────────────────────────────────────────────*/
:root {
  --uk-position-margin-offset: 0px;
}
/* Directions
 ========================================================================== */
/*
 * 1. Prevent content overflow.
 */
[class*='uk-position-top'],
[class*='uk-position-left'],
[class*='uk-position-right'],
[class*='uk-position-bottom'],
[class*='uk-position-center'] {
  position: absolute !important;
  /* 1 */
  max-width: calc(100% - (var(--uk-position-margin-offset) * 2));
  box-sizing: border-box;
}
/*
 * Edges
 * Don't use `width: 100%` because it's wrong if the parent has padding.
 */
.uk-position-top {
  top: 0;
  left: 0;
  right: 0;
}
.uk-position-bottom {
  left: 0;
  right: 0;
  bottom: 0;
}
.uk-position-left {
  top: 0;
  left: 0;
  bottom: 0;
}
.uk-position-right {
  top: 0;
  right: 0;
  bottom: 0;
}
/*
 * Corners
 */
.uk-position-top-left {
  top: 0;
  left: 0;
}
.uk-position-top-right {
  top: 0;
  right: 0;
}
.uk-position-bottom-left {
  left: 0;
  bottom: 0;
}
.uk-position-bottom-right {
  right: 0;
  bottom: 0;
}
/*
 * Center
 * 1. Fix text wrapping if content is larger than 50% of the container.
 *    Using `max-content` requires `max-width` of 100% which is set generally.
 */
.uk-position-center {
  top: calc(50% - var(--uk-position-margin-offset));
  left: calc(50% - var(--uk-position-margin-offset));
  --uk-position-translate-x: -50%;
  --uk-position-translate-y: -50%;
  transform: translate(var(--uk-position-translate-x), var(--uk-position-translate-y));
  /* 1 */
  width: max-content;
}
/* Vertical */
[class*='uk-position-center-left'],
[class*='uk-position-center-right'] {
  top: calc(50% - var(--uk-position-margin-offset));
  --uk-position-translate-y: -50%;
  transform: translate(0, var(--uk-position-translate-y));
}
.uk-position-center-left {
  left: 0;
}
.uk-position-center-right {
  right: 0;
}
.uk-position-center-left-out {
  right: 100%;
  width: max-content;
}
.uk-position-center-right-out {
  left: 100%;
  width: max-content;
}
/* Horizontal */
.uk-position-top-center,
.uk-position-bottom-center {
  left: calc(50% - var(--uk-position-margin-offset));
  --uk-position-translate-x: -50%;
  transform: translate(var(--uk-position-translate-x), 0);
  /* 1 */
  width: max-content;
}
.uk-position-top-center {
  top: 0;
}
.uk-position-bottom-center {
  bottom: 0;
}
/*
 * Cover
 */
.uk-position-cover {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}
/* Margin
 ========================================================================== */
.uk-position-small {
  margin: 15px;
  --uk-position-margin-offset: 15px;
}
.uk-position-medium {
  margin: 30px;
  --uk-position-margin-offset: 30px;
}
.uk-position-large {
  margin: 30px;
  --uk-position-margin-offset: 30px;
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-position-large {
    margin: 50px;
    --uk-position-margin-offset: 50px;
  }
}
/* Schemes
 ========================================================================== */
.uk-position-relative {
  position: relative  !important;
}
.uk-position-absolute {
  position: absolute  !important;
}
.uk-position-fixed {
  position: fixed  !important;
}
.uk-position-sticky {
  position: sticky  !important;
}
/* Layer
 ========================================================================== */
.uk-position-z-index {
  z-index: 1;
}
.uk-position-z-index-zero {
  z-index: 0;
}
.uk-position-z-index-negative {
  z-index: -1;
}

/* Transitions
 ========================================================================== */
/*
 * The toggle is triggered on touch devices by two methods:
 * 1. Using `:focus` and tabindex
 * 2. Using `:hover` and a `touchstart` event listener registered on the document
 *    (Doesn't work on Surface touch devices)
 */
:where(.uk-transition-fade),
:where([class*='uk-transition-scale']),
:where([class*='uk-transition-slide']) {
  --uk-position-translate-x: 0;
  --uk-position-translate-y: 0;
}
.uk-transition-fade,
[class*='uk-transition-scale'],
[class*='uk-transition-slide'] {
  --uk-translate-x: 0;
  --uk-translate-y: 0;
  --uk-scale-x: 1;
  --uk-scale-y: 1;
  transform: translate(var(--uk-position-translate-x), var(--uk-position-translate-y)) translate(var(--uk-translate-x), var(--uk-translate-y)) scale(var(--uk-scale-x), var(--uk-scale-y));
  transition: 0.3s ease-out;
  transition-property: opacity, transform, filter;
  opacity: 0;
}
/*
 * Fade
 */
.uk-transition-toggle:hover .uk-transition-fade,
.uk-transition-toggle:focus .uk-transition-fade,
.uk-transition-toggle .uk-transition-fade:focus-within,
.uk-transition-active.uk-active .uk-transition-fade {
  opacity: 1;
}
/*
 * Scale
 * 1. Make image rendering the same during the transition as before and after. Prefixed because of Safari.
 */
/* 1 */
[class*='uk-transition-scale'] {
  -webkit-backface-visibility: hidden;
}
.uk-transition-scale-up {
  --uk-scale-x: 1;
  --uk-scale-y: 1;
}
.uk-transition-scale-down {
  --uk-scale-x: 1.03;
  --uk-scale-y: 1.03;
}
/* Show */
.uk-transition-toggle:hover .uk-transition-scale-up,
.uk-transition-toggle:focus .uk-transition-scale-up,
.uk-transition-toggle .uk-transition-scale-up:focus-within,
.uk-transition-active.uk-active .uk-transition-scale-up {
  --uk-scale-x: 1.03;
  --uk-scale-y: 1.03;
  opacity: 1;
}
.uk-transition-toggle:hover .uk-transition-scale-down,
.uk-transition-toggle:focus .uk-transition-scale-down,
.uk-transition-toggle .uk-transition-scale-down:focus-within,
.uk-transition-active.uk-active .uk-transition-scale-down {
  --uk-scale-x: 1;
  --uk-scale-y: 1;
  opacity: 1;
}
/*
 * Slide
 */
.uk-transition-slide-top {
  --uk-translate-y: -100%;
}
.uk-transition-slide-bottom {
  --uk-translate-y: 100%;
}
.uk-transition-slide-left {
  --uk-translate-x: -100%;
}
.uk-transition-slide-right {
  --uk-translate-x: 100%;
}
.uk-transition-slide-top-small {
  --uk-translate-y: calc(-1 * 10px);
}
.uk-transition-slide-bottom-small {
  --uk-translate-y: 10px;
}
.uk-transition-slide-left-small {
  --uk-translate-x: calc(-1 * 10px);
}
.uk-transition-slide-right-small {
  --uk-translate-x: 10px;
}
.uk-transition-slide-top-medium {
  --uk-translate-y: calc(-1 * 50px);
}
.uk-transition-slide-bottom-medium {
  --uk-translate-y: 50px;
}
.uk-transition-slide-left-medium {
  --uk-translate-x: calc(-1 * 50px);
}
.uk-transition-slide-right-medium {
  --uk-translate-x: 50px;
}
/* Show */
.uk-transition-toggle:hover [class*='uk-transition-slide'],
.uk-transition-toggle:focus [class*='uk-transition-slide'],
.uk-transition-toggle [class*='uk-transition-slide']:focus-within,
.uk-transition-active.uk-active [class*='uk-transition-slide'] {
  --uk-translate-x: 0;
  --uk-translate-y: 0;
  opacity: 1;
}
/* Opacity modifier
 ========================================================================== */
.uk-transition-opaque {
  opacity: 1;
}
/* Duration modifiers
 ========================================================================== */
.uk-transition-slow {
  transition-duration: 0.7s;
}

/*
 * Hidden
 * `hidden` attribute also set here to make it stronger
 */
[hidden],.uk-hidden {
  display: none !important;
}
/* Phone landscape and bigger */
@media (min-width: 640px) {
  .uk-hidden\@s {
    display: none !important;
  }
}
/* Tablet landscape and bigger */
@media (min-width: 960px) {
  .uk-hidden\@m {
    display: none !important;
  }
}
/* Desktop and bigger */
@media (min-width: 1200px) {
  .uk-hidden\@l {
    display: none !important;
  }
}
/* Large screen and bigger */
@media (min-width: 1600px) {
  .uk-hidden\@xl {
    display: none !important;
  }
}
/*
 * Visible
 */
/* Phone portrait and smaller */
@media (max-width: 639px) {
  .uk-visible\@s {
    display: none !important;
  }
}
/* Phone landscape and smaller */
@media (max-width: 959px) {
  .uk-visible\@m {
    display: none !important;
  }
}
/* Tablet landscape and smaller */
@media (max-width: 1199px) {
  .uk-visible\@l {
    display: none !important;
  }
}
/* Desktop and smaller */
@media (max-width: 1599px) {
  .uk-visible\@xl {
    display: none !important;
  }
}
/* Visibility
 ========================================================================== */
.uk-invisible {
  visibility: hidden !important;
}
/* Based on the State of the Parent Element
 ========================================================================== */
/*
 * Can't use `display: none` nor `visibility: hidden` because both are not focusable.
 * The target stays visible if any element within receives focus through keyboard.
 */
/*
 * Discard space when hidden.
 */
.uk-visible-toggle:not(:hover):not(:focus) .uk-hidden-hover:not(:focus-within) {
  width: 0 !important;
  height: 0 !important;
  margin: 0 !important;
  padding: 0 !important;
  overflow: hidden !important;
  position: absolute !important;
}
/*
 * Keep space when hidden.
 */
.uk-visible-toggle:not(:hover):not(:focus) .uk-invisible-hover:not(:focus-within) {
  opacity: 0 !important;
}
/* Based on Hover Capability of the Pointing Device
 ========================================================================== */
/*
 * Hover
 */
/* Hide if primary pointing device doesn't support hover, e.g. touch screens. */
@media (hover: none) {
  .uk-hidden-touch {
    display: none !important;
  }
}
/* Hide if primary pointing device supports hover, e.g. mice. */
@media (hover) {
  .uk-hidden-notouch {
    display: none !important;
  }
}

/*
 * Implemented class depends on the general theme color
 * `uk-light` is for light colors on dark backgrounds
 * `uk-dark` is or dark colors on light backgrounds
 */
.uk-light,
.uk-section-primary:not(.uk-preserve-color),
.uk-section-secondary:not(.uk-preserve-color),
.uk-tile-primary:not(.uk-preserve-color),
.uk-tile-secondary:not(.uk-preserve-color),
.uk-card-primary.uk-card-body,
.uk-card-primary > :not([class*='uk-card-media']),
.uk-card-secondary.uk-card-body,
.uk-card-secondary > :not([class*='uk-card-media']),
.uk-overlay-primary,
.uk-offcanvas-bar {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light a,
.uk-light .uk-link,
.uk-section-primary:not(.uk-preserve-color) a,
.uk-section-primary:not(.uk-preserve-color) .uk-link,
.uk-section-secondary:not(.uk-preserve-color) a,
.uk-section-secondary:not(.uk-preserve-color) .uk-link,
.uk-tile-primary:not(.uk-preserve-color) a,
.uk-tile-primary:not(.uk-preserve-color) .uk-link,
.uk-tile-secondary:not(.uk-preserve-color) a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link,
.uk-card-primary.uk-card-body a,
.uk-card-primary.uk-card-body .uk-link,
.uk-card-primary > :not([class*='uk-card-media']) a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link,
.uk-card-secondary.uk-card-body a,
.uk-card-secondary.uk-card-body .uk-link,
.uk-card-secondary > :not([class*='uk-card-media']) a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link,
.uk-overlay-primary a,
.uk-overlay-primary .uk-link,
.uk-offcanvas-bar a,
.uk-offcanvas-bar .uk-link {
  color: #fff;
}
.uk-light a:hover,
.uk-light .uk-link:hover,
.uk-light .uk-link-toggle:hover .uk-link,
.uk-section-primary:not(.uk-preserve-color) a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link,
.uk-section-secondary:not(.uk-preserve-color) a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link,
.uk-tile-primary:not(.uk-preserve-color) a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link,
.uk-tile-secondary:not(.uk-preserve-color) a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link,
.uk-card-primary.uk-card-body a:hover,
.uk-card-primary.uk-card-body .uk-link:hover,
.uk-card-primary.uk-card-body .uk-link-toggle:hover .uk-link,
.uk-card-primary > :not([class*='uk-card-media']) a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link,
.uk-card-secondary.uk-card-body a:hover,
.uk-card-secondary.uk-card-body .uk-link:hover,
.uk-card-secondary.uk-card-body .uk-link-toggle:hover .uk-link,
.uk-card-secondary > :not([class*='uk-card-media']) a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link,
.uk-overlay-primary a:hover,
.uk-overlay-primary .uk-link:hover,
.uk-overlay-primary .uk-link-toggle:hover .uk-link,
.uk-offcanvas-bar a:hover,
.uk-offcanvas-bar .uk-link:hover,
.uk-offcanvas-bar .uk-link-toggle:hover .uk-link {
  color: #fff;
}
.uk-light :not(pre) > code,
.uk-light :not(pre) > kbd,
.uk-light :not(pre) > samp,
.uk-section-primary:not(.uk-preserve-color) :not(pre) > code,
.uk-section-primary:not(.uk-preserve-color) :not(pre) > kbd,
.uk-section-primary:not(.uk-preserve-color) :not(pre) > samp,
.uk-section-secondary:not(.uk-preserve-color) :not(pre) > code,
.uk-section-secondary:not(.uk-preserve-color) :not(pre) > kbd,
.uk-section-secondary:not(.uk-preserve-color) :not(pre) > samp,
.uk-tile-primary:not(.uk-preserve-color) :not(pre) > code,
.uk-tile-primary:not(.uk-preserve-color) :not(pre) > kbd,
.uk-tile-primary:not(.uk-preserve-color) :not(pre) > samp,
.uk-tile-secondary:not(.uk-preserve-color) :not(pre) > code,
.uk-tile-secondary:not(.uk-preserve-color) :not(pre) > kbd,
.uk-tile-secondary:not(.uk-preserve-color) :not(pre) > samp,
.uk-card-primary.uk-card-body :not(pre) > code,
.uk-card-primary.uk-card-body :not(pre) > kbd,
.uk-card-primary.uk-card-body :not(pre) > samp,
.uk-card-primary > :not([class*='uk-card-media']) :not(pre) > code,
.uk-card-primary > :not([class*='uk-card-media']) :not(pre) > kbd,
.uk-card-primary > :not([class*='uk-card-media']) :not(pre) > samp,
.uk-card-secondary.uk-card-body :not(pre) > code,
.uk-card-secondary.uk-card-body :not(pre) > kbd,
.uk-card-secondary.uk-card-body :not(pre) > samp,
.uk-card-secondary > :not([class*='uk-card-media']) :not(pre) > code,
.uk-card-secondary > :not([class*='uk-card-media']) :not(pre) > kbd,
.uk-card-secondary > :not([class*='uk-card-media']) :not(pre) > samp,
.uk-overlay-primary :not(pre) > code,
.uk-overlay-primary :not(pre) > kbd,
.uk-overlay-primary :not(pre) > samp,
.uk-offcanvas-bar :not(pre) > code,
.uk-offcanvas-bar :not(pre) > kbd,
.uk-offcanvas-bar :not(pre) > samp {
  color: rgba(255, 255, 255, 0.7);
  background: rgba(255, 255, 255, 0.1);
}
.uk-light em,
.uk-section-primary:not(.uk-preserve-color) em,
.uk-section-secondary:not(.uk-preserve-color) em,
.uk-tile-primary:not(.uk-preserve-color) em,
.uk-tile-secondary:not(.uk-preserve-color) em,
.uk-card-primary.uk-card-body em,
.uk-card-primary > :not([class*='uk-card-media']) em,
.uk-card-secondary.uk-card-body em,
.uk-card-secondary > :not([class*='uk-card-media']) em,
.uk-overlay-primary em,
.uk-offcanvas-bar em {
  color: #fff;
}
.uk-light h1,
.uk-light .uk-h1,
.uk-light h2,
.uk-light .uk-h2,
.uk-light h3,
.uk-light .uk-h3,
.uk-light h4,
.uk-light .uk-h4,
.uk-light h5,
.uk-light .uk-h5,
.uk-light h6,
.uk-light .uk-h6,
.uk-light .uk-heading-small,
.uk-light .uk-heading-medium,
.uk-light .uk-heading-large,
.uk-light .uk-heading-xlarge,
.uk-light .uk-heading-2xlarge,
.uk-section-primary:not(.uk-preserve-color) h1,
.uk-section-primary:not(.uk-preserve-color) .uk-h1,
.uk-section-primary:not(.uk-preserve-color) h2,
.uk-section-primary:not(.uk-preserve-color) .uk-h2,
.uk-section-primary:not(.uk-preserve-color) h3,
.uk-section-primary:not(.uk-preserve-color) .uk-h3,
.uk-section-primary:not(.uk-preserve-color) h4,
.uk-section-primary:not(.uk-preserve-color) .uk-h4,
.uk-section-primary:not(.uk-preserve-color) h5,
.uk-section-primary:not(.uk-preserve-color) .uk-h5,
.uk-section-primary:not(.uk-preserve-color) h6,
.uk-section-primary:not(.uk-preserve-color) .uk-h6,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-small,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-medium,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-large,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-xlarge,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-2xlarge,
.uk-section-secondary:not(.uk-preserve-color) h1,
.uk-section-secondary:not(.uk-preserve-color) .uk-h1,
.uk-section-secondary:not(.uk-preserve-color) h2,
.uk-section-secondary:not(.uk-preserve-color) .uk-h2,
.uk-section-secondary:not(.uk-preserve-color) h3,
.uk-section-secondary:not(.uk-preserve-color) .uk-h3,
.uk-section-secondary:not(.uk-preserve-color) h4,
.uk-section-secondary:not(.uk-preserve-color) .uk-h4,
.uk-section-secondary:not(.uk-preserve-color) h5,
.uk-section-secondary:not(.uk-preserve-color) .uk-h5,
.uk-section-secondary:not(.uk-preserve-color) h6,
.uk-section-secondary:not(.uk-preserve-color) .uk-h6,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-small,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-medium,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-large,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-xlarge,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-2xlarge,
.uk-tile-primary:not(.uk-preserve-color) h1,
.uk-tile-primary:not(.uk-preserve-color) .uk-h1,
.uk-tile-primary:not(.uk-preserve-color) h2,
.uk-tile-primary:not(.uk-preserve-color) .uk-h2,
.uk-tile-primary:not(.uk-preserve-color) h3,
.uk-tile-primary:not(.uk-preserve-color) .uk-h3,
.uk-tile-primary:not(.uk-preserve-color) h4,
.uk-tile-primary:not(.uk-preserve-color) .uk-h4,
.uk-tile-primary:not(.uk-preserve-color) h5,
.uk-tile-primary:not(.uk-preserve-color) .uk-h5,
.uk-tile-primary:not(.uk-preserve-color) h6,
.uk-tile-primary:not(.uk-preserve-color) .uk-h6,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-small,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-medium,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-large,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-xlarge,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-2xlarge,
.uk-tile-secondary:not(.uk-preserve-color) h1,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h1,
.uk-tile-secondary:not(.uk-preserve-color) h2,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h2,
.uk-tile-secondary:not(.uk-preserve-color) h3,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h3,
.uk-tile-secondary:not(.uk-preserve-color) h4,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h4,
.uk-tile-secondary:not(.uk-preserve-color) h5,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h5,
.uk-tile-secondary:not(.uk-preserve-color) h6,
.uk-tile-secondary:not(.uk-preserve-color) .uk-h6,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-small,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-medium,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-large,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-xlarge,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-2xlarge,
.uk-card-primary.uk-card-body h1,
.uk-card-primary.uk-card-body .uk-h1,
.uk-card-primary.uk-card-body h2,
.uk-card-primary.uk-card-body .uk-h2,
.uk-card-primary.uk-card-body h3,
.uk-card-primary.uk-card-body .uk-h3,
.uk-card-primary.uk-card-body h4,
.uk-card-primary.uk-card-body .uk-h4,
.uk-card-primary.uk-card-body h5,
.uk-card-primary.uk-card-body .uk-h5,
.uk-card-primary.uk-card-body h6,
.uk-card-primary.uk-card-body .uk-h6,
.uk-card-primary.uk-card-body .uk-heading-small,
.uk-card-primary.uk-card-body .uk-heading-medium,
.uk-card-primary.uk-card-body .uk-heading-large,
.uk-card-primary.uk-card-body .uk-heading-xlarge,
.uk-card-primary.uk-card-body .uk-heading-2xlarge,
.uk-card-primary > :not([class*='uk-card-media']) h1,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h1,
.uk-card-primary > :not([class*='uk-card-media']) h2,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h2,
.uk-card-primary > :not([class*='uk-card-media']) h3,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h3,
.uk-card-primary > :not([class*='uk-card-media']) h4,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h4,
.uk-card-primary > :not([class*='uk-card-media']) h5,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h5,
.uk-card-primary > :not([class*='uk-card-media']) h6,
.uk-card-primary > :not([class*='uk-card-media']) .uk-h6,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-small,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-medium,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-large,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-xlarge,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-2xlarge,
.uk-card-secondary.uk-card-body h1,
.uk-card-secondary.uk-card-body .uk-h1,
.uk-card-secondary.uk-card-body h2,
.uk-card-secondary.uk-card-body .uk-h2,
.uk-card-secondary.uk-card-body h3,
.uk-card-secondary.uk-card-body .uk-h3,
.uk-card-secondary.uk-card-body h4,
.uk-card-secondary.uk-card-body .uk-h4,
.uk-card-secondary.uk-card-body h5,
.uk-card-secondary.uk-card-body .uk-h5,
.uk-card-secondary.uk-card-body h6,
.uk-card-secondary.uk-card-body .uk-h6,
.uk-card-secondary.uk-card-body .uk-heading-small,
.uk-card-secondary.uk-card-body .uk-heading-medium,
.uk-card-secondary.uk-card-body .uk-heading-large,
.uk-card-secondary.uk-card-body .uk-heading-xlarge,
.uk-card-secondary.uk-card-body .uk-heading-2xlarge,
.uk-card-secondary > :not([class*='uk-card-media']) h1,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h1,
.uk-card-secondary > :not([class*='uk-card-media']) h2,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h2,
.uk-card-secondary > :not([class*='uk-card-media']) h3,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h3,
.uk-card-secondary > :not([class*='uk-card-media']) h4,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h4,
.uk-card-secondary > :not([class*='uk-card-media']) h5,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h5,
.uk-card-secondary > :not([class*='uk-card-media']) h6,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-h6,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-small,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-medium,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-large,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-xlarge,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-2xlarge,
.uk-overlay-primary h1,
.uk-overlay-primary .uk-h1,
.uk-overlay-primary h2,
.uk-overlay-primary .uk-h2,
.uk-overlay-primary h3,
.uk-overlay-primary .uk-h3,
.uk-overlay-primary h4,
.uk-overlay-primary .uk-h4,
.uk-overlay-primary h5,
.uk-overlay-primary .uk-h5,
.uk-overlay-primary h6,
.uk-overlay-primary .uk-h6,
.uk-overlay-primary .uk-heading-small,
.uk-overlay-primary .uk-heading-medium,
.uk-overlay-primary .uk-heading-large,
.uk-overlay-primary .uk-heading-xlarge,
.uk-overlay-primary .uk-heading-2xlarge,
.uk-offcanvas-bar h1,
.uk-offcanvas-bar .uk-h1,
.uk-offcanvas-bar h2,
.uk-offcanvas-bar .uk-h2,
.uk-offcanvas-bar h3,
.uk-offcanvas-bar .uk-h3,
.uk-offcanvas-bar h4,
.uk-offcanvas-bar .uk-h4,
.uk-offcanvas-bar h5,
.uk-offcanvas-bar .uk-h5,
.uk-offcanvas-bar h6,
.uk-offcanvas-bar .uk-h6,
.uk-offcanvas-bar .uk-heading-small,
.uk-offcanvas-bar .uk-heading-medium,
.uk-offcanvas-bar .uk-heading-large,
.uk-offcanvas-bar .uk-heading-xlarge,
.uk-offcanvas-bar .uk-heading-2xlarge {
  color: #fff;
}
.uk-light blockquote,
.uk-section-primary:not(.uk-preserve-color) blockquote,
.uk-section-secondary:not(.uk-preserve-color) blockquote,
.uk-tile-primary:not(.uk-preserve-color) blockquote,
.uk-tile-secondary:not(.uk-preserve-color) blockquote,
.uk-card-primary.uk-card-body blockquote,
.uk-card-primary > :not([class*='uk-card-media']) blockquote,
.uk-card-secondary.uk-card-body blockquote,
.uk-card-secondary > :not([class*='uk-card-media']) blockquote,
.uk-overlay-primary blockquote,
.uk-offcanvas-bar blockquote {
  color: #fff;
}
.uk-light blockquote footer,
.uk-section-primary:not(.uk-preserve-color) blockquote footer,
.uk-section-secondary:not(.uk-preserve-color) blockquote footer,
.uk-tile-primary:not(.uk-preserve-color) blockquote footer,
.uk-tile-secondary:not(.uk-preserve-color) blockquote footer,
.uk-card-primary.uk-card-body blockquote footer,
.uk-card-primary > :not([class*='uk-card-media']) blockquote footer,
.uk-card-secondary.uk-card-body blockquote footer,
.uk-card-secondary > :not([class*='uk-card-media']) blockquote footer,
.uk-overlay-primary blockquote footer,
.uk-offcanvas-bar blockquote footer {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light hr,
.uk-light .uk-hr,
.uk-section-primary:not(.uk-preserve-color) hr,
.uk-section-primary:not(.uk-preserve-color) .uk-hr,
.uk-section-secondary:not(.uk-preserve-color) hr,
.uk-section-secondary:not(.uk-preserve-color) .uk-hr,
.uk-tile-primary:not(.uk-preserve-color) hr,
.uk-tile-primary:not(.uk-preserve-color) .uk-hr,
.uk-tile-secondary:not(.uk-preserve-color) hr,
.uk-tile-secondary:not(.uk-preserve-color) .uk-hr,
.uk-card-primary.uk-card-body hr,
.uk-card-primary.uk-card-body .uk-hr,
.uk-card-primary > :not([class*='uk-card-media']) hr,
.uk-card-primary > :not([class*='uk-card-media']) .uk-hr,
.uk-card-secondary.uk-card-body hr,
.uk-card-secondary.uk-card-body .uk-hr,
.uk-card-secondary > :not([class*='uk-card-media']) hr,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-hr,
.uk-overlay-primary hr,
.uk-overlay-primary .uk-hr,
.uk-offcanvas-bar hr,
.uk-offcanvas-bar .uk-hr {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light :focus,
.uk-section-primary:not(.uk-preserve-color) :focus,
.uk-section-secondary:not(.uk-preserve-color) :focus,
.uk-tile-primary:not(.uk-preserve-color) :focus,
.uk-tile-secondary:not(.uk-preserve-color) :focus,
.uk-card-primary.uk-card-body :focus,
.uk-card-primary > :not([class*='uk-card-media']) :focus,
.uk-card-secondary.uk-card-body :focus,
.uk-card-secondary > :not([class*='uk-card-media']) :focus,
.uk-overlay-primary :focus,
.uk-offcanvas-bar :focus {
  outline-color: #fff;
}
.uk-light :focus-visible,
.uk-section-primary:not(.uk-preserve-color) :focus-visible,
.uk-section-secondary:not(.uk-preserve-color) :focus-visible,
.uk-tile-primary:not(.uk-preserve-color) :focus-visible,
.uk-tile-secondary:not(.uk-preserve-color) :focus-visible,
.uk-card-primary.uk-card-body :focus-visible,
.uk-card-primary > :not([class*='uk-card-media']) :focus-visible,
.uk-card-secondary.uk-card-body :focus-visible,
.uk-card-secondary > :not([class*='uk-card-media']) :focus-visible,
.uk-overlay-primary :focus-visible,
.uk-offcanvas-bar :focus-visible {
  outline-color: #fff;
}
.uk-light a.uk-link-muted,
.uk-light .uk-link-muted a,
.uk-section-primary:not(.uk-preserve-color) a.uk-link-muted,
.uk-section-primary:not(.uk-preserve-color) .uk-link-muted a,
.uk-section-secondary:not(.uk-preserve-color) a.uk-link-muted,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-muted a,
.uk-tile-primary:not(.uk-preserve-color) a.uk-link-muted,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-muted a,
.uk-tile-secondary:not(.uk-preserve-color) a.uk-link-muted,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-muted a,
.uk-card-primary.uk-card-body a.uk-link-muted,
.uk-card-primary.uk-card-body .uk-link-muted a,
.uk-card-primary > :not([class*='uk-card-media']) a.uk-link-muted,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-muted a,
.uk-card-secondary.uk-card-body a.uk-link-muted,
.uk-card-secondary.uk-card-body .uk-link-muted a,
.uk-card-secondary > :not([class*='uk-card-media']) a.uk-link-muted,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-muted a,
.uk-overlay-primary a.uk-link-muted,
.uk-overlay-primary .uk-link-muted a,
.uk-offcanvas-bar a.uk-link-muted,
.uk-offcanvas-bar .uk-link-muted a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light a.uk-link-muted:hover,
.uk-light .uk-link-muted a:hover,
.uk-light .uk-link-toggle:hover .uk-link-muted,
.uk-section-primary:not(.uk-preserve-color) a.uk-link-muted:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-muted a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-muted,
.uk-section-secondary:not(.uk-preserve-color) a.uk-link-muted:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-muted a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-muted,
.uk-tile-primary:not(.uk-preserve-color) a.uk-link-muted:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-muted a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-muted,
.uk-tile-secondary:not(.uk-preserve-color) a.uk-link-muted:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-muted a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-muted,
.uk-card-primary.uk-card-body a.uk-link-muted:hover,
.uk-card-primary.uk-card-body .uk-link-muted a:hover,
.uk-card-primary.uk-card-body .uk-link-toggle:hover .uk-link-muted,
.uk-card-primary > :not([class*='uk-card-media']) a.uk-link-muted:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-muted a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-muted,
.uk-card-secondary.uk-card-body a.uk-link-muted:hover,
.uk-card-secondary.uk-card-body .uk-link-muted a:hover,
.uk-card-secondary.uk-card-body .uk-link-toggle:hover .uk-link-muted,
.uk-card-secondary > :not([class*='uk-card-media']) a.uk-link-muted:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-muted a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-muted,
.uk-overlay-primary a.uk-link-muted:hover,
.uk-overlay-primary .uk-link-muted a:hover,
.uk-overlay-primary .uk-link-toggle:hover .uk-link-muted,
.uk-offcanvas-bar a.uk-link-muted:hover,
.uk-offcanvas-bar .uk-link-muted a:hover,
.uk-offcanvas-bar .uk-link-toggle:hover .uk-link-muted {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light a.uk-link-text:hover,
.uk-light .uk-link-text a:hover,
.uk-light .uk-link-toggle:hover .uk-link-text,
.uk-section-primary:not(.uk-preserve-color) a.uk-link-text:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-text a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-text,
.uk-section-secondary:not(.uk-preserve-color) a.uk-link-text:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-text a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-text,
.uk-tile-primary:not(.uk-preserve-color) a.uk-link-text:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-text a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-text,
.uk-tile-secondary:not(.uk-preserve-color) a.uk-link-text:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-text a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-text,
.uk-card-primary.uk-card-body a.uk-link-text:hover,
.uk-card-primary.uk-card-body .uk-link-text a:hover,
.uk-card-primary.uk-card-body .uk-link-toggle:hover .uk-link-text,
.uk-card-primary > :not([class*='uk-card-media']) a.uk-link-text:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-text a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-text,
.uk-card-secondary.uk-card-body a.uk-link-text:hover,
.uk-card-secondary.uk-card-body .uk-link-text a:hover,
.uk-card-secondary.uk-card-body .uk-link-toggle:hover .uk-link-text,
.uk-card-secondary > :not([class*='uk-card-media']) a.uk-link-text:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-text a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-text,
.uk-overlay-primary a.uk-link-text:hover,
.uk-overlay-primary .uk-link-text a:hover,
.uk-overlay-primary .uk-link-toggle:hover .uk-link-text,
.uk-offcanvas-bar a.uk-link-text:hover,
.uk-offcanvas-bar .uk-link-text a:hover,
.uk-offcanvas-bar .uk-link-toggle:hover .uk-link-text {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light a.uk-link-heading:hover,
.uk-light .uk-link-heading a:hover,
.uk-light .uk-link-toggle:hover .uk-link-heading,
.uk-section-primary:not(.uk-preserve-color) a.uk-link-heading:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-heading a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-heading,
.uk-section-secondary:not(.uk-preserve-color) a.uk-link-heading:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-heading a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-heading,
.uk-tile-primary:not(.uk-preserve-color) a.uk-link-heading:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-heading a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-heading,
.uk-tile-secondary:not(.uk-preserve-color) a.uk-link-heading:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-heading a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link-toggle:hover .uk-link-heading,
.uk-card-primary.uk-card-body a.uk-link-heading:hover,
.uk-card-primary.uk-card-body .uk-link-heading a:hover,
.uk-card-primary.uk-card-body .uk-link-toggle:hover .uk-link-heading,
.uk-card-primary > :not([class*='uk-card-media']) a.uk-link-heading:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-heading a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-heading,
.uk-card-secondary.uk-card-body a.uk-link-heading:hover,
.uk-card-secondary.uk-card-body .uk-link-heading a:hover,
.uk-card-secondary.uk-card-body .uk-link-toggle:hover .uk-link-heading,
.uk-card-secondary > :not([class*='uk-card-media']) a.uk-link-heading:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-heading a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link-toggle:hover .uk-link-heading,
.uk-overlay-primary a.uk-link-heading:hover,
.uk-overlay-primary .uk-link-heading a:hover,
.uk-overlay-primary .uk-link-toggle:hover .uk-link-heading,
.uk-offcanvas-bar a.uk-link-heading:hover,
.uk-offcanvas-bar .uk-link-heading a:hover,
.uk-offcanvas-bar .uk-link-toggle:hover .uk-link-heading {
  color: #fff;
}
.uk-light .uk-heading-divider,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-divider,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-divider,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-divider,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-divider,
.uk-card-primary.uk-card-body .uk-heading-divider,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-divider,
.uk-card-secondary.uk-card-body .uk-heading-divider,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-divider,
.uk-overlay-primary .uk-heading-divider,
.uk-offcanvas-bar .uk-heading-divider {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-heading-bullet::before,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-bullet::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-bullet::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-bullet::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-bullet::before,
.uk-card-primary.uk-card-body .uk-heading-bullet::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-bullet::before,
.uk-card-secondary.uk-card-body .uk-heading-bullet::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-bullet::before,
.uk-overlay-primary .uk-heading-bullet::before,
.uk-offcanvas-bar .uk-heading-bullet::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-heading-line > ::before,
.uk-light .uk-heading-line > ::after,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-line > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-heading-line > ::after,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-line > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-heading-line > ::after,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-line > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-heading-line > ::after,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-line > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-heading-line > ::after,
.uk-card-primary.uk-card-body .uk-heading-line > ::before,
.uk-card-primary.uk-card-body .uk-heading-line > ::after,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-line > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-heading-line > ::after,
.uk-card-secondary.uk-card-body .uk-heading-line > ::before,
.uk-card-secondary.uk-card-body .uk-heading-line > ::after,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-line > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-heading-line > ::after,
.uk-overlay-primary .uk-heading-line > ::before,
.uk-overlay-primary .uk-heading-line > ::after,
.uk-offcanvas-bar .uk-heading-line > ::before,
.uk-offcanvas-bar .uk-heading-line > ::after {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-divider-icon,
.uk-section-primary:not(.uk-preserve-color) .uk-divider-icon,
.uk-section-secondary:not(.uk-preserve-color) .uk-divider-icon,
.uk-tile-primary:not(.uk-preserve-color) .uk-divider-icon,
.uk-tile-secondary:not(.uk-preserve-color) .uk-divider-icon,
.uk-card-primary.uk-card-body .uk-divider-icon,
.uk-card-primary > :not([class*='uk-card-media']) .uk-divider-icon,
.uk-card-secondary.uk-card-body .uk-divider-icon,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-divider-icon,
.uk-overlay-primary .uk-divider-icon,
.uk-offcanvas-bar .uk-divider-icon {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22none%22%20stroke%3D%22rgba%28255,%20255,%20255,%200.2%29%22%20stroke-width%3D%222%22%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%227%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-light .uk-divider-icon::before,
.uk-light .uk-divider-icon::after,
.uk-section-primary:not(.uk-preserve-color) .uk-divider-icon::before,
.uk-section-primary:not(.uk-preserve-color) .uk-divider-icon::after,
.uk-section-secondary:not(.uk-preserve-color) .uk-divider-icon::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-divider-icon::after,
.uk-tile-primary:not(.uk-preserve-color) .uk-divider-icon::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-divider-icon::after,
.uk-tile-secondary:not(.uk-preserve-color) .uk-divider-icon::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-divider-icon::after,
.uk-card-primary.uk-card-body .uk-divider-icon::before,
.uk-card-primary.uk-card-body .uk-divider-icon::after,
.uk-card-primary > :not([class*='uk-card-media']) .uk-divider-icon::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-divider-icon::after,
.uk-card-secondary.uk-card-body .uk-divider-icon::before,
.uk-card-secondary.uk-card-body .uk-divider-icon::after,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-divider-icon::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-divider-icon::after,
.uk-overlay-primary .uk-divider-icon::before,
.uk-overlay-primary .uk-divider-icon::after,
.uk-offcanvas-bar .uk-divider-icon::before,
.uk-offcanvas-bar .uk-divider-icon::after {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-divider-small::after,
.uk-section-primary:not(.uk-preserve-color) .uk-divider-small::after,
.uk-section-secondary:not(.uk-preserve-color) .uk-divider-small::after,
.uk-tile-primary:not(.uk-preserve-color) .uk-divider-small::after,
.uk-tile-secondary:not(.uk-preserve-color) .uk-divider-small::after,
.uk-card-primary.uk-card-body .uk-divider-small::after,
.uk-card-primary > :not([class*='uk-card-media']) .uk-divider-small::after,
.uk-card-secondary.uk-card-body .uk-divider-small::after,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-divider-small::after,
.uk-overlay-primary .uk-divider-small::after,
.uk-offcanvas-bar .uk-divider-small::after {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-divider-vertical,
.uk-section-primary:not(.uk-preserve-color) .uk-divider-vertical,
.uk-section-secondary:not(.uk-preserve-color) .uk-divider-vertical,
.uk-tile-primary:not(.uk-preserve-color) .uk-divider-vertical,
.uk-tile-secondary:not(.uk-preserve-color) .uk-divider-vertical,
.uk-card-primary.uk-card-body .uk-divider-vertical,
.uk-card-primary > :not([class*='uk-card-media']) .uk-divider-vertical,
.uk-card-secondary.uk-card-body .uk-divider-vertical,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-divider-vertical,
.uk-overlay-primary .uk-divider-vertical,
.uk-offcanvas-bar .uk-divider-vertical {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-list-muted > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-list-muted > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-list-muted > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-list-muted > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-muted > ::before,
.uk-card-primary.uk-card-body .uk-list-muted > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-muted > ::before,
.uk-card-secondary.uk-card-body .uk-list-muted > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-muted > ::before,
.uk-overlay-primary .uk-list-muted > ::before,
.uk-offcanvas-bar .uk-list-muted > ::before {
  color: rgba(255, 255, 255, 0.5) !important;
}
.uk-light .uk-list-emphasis > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-list-emphasis > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-list-emphasis > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-list-emphasis > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-emphasis > ::before,
.uk-card-primary.uk-card-body .uk-list-emphasis > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-emphasis > ::before,
.uk-card-secondary.uk-card-body .uk-list-emphasis > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-emphasis > ::before,
.uk-overlay-primary .uk-list-emphasis > ::before,
.uk-offcanvas-bar .uk-list-emphasis > ::before {
  color: #fff !important;
}
.uk-light .uk-list-primary > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-list-primary > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-list-primary > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-list-primary > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-primary > ::before,
.uk-card-primary.uk-card-body .uk-list-primary > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-primary > ::before,
.uk-card-secondary.uk-card-body .uk-list-primary > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-primary > ::before,
.uk-overlay-primary .uk-list-primary > ::before,
.uk-offcanvas-bar .uk-list-primary > ::before {
  color: #fff !important;
}
.uk-light .uk-list-secondary > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-list-secondary > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-list-secondary > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-list-secondary > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-secondary > ::before,
.uk-card-primary.uk-card-body .uk-list-secondary > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-secondary > ::before,
.uk-card-secondary.uk-card-body .uk-list-secondary > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-secondary > ::before,
.uk-overlay-primary .uk-list-secondary > ::before,
.uk-offcanvas-bar .uk-list-secondary > ::before {
  color: #fff !important;
}
.uk-light .uk-list-bullet > ::before,
.uk-section-primary:not(.uk-preserve-color) .uk-list-bullet > ::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-list-bullet > ::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-list-bullet > ::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-bullet > ::before,
.uk-card-primary.uk-card-body .uk-list-bullet > ::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-bullet > ::before,
.uk-card-secondary.uk-card-body .uk-list-bullet > ::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-bullet > ::before,
.uk-overlay-primary .uk-list-bullet > ::before,
.uk-offcanvas-bar .uk-list-bullet > ::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226%22%20height%3D%226%22%20viewBox%3D%220%200%206%206%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20cx%3D%223%22%20cy%3D%223%22%20r%3D%223%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-light .uk-list-divider > :nth-child(n+2),
.uk-section-primary:not(.uk-preserve-color) .uk-list-divider > :nth-child(n+2),
.uk-section-secondary:not(.uk-preserve-color) .uk-list-divider > :nth-child(n+2),
.uk-tile-primary:not(.uk-preserve-color) .uk-list-divider > :nth-child(n+2),
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-divider > :nth-child(n+2),
.uk-card-primary.uk-card-body .uk-list-divider > :nth-child(n+2),
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-divider > :nth-child(n+2),
.uk-card-secondary.uk-card-body .uk-list-divider > :nth-child(n+2),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-divider > :nth-child(n+2),
.uk-overlay-primary .uk-list-divider > :nth-child(n+2),
.uk-offcanvas-bar .uk-list-divider > :nth-child(n+2) {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-list-striped > *:nth-of-type(odd),
.uk-section-primary:not(.uk-preserve-color) .uk-list-striped > *:nth-of-type(odd),
.uk-section-secondary:not(.uk-preserve-color) .uk-list-striped > *:nth-of-type(odd),
.uk-tile-primary:not(.uk-preserve-color) .uk-list-striped > *:nth-of-type(odd),
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-striped > *:nth-of-type(odd),
.uk-card-primary.uk-card-body .uk-list-striped > *:nth-of-type(odd),
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-striped > *:nth-of-type(odd),
.uk-card-secondary.uk-card-body .uk-list-striped > *:nth-of-type(odd),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-striped > *:nth-of-type(odd),
.uk-overlay-primary .uk-list-striped > *:nth-of-type(odd),
.uk-offcanvas-bar .uk-list-striped > *:nth-of-type(odd) {
  border-top-color: rgba(255, 255, 255, 0.2);
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-list-striped > :nth-of-type(odd),
.uk-section-primary:not(.uk-preserve-color) .uk-list-striped > :nth-of-type(odd),
.uk-section-secondary:not(.uk-preserve-color) .uk-list-striped > :nth-of-type(odd),
.uk-tile-primary:not(.uk-preserve-color) .uk-list-striped > :nth-of-type(odd),
.uk-tile-secondary:not(.uk-preserve-color) .uk-list-striped > :nth-of-type(odd),
.uk-card-primary.uk-card-body .uk-list-striped > :nth-of-type(odd),
.uk-card-primary > :not([class*='uk-card-media']) .uk-list-striped > :nth-of-type(odd),
.uk-card-secondary.uk-card-body .uk-list-striped > :nth-of-type(odd),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-list-striped > :nth-of-type(odd),
.uk-overlay-primary .uk-list-striped > :nth-of-type(odd),
.uk-offcanvas-bar .uk-list-striped > :nth-of-type(odd) {
  background-color: rgba(255, 255, 255, 0.1);
}
.uk-light .uk-table th,
.uk-section-primary:not(.uk-preserve-color) .uk-table th,
.uk-section-secondary:not(.uk-preserve-color) .uk-table th,
.uk-tile-primary:not(.uk-preserve-color) .uk-table th,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table th,
.uk-card-primary.uk-card-body .uk-table th,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table th,
.uk-card-secondary.uk-card-body .uk-table th,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table th,
.uk-overlay-primary .uk-table th,
.uk-offcanvas-bar .uk-table th {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-table caption,
.uk-section-primary:not(.uk-preserve-color) .uk-table caption,
.uk-section-secondary:not(.uk-preserve-color) .uk-table caption,
.uk-tile-primary:not(.uk-preserve-color) .uk-table caption,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table caption,
.uk-card-primary.uk-card-body .uk-table caption,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table caption,
.uk-card-secondary.uk-card-body .uk-table caption,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table caption,
.uk-overlay-primary .uk-table caption,
.uk-offcanvas-bar .uk-table caption {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-table > tr.uk-active,
.uk-light .uk-table tbody tr.uk-active,
.uk-section-primary:not(.uk-preserve-color) .uk-table > tr.uk-active,
.uk-section-primary:not(.uk-preserve-color) .uk-table tbody tr.uk-active,
.uk-section-secondary:not(.uk-preserve-color) .uk-table > tr.uk-active,
.uk-section-secondary:not(.uk-preserve-color) .uk-table tbody tr.uk-active,
.uk-tile-primary:not(.uk-preserve-color) .uk-table > tr.uk-active,
.uk-tile-primary:not(.uk-preserve-color) .uk-table tbody tr.uk-active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table > tr.uk-active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table tbody tr.uk-active,
.uk-card-primary.uk-card-body .uk-table > tr.uk-active,
.uk-card-primary.uk-card-body .uk-table tbody tr.uk-active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table > tr.uk-active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table tbody tr.uk-active,
.uk-card-secondary.uk-card-body .uk-table > tr.uk-active,
.uk-card-secondary.uk-card-body .uk-table tbody tr.uk-active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table > tr.uk-active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table tbody tr.uk-active,
.uk-overlay-primary .uk-table > tr.uk-active,
.uk-overlay-primary .uk-table tbody tr.uk-active,
.uk-offcanvas-bar .uk-table > tr.uk-active,
.uk-offcanvas-bar .uk-table tbody tr.uk-active {
  background: rgba(255, 255, 255, 0.08);
}
.uk-light .uk-table-divider > tr:not(:first-child),
.uk-light .uk-table-divider > :not(:first-child) > tr,
.uk-light .uk-table-divider > :first-child > tr:not(:first-child),
.uk-section-primary:not(.uk-preserve-color) .uk-table-divider > tr:not(:first-child),
.uk-section-primary:not(.uk-preserve-color) .uk-table-divider > :not(:first-child) > tr,
.uk-section-primary:not(.uk-preserve-color) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-section-secondary:not(.uk-preserve-color) .uk-table-divider > tr:not(:first-child),
.uk-section-secondary:not(.uk-preserve-color) .uk-table-divider > :not(:first-child) > tr,
.uk-section-secondary:not(.uk-preserve-color) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-tile-primary:not(.uk-preserve-color) .uk-table-divider > tr:not(:first-child),
.uk-tile-primary:not(.uk-preserve-color) .uk-table-divider > :not(:first-child) > tr,
.uk-tile-primary:not(.uk-preserve-color) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-divider > tr:not(:first-child),
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-divider > :not(:first-child) > tr,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-card-primary.uk-card-body .uk-table-divider > tr:not(:first-child),
.uk-card-primary.uk-card-body .uk-table-divider > :not(:first-child) > tr,
.uk-card-primary.uk-card-body .uk-table-divider > :first-child > tr:not(:first-child),
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-divider > tr:not(:first-child),
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-divider > :not(:first-child) > tr,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-card-secondary.uk-card-body .uk-table-divider > tr:not(:first-child),
.uk-card-secondary.uk-card-body .uk-table-divider > :not(:first-child) > tr,
.uk-card-secondary.uk-card-body .uk-table-divider > :first-child > tr:not(:first-child),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-divider > tr:not(:first-child),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-divider > :not(:first-child) > tr,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-divider > :first-child > tr:not(:first-child),
.uk-overlay-primary .uk-table-divider > tr:not(:first-child),
.uk-overlay-primary .uk-table-divider > :not(:first-child) > tr,
.uk-overlay-primary .uk-table-divider > :first-child > tr:not(:first-child),
.uk-offcanvas-bar .uk-table-divider > tr:not(:first-child),
.uk-offcanvas-bar .uk-table-divider > :not(:first-child) > tr,
.uk-offcanvas-bar .uk-table-divider > :first-child > tr:not(:first-child) {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-table-striped > tr:nth-of-type(odd),
.uk-light .uk-table-striped tbody tr:nth-of-type(odd),
.uk-section-primary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(odd),
.uk-section-primary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-section-secondary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(odd),
.uk-section-secondary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-tile-primary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(odd),
.uk-tile-primary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(odd),
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-card-primary.uk-card-body .uk-table-striped > tr:nth-of-type(odd),
.uk-card-primary.uk-card-body .uk-table-striped tbody tr:nth-of-type(odd),
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-striped > tr:nth-of-type(odd),
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-card-secondary.uk-card-body .uk-table-striped > tr:nth-of-type(odd),
.uk-card-secondary.uk-card-body .uk-table-striped tbody tr:nth-of-type(odd),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-striped > tr:nth-of-type(odd),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-striped tbody tr:nth-of-type(odd),
.uk-overlay-primary .uk-table-striped > tr:nth-of-type(odd),
.uk-overlay-primary .uk-table-striped tbody tr:nth-of-type(odd),
.uk-offcanvas-bar .uk-table-striped > tr:nth-of-type(odd),
.uk-offcanvas-bar .uk-table-striped tbody tr:nth-of-type(odd) {
  background: rgba(255, 255, 255, 0.1);
  border-top-color: rgba(255, 255, 255, 0.2);
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-table-hover > tr:hover,
.uk-light .uk-table-hover tbody tr:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-table-hover > tr:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-table-hover tbody tr:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-table-hover > tr:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-table-hover tbody tr:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-table-hover > tr:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-table-hover tbody tr:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-hover > tr:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-hover tbody tr:hover,
.uk-card-primary.uk-card-body .uk-table-hover > tr:hover,
.uk-card-primary.uk-card-body .uk-table-hover tbody tr:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-hover > tr:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-hover tbody tr:hover,
.uk-card-secondary.uk-card-body .uk-table-hover > tr:hover,
.uk-card-secondary.uk-card-body .uk-table-hover tbody tr:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-hover > tr:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-hover tbody tr:hover,
.uk-overlay-primary .uk-table-hover > tr:hover,
.uk-overlay-primary .uk-table-hover tbody tr:hover,
.uk-offcanvas-bar .uk-table-hover > tr:hover,
.uk-offcanvas-bar .uk-table-hover tbody tr:hover {
  background: rgba(255, 255, 255, 0.08);
}
.uk-light .uk-icon-link,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-link,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-link,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-link,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-link,
.uk-card-primary.uk-card-body .uk-icon-link,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-link,
.uk-card-secondary.uk-card-body .uk-icon-link,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-link,
.uk-overlay-primary .uk-icon-link,
.uk-offcanvas-bar .uk-icon-link {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-icon-link:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-link:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-link:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-link:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-link:hover,
.uk-card-primary.uk-card-body .uk-icon-link:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-link:hover,
.uk-card-secondary.uk-card-body .uk-icon-link:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-link:hover,
.uk-overlay-primary .uk-icon-link:hover,
.uk-offcanvas-bar .uk-icon-link:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-icon-link:active,
.uk-light .uk-active > .uk-icon-link,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-link:active,
.uk-section-primary:not(.uk-preserve-color) .uk-active > .uk-icon-link,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-link:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-active > .uk-icon-link,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-link:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-active > .uk-icon-link,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-link:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-active > .uk-icon-link,
.uk-card-primary.uk-card-body .uk-icon-link:active,
.uk-card-primary.uk-card-body .uk-active > .uk-icon-link,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-link:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-active > .uk-icon-link,
.uk-card-secondary.uk-card-body .uk-icon-link:active,
.uk-card-secondary.uk-card-body .uk-active > .uk-icon-link,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-link:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-active > .uk-icon-link,
.uk-overlay-primary .uk-icon-link:active,
.uk-overlay-primary .uk-active > .uk-icon-link,
.uk-offcanvas-bar .uk-icon-link:active,
.uk-offcanvas-bar .uk-active > .uk-icon-link {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-icon-button,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-button,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-button,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-button,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-button,
.uk-card-primary.uk-card-body .uk-icon-button,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-button,
.uk-card-secondary.uk-card-body .uk-icon-button,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-button,
.uk-overlay-primary .uk-icon-button,
.uk-offcanvas-bar .uk-icon-button {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-icon-button:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-button:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-button:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-button:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-button:hover,
.uk-card-primary.uk-card-body .uk-icon-button:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-button:hover,
.uk-card-secondary.uk-card-body .uk-icon-button:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-button:hover,
.uk-overlay-primary .uk-icon-button:hover,
.uk-offcanvas-bar .uk-icon-button:hover {
  background-color: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-icon-button:active,
.uk-section-primary:not(.uk-preserve-color) .uk-icon-button:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-icon-button:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-icon-button:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-icon-button:active,
.uk-card-primary.uk-card-body .uk-icon-button:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-icon-button:active,
.uk-card-secondary.uk-card-body .uk-icon-button:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-icon-button:active,
.uk-overlay-primary .uk-icon-button:active,
.uk-offcanvas-bar .uk-icon-button:active {
  background-color: rgba(255, 255, 255, 0.2);
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-input,
.uk-light .uk-select,
.uk-light .uk-textarea,
.uk-section-primary:not(.uk-preserve-color) .uk-input,
.uk-section-primary:not(.uk-preserve-color) .uk-select,
.uk-section-primary:not(.uk-preserve-color) .uk-textarea,
.uk-section-secondary:not(.uk-preserve-color) .uk-input,
.uk-section-secondary:not(.uk-preserve-color) .uk-select,
.uk-section-secondary:not(.uk-preserve-color) .uk-textarea,
.uk-tile-primary:not(.uk-preserve-color) .uk-input,
.uk-tile-primary:not(.uk-preserve-color) .uk-select,
.uk-tile-primary:not(.uk-preserve-color) .uk-textarea,
.uk-tile-secondary:not(.uk-preserve-color) .uk-input,
.uk-tile-secondary:not(.uk-preserve-color) .uk-select,
.uk-tile-secondary:not(.uk-preserve-color) .uk-textarea,
.uk-card-primary.uk-card-body .uk-input,
.uk-card-primary.uk-card-body .uk-select,
.uk-card-primary.uk-card-body .uk-textarea,
.uk-card-primary > :not([class*='uk-card-media']) .uk-input,
.uk-card-primary > :not([class*='uk-card-media']) .uk-select,
.uk-card-primary > :not([class*='uk-card-media']) .uk-textarea,
.uk-card-secondary.uk-card-body .uk-input,
.uk-card-secondary.uk-card-body .uk-select,
.uk-card-secondary.uk-card-body .uk-textarea,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-input,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-select,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-textarea,
.uk-overlay-primary .uk-input,
.uk-overlay-primary .uk-select,
.uk-overlay-primary .uk-textarea,
.uk-offcanvas-bar .uk-input,
.uk-offcanvas-bar .uk-select,
.uk-offcanvas-bar .uk-textarea {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
  background-clip: padding-box;
  border-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-input:focus,
.uk-light .uk-select:focus,
.uk-light .uk-textarea:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-input:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-select:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-textarea:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-input:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-select:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-textarea:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-input:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-select:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-textarea:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-input:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-select:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-textarea:focus,
.uk-card-primary.uk-card-body .uk-input:focus,
.uk-card-primary.uk-card-body .uk-select:focus,
.uk-card-primary.uk-card-body .uk-textarea:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-input:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-select:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-textarea:focus,
.uk-card-secondary.uk-card-body .uk-input:focus,
.uk-card-secondary.uk-card-body .uk-select:focus,
.uk-card-secondary.uk-card-body .uk-textarea:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-input:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-select:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-textarea:focus,
.uk-overlay-primary .uk-input:focus,
.uk-overlay-primary .uk-select:focus,
.uk-overlay-primary .uk-textarea:focus,
.uk-offcanvas-bar .uk-input:focus,
.uk-offcanvas-bar .uk-select:focus,
.uk-offcanvas-bar .uk-textarea:focus {
  background-color: rgba(255, 255, 255, 0.15);
  color: rgba(255, 255, 255, 0.7);
  border-color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-input::placeholder,
.uk-section-primary:not(.uk-preserve-color) .uk-input::placeholder,
.uk-section-secondary:not(.uk-preserve-color) .uk-input::placeholder,
.uk-tile-primary:not(.uk-preserve-color) .uk-input::placeholder,
.uk-tile-secondary:not(.uk-preserve-color) .uk-input::placeholder,
.uk-card-primary.uk-card-body .uk-input::placeholder,
.uk-card-primary > :not([class*='uk-card-media']) .uk-input::placeholder,
.uk-card-secondary.uk-card-body .uk-input::placeholder,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-input::placeholder,
.uk-overlay-primary .uk-input::placeholder,
.uk-offcanvas-bar .uk-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-textarea::placeholder,
.uk-section-primary:not(.uk-preserve-color) .uk-textarea::placeholder,
.uk-section-secondary:not(.uk-preserve-color) .uk-textarea::placeholder,
.uk-tile-primary:not(.uk-preserve-color) .uk-textarea::placeholder,
.uk-tile-secondary:not(.uk-preserve-color) .uk-textarea::placeholder,
.uk-card-primary.uk-card-body .uk-textarea::placeholder,
.uk-card-primary > :not([class*='uk-card-media']) .uk-textarea::placeholder,
.uk-card-secondary.uk-card-body .uk-textarea::placeholder,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-textarea::placeholder,
.uk-overlay-primary .uk-textarea::placeholder,
.uk-offcanvas-bar .uk-textarea::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-select:not([multiple]):not([size]),
.uk-section-primary:not(.uk-preserve-color) .uk-select:not([multiple]):not([size]),
.uk-section-secondary:not(.uk-preserve-color) .uk-select:not([multiple]):not([size]),
.uk-tile-primary:not(.uk-preserve-color) .uk-select:not([multiple]):not([size]),
.uk-tile-secondary:not(.uk-preserve-color) .uk-select:not([multiple]):not([size]),
.uk-card-primary.uk-card-body .uk-select:not([multiple]):not([size]),
.uk-card-primary > :not([class*='uk-card-media']) .uk-select:not([multiple]):not([size]),
.uk-card-secondary.uk-card-body .uk-select:not([multiple]):not([size]),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-select:not([multiple]):not([size]),
.uk-overlay-primary .uk-select:not([multiple]):not([size]),
.uk-offcanvas-bar .uk-select:not([multiple]):not([size]) {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20points%3D%2212%201%209%206%2015%206%22%20%2F%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20points%3D%2212%2013%209%208%2015%208%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-light .uk-input[list]:hover,
.uk-light .uk-input[list]:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-input[list]:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-input[list]:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-input[list]:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-input[list]:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-input[list]:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-input[list]:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-input[list]:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-input[list]:focus,
.uk-card-primary.uk-card-body .uk-input[list]:hover,
.uk-card-primary.uk-card-body .uk-input[list]:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-input[list]:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-input[list]:focus,
.uk-card-secondary.uk-card-body .uk-input[list]:hover,
.uk-card-secondary.uk-card-body .uk-input[list]:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-input[list]:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-input[list]:focus,
.uk-overlay-primary .uk-input[list]:hover,
.uk-overlay-primary .uk-input[list]:focus,
.uk-offcanvas-bar .uk-input[list]:hover,
.uk-offcanvas-bar .uk-input[list]:focus {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2224%22%20height%3D%2216%22%20viewBox%3D%220%200%2024%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20points%3D%2212%2012%208%206%2016%206%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-light .uk-radio,
.uk-light .uk-checkbox,
.uk-section-primary:not(.uk-preserve-color) .uk-radio,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox,
.uk-section-secondary:not(.uk-preserve-color) .uk-radio,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox,
.uk-tile-primary:not(.uk-preserve-color) .uk-radio,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox,
.uk-tile-secondary:not(.uk-preserve-color) .uk-radio,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox,
.uk-card-primary.uk-card-body .uk-radio,
.uk-card-primary.uk-card-body .uk-checkbox,
.uk-card-primary > :not([class*='uk-card-media']) .uk-radio,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox,
.uk-card-secondary.uk-card-body .uk-radio,
.uk-card-secondary.uk-card-body .uk-checkbox,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-radio,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox,
.uk-overlay-primary .uk-radio,
.uk-overlay-primary .uk-checkbox,
.uk-offcanvas-bar .uk-radio,
.uk-offcanvas-bar .uk-checkbox {
  background-color: rgba(255, 255, 255, 0.1);
  border-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-radio:focus,
.uk-light .uk-checkbox:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-radio:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-radio:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-radio:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-radio:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:focus,
.uk-card-primary.uk-card-body .uk-radio:focus,
.uk-card-primary.uk-card-body .uk-checkbox:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-radio:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:focus,
.uk-card-secondary.uk-card-body .uk-radio:focus,
.uk-card-secondary.uk-card-body .uk-checkbox:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-radio:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:focus,
.uk-overlay-primary .uk-radio:focus,
.uk-overlay-primary .uk-checkbox:focus,
.uk-offcanvas-bar .uk-radio:focus,
.uk-offcanvas-bar .uk-checkbox:focus {
  background-color: rgba(255, 255, 255, 0.15);
  border-color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-radio:checked,
.uk-light .uk-checkbox:checked,
.uk-light .uk-checkbox:indeterminate,
.uk-section-primary:not(.uk-preserve-color) .uk-radio:checked,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-section-secondary:not(.uk-preserve-color) .uk-radio:checked,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-tile-primary:not(.uk-preserve-color) .uk-radio:checked,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-tile-secondary:not(.uk-preserve-color) .uk-radio:checked,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-card-primary.uk-card-body .uk-radio:checked,
.uk-card-primary.uk-card-body .uk-checkbox:checked,
.uk-card-primary.uk-card-body .uk-checkbox:indeterminate,
.uk-card-primary > :not([class*='uk-card-media']) .uk-radio:checked,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:checked,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate,
.uk-card-secondary.uk-card-body .uk-radio:checked,
.uk-card-secondary.uk-card-body .uk-checkbox:checked,
.uk-card-secondary.uk-card-body .uk-checkbox:indeterminate,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-radio:checked,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:checked,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate,
.uk-overlay-primary .uk-radio:checked,
.uk-overlay-primary .uk-checkbox:checked,
.uk-overlay-primary .uk-checkbox:indeterminate,
.uk-offcanvas-bar .uk-radio:checked,
.uk-offcanvas-bar .uk-checkbox:checked,
.uk-offcanvas-bar .uk-checkbox:indeterminate {
  background-color: #fff;
  border-color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-radio:checked:focus,
.uk-light .uk-checkbox:checked:focus,
.uk-light .uk-checkbox:indeterminate:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-radio:checked:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:checked:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-radio:checked:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:checked:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-radio:checked:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:checked:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-radio:checked:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:checked:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate:focus,
.uk-card-primary.uk-card-body .uk-radio:checked:focus,
.uk-card-primary.uk-card-body .uk-checkbox:checked:focus,
.uk-card-primary.uk-card-body .uk-checkbox:indeterminate:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-radio:checked:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:checked:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate:focus,
.uk-card-secondary.uk-card-body .uk-radio:checked:focus,
.uk-card-secondary.uk-card-body .uk-checkbox:checked:focus,
.uk-card-secondary.uk-card-body .uk-checkbox:indeterminate:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-radio:checked:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:checked:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate:focus,
.uk-overlay-primary .uk-radio:checked:focus,
.uk-overlay-primary .uk-checkbox:checked:focus,
.uk-overlay-primary .uk-checkbox:indeterminate:focus,
.uk-offcanvas-bar .uk-radio:checked:focus,
.uk-offcanvas-bar .uk-checkbox:checked:focus,
.uk-offcanvas-bar .uk-checkbox:indeterminate:focus {
  background-color: #ffffff;
}
.uk-light .uk-radio:checked,
.uk-section-primary:not(.uk-preserve-color) .uk-radio:checked,
.uk-section-secondary:not(.uk-preserve-color) .uk-radio:checked,
.uk-tile-primary:not(.uk-preserve-color) .uk-radio:checked,
.uk-tile-secondary:not(.uk-preserve-color) .uk-radio:checked,
.uk-card-primary.uk-card-body .uk-radio:checked,
.uk-card-primary > :not([class*='uk-card-media']) .uk-radio:checked,
.uk-card-secondary.uk-card-body .uk-radio:checked,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-radio:checked,
.uk-overlay-primary .uk-radio:checked,
.uk-offcanvas-bar .uk-radio:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23666%22%20cx%3D%228%22%20cy%3D%228%22%20r%3D%222%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-light .uk-checkbox:checked,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:checked,
.uk-card-primary.uk-card-body .uk-checkbox:checked,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:checked,
.uk-card-secondary.uk-card-body .uk-checkbox:checked,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:checked,
.uk-overlay-primary .uk-checkbox:checked,
.uk-offcanvas-bar .uk-checkbox:checked {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2214%22%20height%3D%2211%22%20viewBox%3D%220%200%2014%2011%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpolygon%20fill%3D%22%23666%22%20points%3D%2212%201%205%207.5%202%205%201%205.5%205%2010%2013%201.5%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
}
.uk-light .uk-checkbox:indeterminate,
.uk-section-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-section-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-tile-primary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-tile-secondary:not(.uk-preserve-color) .uk-checkbox:indeterminate,
.uk-card-primary.uk-card-body .uk-checkbox:indeterminate,
.uk-card-primary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate,
.uk-card-secondary.uk-card-body .uk-checkbox:indeterminate,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-checkbox:indeterminate,
.uk-overlay-primary .uk-checkbox:indeterminate,
.uk-offcanvas-bar .uk-checkbox:indeterminate {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22%23666%22%20x%3D%223%22%20y%3D%228%22%20width%3D%2210%22%20height%3D%221%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-light .uk-form-label,
.uk-section-primary:not(.uk-preserve-color) .uk-form-label,
.uk-section-secondary:not(.uk-preserve-color) .uk-form-label,
.uk-tile-primary:not(.uk-preserve-color) .uk-form-label,
.uk-tile-secondary:not(.uk-preserve-color) .uk-form-label,
.uk-card-primary.uk-card-body .uk-form-label,
.uk-card-primary > :not([class*='uk-card-media']) .uk-form-label,
.uk-card-secondary.uk-card-body .uk-form-label,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-form-label,
.uk-overlay-primary .uk-form-label,
.uk-offcanvas-bar .uk-form-label {
  color: #fff;
}
.uk-light .uk-form-icon,
.uk-section-primary:not(.uk-preserve-color) .uk-form-icon,
.uk-section-secondary:not(.uk-preserve-color) .uk-form-icon,
.uk-tile-primary:not(.uk-preserve-color) .uk-form-icon,
.uk-tile-secondary:not(.uk-preserve-color) .uk-form-icon,
.uk-card-primary.uk-card-body .uk-form-icon,
.uk-card-primary > :not([class*='uk-card-media']) .uk-form-icon,
.uk-card-secondary.uk-card-body .uk-form-icon,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-form-icon,
.uk-overlay-primary .uk-form-icon,
.uk-offcanvas-bar .uk-form-icon {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-form-icon:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-form-icon:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-form-icon:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-form-icon:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-form-icon:hover,
.uk-card-primary.uk-card-body .uk-form-icon:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-form-icon:hover,
.uk-card-secondary.uk-card-body .uk-form-icon:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-form-icon:hover,
.uk-overlay-primary .uk-form-icon:hover,
.uk-offcanvas-bar .uk-form-icon:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-button-default,
.uk-section-primary:not(.uk-preserve-color) .uk-button-default,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-default,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-default,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-default,
.uk-card-primary.uk-card-body .uk-button-default,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-default,
.uk-card-secondary.uk-card-body .uk-button-default,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-default,
.uk-overlay-primary .uk-button-default,
.uk-offcanvas-bar .uk-button-default {
  background-color: transparent;
  color: #fff;
  border-color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-button-default:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-button-default:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-default:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-default:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-default:hover,
.uk-card-primary.uk-card-body .uk-button-default:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-default:hover,
.uk-card-secondary.uk-card-body .uk-button-default:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-default:hover,
.uk-overlay-primary .uk-button-default:hover,
.uk-offcanvas-bar .uk-button-default:hover {
  background-color: transparent;
  color: #fff;
  border-color: #fff;
}
.uk-light .uk-button-default:active,
.uk-light .uk-button-default.uk-active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-default:active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-default.uk-active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-default:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-default.uk-active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-default:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-default.uk-active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-default:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-default.uk-active,
.uk-card-primary.uk-card-body .uk-button-default:active,
.uk-card-primary.uk-card-body .uk-button-default.uk-active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-default:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-default.uk-active,
.uk-card-secondary.uk-card-body .uk-button-default:active,
.uk-card-secondary.uk-card-body .uk-button-default.uk-active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-default:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-default.uk-active,
.uk-overlay-primary .uk-button-default:active,
.uk-overlay-primary .uk-button-default.uk-active,
.uk-offcanvas-bar .uk-button-default:active,
.uk-offcanvas-bar .uk-button-default.uk-active {
  background-color: transparent;
  color: #fff;
  border-color: #fff;
}
.uk-light .uk-button-primary,
.uk-section-primary:not(.uk-preserve-color) .uk-button-primary,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-primary,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-primary,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-primary,
.uk-card-primary.uk-card-body .uk-button-primary,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-primary,
.uk-card-secondary.uk-card-body .uk-button-primary,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-primary,
.uk-overlay-primary .uk-button-primary,
.uk-offcanvas-bar .uk-button-primary {
  background-color: #fff;
  color: #666;
}
.uk-light .uk-button-primary:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-button-primary:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-primary:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-primary:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-primary:hover,
.uk-card-primary.uk-card-body .uk-button-primary:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-primary:hover,
.uk-card-secondary.uk-card-body .uk-button-primary:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-primary:hover,
.uk-overlay-primary .uk-button-primary:hover,
.uk-offcanvas-bar .uk-button-primary:hover {
  background-color: #f2f2f2;
  color: #666;
}
.uk-light .uk-button-primary:active,
.uk-light .uk-button-primary.uk-active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-primary:active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-primary.uk-active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-primary:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-primary.uk-active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-primary:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-primary.uk-active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-primary:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-primary.uk-active,
.uk-card-primary.uk-card-body .uk-button-primary:active,
.uk-card-primary.uk-card-body .uk-button-primary.uk-active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-primary:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-primary.uk-active,
.uk-card-secondary.uk-card-body .uk-button-primary:active,
.uk-card-secondary.uk-card-body .uk-button-primary.uk-active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-primary:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-primary.uk-active,
.uk-overlay-primary .uk-button-primary:active,
.uk-overlay-primary .uk-button-primary.uk-active,
.uk-offcanvas-bar .uk-button-primary:active,
.uk-offcanvas-bar .uk-button-primary.uk-active {
  background-color: #e6e6e6;
  color: #666;
}
.uk-light .uk-button-secondary,
.uk-section-primary:not(.uk-preserve-color) .uk-button-secondary,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-secondary,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-secondary,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-secondary,
.uk-card-primary.uk-card-body .uk-button-secondary,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-secondary,
.uk-card-secondary.uk-card-body .uk-button-secondary,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-secondary,
.uk-overlay-primary .uk-button-secondary,
.uk-offcanvas-bar .uk-button-secondary {
  background-color: #fff;
  color: #666;
}
.uk-light .uk-button-secondary:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-button-secondary:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-secondary:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-secondary:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-secondary:hover,
.uk-card-primary.uk-card-body .uk-button-secondary:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-secondary:hover,
.uk-card-secondary.uk-card-body .uk-button-secondary:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-secondary:hover,
.uk-overlay-primary .uk-button-secondary:hover,
.uk-offcanvas-bar .uk-button-secondary:hover {
  background-color: #f2f2f2;
  color: #666;
}
.uk-light .uk-button-secondary:active,
.uk-light .uk-button-secondary.uk-active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-secondary:active,
.uk-section-primary:not(.uk-preserve-color) .uk-button-secondary.uk-active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-secondary:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-button-secondary.uk-active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-secondary:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-button-secondary.uk-active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-secondary:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-button-secondary.uk-active,
.uk-card-primary.uk-card-body .uk-button-secondary:active,
.uk-card-primary.uk-card-body .uk-button-secondary.uk-active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-secondary:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-button-secondary.uk-active,
.uk-card-secondary.uk-card-body .uk-button-secondary:active,
.uk-card-secondary.uk-card-body .uk-button-secondary.uk-active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-secondary:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-button-secondary.uk-active,
.uk-overlay-primary .uk-button-secondary:active,
.uk-overlay-primary .uk-button-secondary.uk-active,
.uk-offcanvas-bar .uk-button-secondary:active,
.uk-offcanvas-bar .uk-button-secondary.uk-active {
  background-color: #e6e6e6;
  color: #666;
}
.uk-light .uk-text,
.uk-section-primary:not(.uk-preserve-color) .uk-text,
.uk-section-secondary:not(.uk-preserve-color) .uk-text,
.uk-tile-primary:not(.uk-preserve-color) .uk-text,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text,
.uk-card-primary.uk-card-body .uk-text,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text,
.uk-card-secondary.uk-card-body .uk-text,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text,
.uk-overlay-primary .uk-text,
.uk-offcanvas-bar .uk-text {
  color: #fff;
}
.uk-light .uk-text::before,
.uk-section-primary:not(.uk-preserve-color) .uk-text::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-text::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-text::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text::before,
.uk-card-primary.uk-card-body .uk-text::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text::before,
.uk-card-secondary.uk-card-body .uk-text::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text::before,
.uk-overlay-primary .uk-text::before,
.uk-offcanvas-bar .uk-text::before {
  border-bottom-color: #fff;
}
.uk-light .uk-text:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-text:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-text:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-text:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text:hover,
.uk-card-primary.uk-card-body .uk-text:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text:hover,
.uk-card-secondary.uk-card-body .uk-text:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text:hover,
.uk-overlay-primary .uk-text:hover,
.uk-offcanvas-bar .uk-text:hover {
  color: #fff;
}
.uk-light .uk-text:disabled,
.uk-section-primary:not(.uk-preserve-color) .uk-text:disabled,
.uk-section-secondary:not(.uk-preserve-color) .uk-text:disabled,
.uk-tile-primary:not(.uk-preserve-color) .uk-text:disabled,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text:disabled,
.uk-card-primary.uk-card-body .uk-text:disabled,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text:disabled,
.uk-card-secondary.uk-card-body .uk-text:disabled,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text:disabled,
.uk-overlay-primary .uk-text:disabled,
.uk-offcanvas-bar .uk-text:disabled {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-link,
.uk-section-primary:not(.uk-preserve-color) .uk-link,
.uk-section-secondary:not(.uk-preserve-color) .uk-link,
.uk-tile-primary:not(.uk-preserve-color) .uk-link,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link,
.uk-card-primary.uk-card-body .uk-link,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link,
.uk-card-secondary.uk-card-body .uk-link,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link,
.uk-overlay-primary .uk-link,
.uk-offcanvas-bar .uk-link {
  color: #fff;
}
.uk-light .uk-link:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-link:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-link:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-link:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-link:hover,
.uk-card-primary.uk-card-body .uk-link:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-link:hover,
.uk-card-secondary.uk-card-body .uk-link:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-link:hover,
.uk-overlay-primary .uk-link:hover,
.uk-offcanvas-bar .uk-link:hover {
  color: rgba(255, 255, 255, 0.5);
}

.uk-light.uk-card-badge,
.uk-section-primary:not(.uk-preserve-color).uk-card-badge,
.uk-section-secondary:not(.uk-preserve-color).uk-card-badge,
.uk-tile-primary:not(.uk-preserve-color).uk-card-badge,
.uk-tile-secondary:not(.uk-preserve-color).uk-card-badge,
.uk-card-primary.uk-card-body.uk-card-badge,
.uk-card-primary > :not([class*='uk-card-media']).uk-card-badge,
.uk-card-secondary.uk-card-body.uk-card-badge,
.uk-card-secondary > :not([class*='uk-card-media']).uk-card-badge,
.uk-overlay-primary.uk-card-badge,
.uk-offcanvas-bar.uk-card-badge {
  background-color: #fff;
  color: #666;
}

.uk-light .uk-close,
.uk-section-primary:not(.uk-preserve-color) .uk-close,
.uk-section-secondary:not(.uk-preserve-color) .uk-close,
.uk-tile-primary:not(.uk-preserve-color) .uk-close,
.uk-tile-secondary:not(.uk-preserve-color) .uk-close,
.uk-card-primary.uk-card-body .uk-close,
.uk-card-primary > :not([class*='uk-card-media']) .uk-close,
.uk-card-secondary.uk-card-body .uk-close,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-close,
.uk-overlay-primary .uk-close,
.uk-offcanvas-bar .uk-close {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-close:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-close:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-close:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-close:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-close:hover,
.uk-card-primary.uk-card-body .uk-close:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-close:hover,
.uk-card-secondary.uk-card-body .uk-close:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-close:hover,
.uk-overlay-primary .uk-close:hover,
.uk-offcanvas-bar .uk-close:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-totop,
.uk-section-primary:not(.uk-preserve-color) .uk-totop,
.uk-section-secondary:not(.uk-preserve-color) .uk-totop,
.uk-tile-primary:not(.uk-preserve-color) .uk-totop,
.uk-tile-secondary:not(.uk-preserve-color) .uk-totop,
.uk-card-primary.uk-card-body .uk-totop,
.uk-card-primary > :not([class*='uk-card-media']) .uk-totop,
.uk-card-secondary.uk-card-body .uk-totop,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-totop,
.uk-overlay-primary .uk-totop,
.uk-offcanvas-bar .uk-totop {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-totop:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-totop:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-totop:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-totop:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-totop:hover,
.uk-card-primary.uk-card-body .uk-totop:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-totop:hover,
.uk-card-secondary.uk-card-body .uk-totop:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-totop:hover,
.uk-overlay-primary .uk-totop:hover,
.uk-offcanvas-bar .uk-totop:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-totop:active,
.uk-section-primary:not(.uk-preserve-color) .uk-totop:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-totop:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-totop:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-totop:active,
.uk-card-primary.uk-card-body .uk-totop:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-totop:active,
.uk-card-secondary.uk-card-body .uk-totop:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-totop:active,
.uk-overlay-primary .uk-totop:active,
.uk-offcanvas-bar .uk-totop:active {
  color: #fff;
}
.uk-light .uk-marker,
.uk-section-primary:not(.uk-preserve-color) .uk-marker,
.uk-section-secondary:not(.uk-preserve-color) .uk-marker,
.uk-tile-primary:not(.uk-preserve-color) .uk-marker,
.uk-tile-secondary:not(.uk-preserve-color) .uk-marker,
.uk-card-primary.uk-card-body .uk-marker,
.uk-card-primary > :not([class*='uk-card-media']) .uk-marker,
.uk-card-secondary.uk-card-body .uk-marker,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-marker,
.uk-overlay-primary .uk-marker,
.uk-offcanvas-bar .uk-marker {
  background: #f8f8f8;
  color: #666;
}
.uk-light .uk-marker:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-marker:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-marker:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-marker:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-marker:hover,
.uk-card-primary.uk-card-body .uk-marker:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-marker:hover,
.uk-card-secondary.uk-card-body .uk-marker:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-marker:hover,
.uk-overlay-primary .uk-marker:hover,
.uk-offcanvas-bar .uk-marker:hover {
  color: #666;
}
/*
.uk-light .uk-badge,
.uk-section-primary:not(.uk-preserve-color) .uk-badge,
.uk-section-secondary:not(.uk-preserve-color) .uk-badge,
.uk-tile-primary:not(.uk-preserve-color) .uk-badge,
.uk-tile-secondary:not(.uk-preserve-color) .uk-badge,
.uk-card-primary.uk-card-body .uk-badge,
.uk-card-primary > :not([class*='uk-card-media']) .uk-badge,
.uk-card-secondary.uk-card-body .uk-badge,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-badge,
.uk-overlay-primary .uk-badge,
.uk-offcanvas-bar .uk-badge {
  background-color: #fff;
  color: #666 !important;
}
*/
.uk-light .uk-label,
.uk-section-primary:not(.uk-preserve-color) .uk-label,
.uk-section-secondary:not(.uk-preserve-color) .uk-label,
.uk-tile-primary:not(.uk-preserve-color) .uk-label,
.uk-tile-secondary:not(.uk-preserve-color) .uk-label,
.uk-card-primary.uk-card-body .uk-label,
.uk-card-primary > :not([class*='uk-card-media']) .uk-label,
.uk-card-secondary.uk-card-body .uk-label,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-label,
.uk-overlay-primary .uk-label,
.uk-offcanvas-bar .uk-label {
  background-color: #fff;
  color: #666;
}
.uk-light .uk-article-meta,
.uk-section-primary:not(.uk-preserve-color) .uk-article-meta,
.uk-section-secondary:not(.uk-preserve-color) .uk-article-meta,
.uk-tile-primary:not(.uk-preserve-color) .uk-article-meta,
.uk-tile-secondary:not(.uk-preserve-color) .uk-article-meta,
.uk-card-primary.uk-card-body .uk-article-meta,
.uk-card-primary > :not([class*='uk-card-media']) .uk-article-meta,
.uk-card-secondary.uk-card-body .uk-article-meta,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-article-meta,
.uk-overlay-primary .uk-article-meta,
.uk-offcanvas-bar .uk-article-meta {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-search-input,
.uk-section-primary:not(.uk-preserve-color) .uk-search-input,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-input,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-input,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-input,
.uk-card-primary.uk-card-body .uk-search-input,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-input,
.uk-card-secondary.uk-card-body .uk-search-input,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-input,
.uk-overlay-primary .uk-search-input,
.uk-offcanvas-bar .uk-search-input {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-search-input::placeholder,
.uk-section-primary:not(.uk-preserve-color) .uk-search-input::placeholder,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-input::placeholder,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-input::placeholder,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-input::placeholder,
.uk-card-primary.uk-card-body .uk-search-input::placeholder,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-input::placeholder,
.uk-card-secondary.uk-card-body .uk-search-input::placeholder,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-input::placeholder,
.uk-overlay-primary .uk-search-input::placeholder,
.uk-offcanvas-bar .uk-search-input::placeholder {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-search .uk-search-icon,
.uk-section-primary:not(.uk-preserve-color) .uk-search .uk-search-icon,
.uk-section-secondary:not(.uk-preserve-color) .uk-search .uk-search-icon,
.uk-tile-primary:not(.uk-preserve-color) .uk-search .uk-search-icon,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search .uk-search-icon,
.uk-card-primary.uk-card-body .uk-search .uk-search-icon,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search .uk-search-icon,
.uk-card-secondary.uk-card-body .uk-search .uk-search-icon,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search .uk-search-icon,
.uk-overlay-primary .uk-search .uk-search-icon,
.uk-offcanvas-bar .uk-search .uk-search-icon {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-search .uk-search-icon:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-search .uk-search-icon:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-search .uk-search-icon:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-search .uk-search-icon:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search .uk-search-icon:hover,
.uk-card-primary.uk-card-body .uk-search .uk-search-icon:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search .uk-search-icon:hover,
.uk-card-secondary.uk-card-body .uk-search .uk-search-icon:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search .uk-search-icon:hover,
.uk-overlay-primary .uk-search .uk-search-icon:hover,
.uk-offcanvas-bar .uk-search .uk-search-icon:hover {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-search-default .uk-search-input,
.uk-section-primary:not(.uk-preserve-color) .uk-search-default .uk-search-input,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-default .uk-search-input,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-default .uk-search-input,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-default .uk-search-input,
.uk-card-primary.uk-card-body .uk-search-default .uk-search-input,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-default .uk-search-input,
.uk-card-secondary.uk-card-body .uk-search-default .uk-search-input,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-default .uk-search-input,
.uk-overlay-primary .uk-search-default .uk-search-input,
.uk-offcanvas-bar .uk-search-default .uk-search-input {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-search-default .uk-search-input:focus,
.uk-section-primary:not(.uk-preserve-color) .uk-search-default .uk-search-input:focus,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-default .uk-search-input:focus,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-default .uk-search-input:focus,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-default .uk-search-input:focus,
.uk-card-primary.uk-card-body .uk-search-default .uk-search-input:focus,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-default .uk-search-input:focus,
.uk-card-secondary.uk-card-body .uk-search-default .uk-search-input:focus,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-default .uk-search-input:focus,
.uk-overlay-primary .uk-search-default .uk-search-input:focus,
.uk-offcanvas-bar .uk-search-default .uk-search-input:focus {
  background-color: rgba(0, 0, 0, 0.05);
}
.uk-light .uk-search-navbar .uk-search-input,
.uk-section-primary:not(.uk-preserve-color) .uk-search-navbar .uk-search-input,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-navbar .uk-search-input,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-navbar .uk-search-input,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-navbar .uk-search-input,
.uk-card-primary.uk-card-body .uk-search-navbar .uk-search-input,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-navbar .uk-search-input,
.uk-card-secondary.uk-card-body .uk-search-navbar .uk-search-input,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-navbar .uk-search-input,
.uk-overlay-primary .uk-search-navbar .uk-search-input,
.uk-offcanvas-bar .uk-search-navbar .uk-search-input {
  background-color: transparent;
}
.uk-light .uk-search-large .uk-search-input,
.uk-section-primary:not(.uk-preserve-color) .uk-search-large .uk-search-input,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-large .uk-search-input,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-large .uk-search-input,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-large .uk-search-input,
.uk-card-primary.uk-card-body .uk-search-large .uk-search-input,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-large .uk-search-input,
.uk-card-secondary.uk-card-body .uk-search-large .uk-search-input,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-large .uk-search-input,
.uk-overlay-primary .uk-search-large .uk-search-input,
.uk-offcanvas-bar .uk-search-large .uk-search-input {
  background-color: transparent;
}
.uk-light .uk-search-toggle,
.uk-section-primary:not(.uk-preserve-color) .uk-search-toggle,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-toggle,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-toggle,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-toggle,
.uk-card-primary.uk-card-body .uk-search-toggle,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-toggle,
.uk-card-secondary.uk-card-body .uk-search-toggle,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-toggle,
.uk-overlay-primary .uk-search-toggle,
.uk-offcanvas-bar .uk-search-toggle {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-search-toggle:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-search-toggle:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-search-toggle:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-search-toggle:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-search-toggle:hover,
.uk-card-primary.uk-card-body .uk-search-toggle:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-search-toggle:hover,
.uk-card-secondary.uk-card-body .uk-search-toggle:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-search-toggle:hover,
.uk-overlay-primary .uk-search-toggle:hover,
.uk-offcanvas-bar .uk-search-toggle:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-accordion-title,
.uk-section-primary:not(.uk-preserve-color) .uk-accordion-title,
.uk-section-secondary:not(.uk-preserve-color) .uk-accordion-title,
.uk-tile-primary:not(.uk-preserve-color) .uk-accordion-title,
.uk-tile-secondary:not(.uk-preserve-color) .uk-accordion-title,
.uk-card-primary.uk-card-body .uk-accordion-title,
.uk-card-primary > :not([class*='uk-card-media']) .uk-accordion-title,
.uk-card-secondary.uk-card-body .uk-accordion-title,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-accordion-title,
.uk-overlay-primary .uk-accordion-title,
.uk-offcanvas-bar .uk-accordion-title {
  color: #fff;
}
.uk-light .uk-accordion-title:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-accordion-title:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-accordion-title:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-accordion-title:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-accordion-title:hover,
.uk-card-primary.uk-card-body .uk-accordion-title:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-accordion-title:hover,
.uk-card-secondary.uk-card-body .uk-accordion-title:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-accordion-title:hover,
.uk-overlay-primary .uk-accordion-title:hover,
.uk-offcanvas-bar .uk-accordion-title:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-grid-divider > :not(.uk-first-column)::before,
.uk-section-primary:not(.uk-preserve-color) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-card-primary.uk-card-body .uk-grid-divider > :not(.uk-first-column)::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-card-secondary.uk-card-body .uk-grid-divider > :not(.uk-first-column)::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-grid-divider > :not(.uk-first-column)::before,
.uk-overlay-primary .uk-grid-divider > :not(.uk-first-column)::before,
.uk-offcanvas-bar .uk-grid-divider > :not(.uk-first-column)::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-section-primary:not(.uk-preserve-color) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-card-primary.uk-card-body .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-card-secondary.uk-card-body .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-overlay-primary .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before,
.uk-offcanvas-bar .uk-grid-divider.uk-grid-stack > .uk-grid-margin::before {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-nav-default > li > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default > li > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default > li > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default > li > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default > li > a,
.uk-card-primary.uk-card-body .uk-nav-default > li > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default > li > a,
.uk-card-secondary.uk-card-body .uk-nav-default > li > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default > li > a,
.uk-overlay-primary .uk-nav-default > li > a,
.uk-offcanvas-bar .uk-nav-default > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-default > li > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default > li > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default > li > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default > li > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default > li > a:hover,
.uk-card-primary.uk-card-body .uk-nav-default > li > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default > li > a:hover,
.uk-card-secondary.uk-card-body .uk-nav-default > li > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default > li > a:hover,
.uk-overlay-primary .uk-nav-default > li > a:hover,
.uk-offcanvas-bar .uk-nav-default > li > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-default > li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default > li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default > li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default > li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default > li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-default > li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default > li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-default > li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default > li.uk-active > a,
.uk-overlay-primary .uk-nav-default > li.uk-active > a,
.uk-offcanvas-bar .uk-nav-default > li.uk-active > a {
  color: #fff;
}
.uk-light .uk-nav-default .uk-nav-header,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-header,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-header,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-header,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-header,
.uk-card-primary.uk-card-body .uk-nav-default .uk-nav-header,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-header,
.uk-card-secondary.uk-card-body .uk-nav-default .uk-nav-header,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-header,
.uk-overlay-primary .uk-nav-default .uk-nav-header,
.uk-offcanvas-bar .uk-nav-default .uk-nav-header {
  color: #fff;
}
.uk-light .uk-nav-default .uk-nav-divider,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-divider,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-divider,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-divider,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-divider,
.uk-card-primary.uk-card-body .uk-nav-default .uk-nav-divider,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-divider,
.uk-card-secondary.uk-card-body .uk-nav-default .uk-nav-divider,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-divider,
.uk-overlay-primary .uk-nav-default .uk-nav-divider,
.uk-offcanvas-bar .uk-nav-default .uk-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-nav-default .uk-nav-sub a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a,
.uk-card-primary.uk-card-body .uk-nav-default .uk-nav-sub a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub a,
.uk-card-secondary.uk-card-body .uk-nav-default .uk-nav-sub a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub a,
.uk-overlay-primary .uk-nav-default .uk-nav-sub a,
.uk-offcanvas-bar .uk-nav-default .uk-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-default .uk-nav-sub a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub a:hover,
.uk-card-primary.uk-card-body .uk-nav-default .uk-nav-sub a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub a:hover,
.uk-card-secondary.uk-card-body .uk-nav-default .uk-nav-sub a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub a:hover,
.uk-overlay-primary .uk-nav-default .uk-nav-sub a:hover,
.uk-offcanvas-bar .uk-nav-default .uk-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-overlay-primary .uk-nav-default .uk-nav-sub li.uk-active > a,
.uk-offcanvas-bar .uk-nav-default .uk-nav-sub li.uk-active > a {
  color: #fff;
}
.uk-light .uk-nav-primary > li > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary > li > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary > li > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary > li > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary > li > a,
.uk-card-primary.uk-card-body .uk-nav-primary > li > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary > li > a,
.uk-card-secondary.uk-card-body .uk-nav-primary > li > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary > li > a,
.uk-overlay-primary .uk-nav-primary > li > a,
.uk-offcanvas-bar .uk-nav-primary > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-primary > li > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary > li > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary > li > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary > li > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary > li > a:hover,
.uk-card-primary.uk-card-body .uk-nav-primary > li > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary > li > a:hover,
.uk-card-secondary.uk-card-body .uk-nav-primary > li > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary > li > a:hover,
.uk-overlay-primary .uk-nav-primary > li > a:hover,
.uk-offcanvas-bar .uk-nav-primary > li > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-primary > li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary > li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary > li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary > li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary > li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-primary > li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary > li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-primary > li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary > li.uk-active > a,
.uk-overlay-primary .uk-nav-primary > li.uk-active > a,
.uk-offcanvas-bar .uk-nav-primary > li.uk-active > a {
  color: #fff;
}
.uk-light .uk-nav-primary .uk-nav-header,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-header,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-header,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-header,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-header,
.uk-card-primary.uk-card-body .uk-nav-primary .uk-nav-header,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-header,
.uk-card-secondary.uk-card-body .uk-nav-primary .uk-nav-header,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-header,
.uk-overlay-primary .uk-nav-primary .uk-nav-header,
.uk-offcanvas-bar .uk-nav-primary .uk-nav-header {
  color: #fff;
}
.uk-light .uk-nav-primary .uk-nav-divider,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-divider,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-divider,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-divider,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-divider,
.uk-card-primary.uk-card-body .uk-nav-primary .uk-nav-divider,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-divider,
.uk-card-secondary.uk-card-body .uk-nav-primary .uk-nav-divider,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-divider,
.uk-overlay-primary .uk-nav-primary .uk-nav-divider,
.uk-offcanvas-bar .uk-nav-primary .uk-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-nav-primary .uk-nav-sub a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a,
.uk-card-primary.uk-card-body .uk-nav-primary .uk-nav-sub a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub a,
.uk-card-secondary.uk-card-body .uk-nav-primary .uk-nav-sub a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub a,
.uk-overlay-primary .uk-nav-primary .uk-nav-sub a,
.uk-offcanvas-bar .uk-nav-primary .uk-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-primary .uk-nav-sub a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub a:hover,
.uk-card-primary.uk-card-body .uk-nav-primary .uk-nav-sub a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub a:hover,
.uk-card-secondary.uk-card-body .uk-nav-primary .uk-nav-sub a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub a:hover,
.uk-overlay-primary .uk-nav-primary .uk-nav-sub a:hover,
.uk-offcanvas-bar .uk-nav-primary .uk-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-overlay-primary .uk-nav-primary .uk-nav-sub li.uk-active > a,
.uk-offcanvas-bar .uk-nav-primary .uk-nav-sub li.uk-active > a {
  color: #fff;
}
.uk-light .uk-nav-secondary > li > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a,
.uk-card-primary.uk-card-body .uk-nav-secondary > li > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a,
.uk-card-secondary.uk-card-body .uk-nav-secondary > li > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a,
.uk-overlay-primary .uk-nav-secondary > li > a,
.uk-offcanvas-bar .uk-nav-secondary > li > a {
  color: #fff;
}
.uk-light .uk-nav-secondary > li > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover,
.uk-card-primary.uk-card-body .uk-nav-secondary > li > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a:hover,
.uk-card-secondary.uk-card-body .uk-nav-secondary > li > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a:hover,
.uk-overlay-primary .uk-nav-secondary > li > a:hover,
.uk-offcanvas-bar .uk-nav-secondary > li > a:hover {
  color: #fff;
  background-color: rgba(255, 255, 255, 0.1);
}
.uk-light .uk-nav-secondary > li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-secondary > li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary > li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-secondary > li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary > li.uk-active > a,
.uk-overlay-primary .uk-nav-secondary > li.uk-active > a,
.uk-offcanvas-bar .uk-nav-secondary > li.uk-active > a {
  color: #fff;
  background-color: rgba(255, 255, 255, 0.1);
}
.uk-light .uk-nav-secondary .uk-nav-subtitle,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-subtitle,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-subtitle,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-subtitle,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-subtitle,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-subtitle,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-subtitle,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-subtitle,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-subtitle,
.uk-overlay-primary .uk-nav-secondary .uk-nav-subtitle,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-subtitle {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-card-primary.uk-card-body .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-card-secondary.uk-card-body .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-overlay-primary .uk-nav-secondary > li > a:hover .uk-nav-subtitle,
.uk-offcanvas-bar .uk-nav-secondary > li > a:hover .uk-nav-subtitle {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-card-primary.uk-card-body .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-card-secondary.uk-card-body .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-overlay-primary .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle,
.uk-offcanvas-bar .uk-nav-secondary > li.uk-active > a .uk-nav-subtitle {
  color: #fff;
}
.uk-light .uk-nav-secondary .uk-nav-header,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-header,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-header,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-header,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-header,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-header,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-header,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-header,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-header,
.uk-overlay-primary .uk-nav-secondary .uk-nav-header,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-header {
  color: #fff;
}
.uk-light .uk-nav-secondary .uk-nav-divider,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-divider,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-divider,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-divider,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-divider,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-divider,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-divider,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-divider,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-divider,
.uk-overlay-primary .uk-nav-secondary .uk-nav-divider,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-divider {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-nav-secondary .uk-nav-sub a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-sub a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub a,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-sub a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub a,
.uk-overlay-primary .uk-nav-secondary .uk-nav-sub a,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-sub a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-nav-secondary .uk-nav-sub a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-sub a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-sub a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub a:hover,
.uk-overlay-primary .uk-nav-secondary .uk-nav-sub a:hover,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-sub a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-card-primary.uk-card-body .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-overlay-primary .uk-nav-secondary .uk-nav-sub li.uk-active > a,
.uk-offcanvas-bar .uk-nav-secondary .uk-nav-sub li.uk-active > a {
  color: #fff;
}
.uk-light .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-section-primary:not(.uk-preserve-color) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-section-secondary:not(.uk-preserve-color) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-tile-primary:not(.uk-preserve-color) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-tile-secondary:not(.uk-preserve-color) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-card-primary.uk-card-body .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-card-primary > :not([class*='uk-card-media']) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-card-secondary.uk-card-body .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-overlay-primary .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider),
.uk-offcanvas-bar .uk-nav.uk-nav-divider > :not(.uk-nav-divider) + :not(.uk-nav-header, .uk-nav-divider) {
  border-top-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-navbar-nav > li > a,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a,
.uk-card-primary.uk-card-body .uk-navbar-nav > li > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a,
.uk-card-secondary.uk-card-body .uk-navbar-nav > li > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a,
.uk-overlay-primary .uk-navbar-nav > li > a,
.uk-offcanvas-bar .uk-navbar-nav > li > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-navbar-nav > li:hover > a,
.uk-light .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-nav > li:hover > a,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-nav > li:hover > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-nav > li:hover > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-nav > li:hover > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-card-primary.uk-card-body .uk-navbar-nav > li:hover > a,
.uk-card-primary.uk-card-body .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-nav > li:hover > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-card-secondary.uk-card-body .uk-navbar-nav > li:hover > a,
.uk-card-secondary.uk-card-body .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-nav > li:hover > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-overlay-primary .uk-navbar-nav > li:hover > a,
.uk-overlay-primary .uk-navbar-nav > li > a[aria-expanded="true"],
.uk-offcanvas-bar .uk-navbar-nav > li:hover > a,
.uk-offcanvas-bar .uk-navbar-nav > li > a[aria-expanded="true"] {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-navbar-nav > li > a:active,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-nav > li > a:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-nav > li > a:active,
.uk-card-primary.uk-card-body .uk-navbar-nav > li > a:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a:active,
.uk-card-secondary.uk-card-body .uk-navbar-nav > li > a:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-nav > li > a:active,
.uk-overlay-primary .uk-navbar-nav > li > a:active,
.uk-offcanvas-bar .uk-navbar-nav > li > a:active {
  color: #fff;
}
.uk-light .uk-navbar-nav > li.uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-nav > li.uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-nav > li.uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-nav > li.uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-nav > li.uk-active > a,
.uk-card-primary.uk-card-body .uk-navbar-nav > li.uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-nav > li.uk-active > a,
.uk-card-secondary.uk-card-body .uk-navbar-nav > li.uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-nav > li.uk-active > a,
.uk-overlay-primary .uk-navbar-nav > li.uk-active > a,
.uk-offcanvas-bar .uk-navbar-nav > li.uk-active > a {
  color: #fff;
}
.uk-light .uk-navbar-item,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-item,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-item,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-item,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-item,
.uk-card-primary.uk-card-body .uk-navbar-item,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-item,
.uk-card-secondary.uk-card-body .uk-navbar-item,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-item,
.uk-overlay-primary .uk-navbar-item,
.uk-offcanvas-bar .uk-navbar-item {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-navbar-toggle,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-toggle,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-toggle,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-toggle,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-toggle,
.uk-card-primary.uk-card-body .uk-navbar-toggle,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-toggle,
.uk-card-secondary.uk-card-body .uk-navbar-toggle,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-toggle,
.uk-overlay-primary .uk-navbar-toggle,
.uk-offcanvas-bar .uk-navbar-toggle {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-navbar-toggle:hover,
.uk-light .uk-navbar-toggle[aria-expanded="true"],
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-toggle:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-navbar-toggle[aria-expanded="true"],
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-toggle:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-navbar-toggle[aria-expanded="true"],
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-toggle:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-navbar-toggle[aria-expanded="true"],
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-toggle:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-navbar-toggle[aria-expanded="true"],
.uk-card-primary.uk-card-body .uk-navbar-toggle:hover,
.uk-card-primary.uk-card-body .uk-navbar-toggle[aria-expanded="true"],
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-toggle:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-navbar-toggle[aria-expanded="true"],
.uk-card-secondary.uk-card-body .uk-navbar-toggle:hover,
.uk-card-secondary.uk-card-body .uk-navbar-toggle[aria-expanded="true"],
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-toggle:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-navbar-toggle[aria-expanded="true"],
.uk-overlay-primary .uk-navbar-toggle:hover,
.uk-overlay-primary .uk-navbar-toggle[aria-expanded="true"],
.uk-offcanvas-bar .uk-navbar-toggle:hover,
.uk-offcanvas-bar .uk-navbar-toggle[aria-expanded="true"] {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-subnav > * > :first-child,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav > * > :first-child,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav > * > :first-child,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav > * > :first-child,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav > * > :first-child,
.uk-card-primary.uk-card-body .uk-subnav > * > :first-child,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav > * > :first-child,
.uk-card-secondary.uk-card-body .uk-subnav > * > :first-child,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav > * > :first-child,
.uk-overlay-primary .uk-subnav > * > :first-child,
.uk-offcanvas-bar .uk-subnav > * > :first-child {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-subnav > * > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav > * > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav > * > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav > * > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav > * > a:hover,
.uk-card-primary.uk-card-body .uk-subnav > * > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav > * > a:hover,
.uk-card-secondary.uk-card-body .uk-subnav > * > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav > * > a:hover,
.uk-overlay-primary .uk-subnav > * > a:hover,
.uk-offcanvas-bar .uk-subnav > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-subnav > .uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav > .uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav > .uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav > .uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav > .uk-active > a,
.uk-card-primary.uk-card-body .uk-subnav > .uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav > .uk-active > a,
.uk-card-secondary.uk-card-body .uk-subnav > .uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav > .uk-active > a,
.uk-overlay-primary .uk-subnav > .uk-active > a,
.uk-offcanvas-bar .uk-subnav > .uk-active > a {
  color: #fff;
}
.uk-light .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-primary.uk-card-body .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-secondary.uk-card-body .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-overlay-primary .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before,
.uk-offcanvas-bar .uk-subnav-divider > :nth-child(n+2):not(.uk-first-column)::before {
  border-left-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-subnav-pill > * > :first-child,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav-pill > * > :first-child,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > :first-child,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav-pill > * > :first-child,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > :first-child,
.uk-card-primary.uk-card-body .uk-subnav-pill > * > :first-child,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav-pill > * > :first-child,
.uk-card-secondary.uk-card-body .uk-subnav-pill > * > :first-child,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav-pill > * > :first-child,
.uk-overlay-primary .uk-subnav-pill > * > :first-child,
.uk-offcanvas-bar .uk-subnav-pill > * > :first-child {
  background-color: transparent;
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-subnav-pill > * > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav-pill > * > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav-pill > * > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > a:hover,
.uk-card-primary.uk-card-body .uk-subnav-pill > * > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav-pill > * > a:hover,
.uk-card-secondary.uk-card-body .uk-subnav-pill > * > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav-pill > * > a:hover,
.uk-overlay-primary .uk-subnav-pill > * > a:hover,
.uk-offcanvas-bar .uk-subnav-pill > * > a:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-subnav-pill > * > a:active,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav-pill > * > a:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > a:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav-pill > * > a:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav-pill > * > a:active,
.uk-card-primary.uk-card-body .uk-subnav-pill > * > a:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav-pill > * > a:active,
.uk-card-secondary.uk-card-body .uk-subnav-pill > * > a:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav-pill > * > a:active,
.uk-overlay-primary .uk-subnav-pill > * > a:active,
.uk-offcanvas-bar .uk-subnav-pill > * > a:active {
  background-color: rgba(255, 255, 255, 0.1);
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-subnav-pill > .uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav-pill > .uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav-pill > .uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav-pill > .uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav-pill > .uk-active > a,
.uk-card-primary.uk-card-body .uk-subnav-pill > .uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav-pill > .uk-active > a,
.uk-card-secondary.uk-card-body .uk-subnav-pill > .uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav-pill > .uk-active > a,
.uk-overlay-primary .uk-subnav-pill > .uk-active > a,
.uk-offcanvas-bar .uk-subnav-pill > .uk-active > a {
  background-color: #fff;
  color: #666;
}
.uk-light .uk-subnav > .uk-disabled > a,
.uk-section-primary:not(.uk-preserve-color) .uk-subnav > .uk-disabled > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-subnav > .uk-disabled > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-subnav > .uk-disabled > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-subnav > .uk-disabled > a,
.uk-card-primary.uk-card-body .uk-subnav > .uk-disabled > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-subnav > .uk-disabled > a,
.uk-card-secondary.uk-card-body .uk-subnav > .uk-disabled > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-subnav > .uk-disabled > a,
.uk-overlay-primary .uk-subnav > .uk-disabled > a,
.uk-offcanvas-bar .uk-subnav > .uk-disabled > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-breadcrumb > * > *,
.uk-section-primary:not(.uk-preserve-color) .uk-breadcrumb > * > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-breadcrumb > * > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-breadcrumb > * > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-breadcrumb > * > *,
.uk-card-primary.uk-card-body .uk-breadcrumb > * > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-breadcrumb > * > *,
.uk-card-secondary.uk-card-body .uk-breadcrumb > * > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-breadcrumb > * > *,
.uk-overlay-primary .uk-breadcrumb > * > *,
.uk-offcanvas-bar .uk-breadcrumb > * > * {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-breadcrumb > * > :hover,
.uk-section-primary:not(.uk-preserve-color) .uk-breadcrumb > * > :hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-breadcrumb > * > :hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-breadcrumb > * > :hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-breadcrumb > * > :hover,
.uk-card-primary.uk-card-body .uk-breadcrumb > * > :hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-breadcrumb > * > :hover,
.uk-card-secondary.uk-card-body .uk-breadcrumb > * > :hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-breadcrumb > * > :hover,
.uk-overlay-primary .uk-breadcrumb > * > :hover,
.uk-offcanvas-bar .uk-breadcrumb > * > :hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-breadcrumb > :last-child > *,
.uk-section-primary:not(.uk-preserve-color) .uk-breadcrumb > :last-child > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-breadcrumb > :last-child > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-breadcrumb > :last-child > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-breadcrumb > :last-child > *,
.uk-card-primary.uk-card-body .uk-breadcrumb > :last-child > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-breadcrumb > :last-child > *,
.uk-card-secondary.uk-card-body .uk-breadcrumb > :last-child > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-breadcrumb > :last-child > *,
.uk-overlay-primary .uk-breadcrumb > :last-child > *,
.uk-offcanvas-bar .uk-breadcrumb > :last-child > * {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-section-primary:not(.uk-preserve-color) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-primary.uk-card-body .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-secondary.uk-card-body .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-overlay-primary .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before,
.uk-offcanvas-bar .uk-breadcrumb > :nth-child(n+2):not(.uk-first-column)::before {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-pagination > * > *,
.uk-section-primary:not(.uk-preserve-color) .uk-pagination > * > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-pagination > * > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-pagination > * > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-pagination > * > *,
.uk-card-primary.uk-card-body .uk-pagination > * > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-pagination > * > *,
.uk-card-secondary.uk-card-body .uk-pagination > * > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-pagination > * > *,
.uk-overlay-primary .uk-pagination > * > *,
.uk-offcanvas-bar .uk-pagination > * > * {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-pagination > * > :hover,
.uk-section-primary:not(.uk-preserve-color) .uk-pagination > * > :hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-pagination > * > :hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-pagination > * > :hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-pagination > * > :hover,
.uk-card-primary.uk-card-body .uk-pagination > * > :hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-pagination > * > :hover,
.uk-card-secondary.uk-card-body .uk-pagination > * > :hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-pagination > * > :hover,
.uk-overlay-primary .uk-pagination > * > :hover,
.uk-offcanvas-bar .uk-pagination > * > :hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-pagination > .uk-active > *,
.uk-section-primary:not(.uk-preserve-color) .uk-pagination > .uk-active > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-pagination > .uk-active > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-pagination > .uk-active > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-pagination > .uk-active > *,
.uk-card-primary.uk-card-body .uk-pagination > .uk-active > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-pagination > .uk-active > *,
.uk-card-secondary.uk-card-body .uk-pagination > .uk-active > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-pagination > .uk-active > *,
.uk-overlay-primary .uk-pagination > .uk-active > *,
.uk-offcanvas-bar .uk-pagination > .uk-active > * {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-pagination > .uk-disabled > *,
.uk-section-primary:not(.uk-preserve-color) .uk-pagination > .uk-disabled > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-pagination > .uk-disabled > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-pagination > .uk-disabled > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-pagination > .uk-disabled > *,
.uk-card-primary.uk-card-body .uk-pagination > .uk-disabled > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-pagination > .uk-disabled > *,
.uk-card-secondary.uk-card-body .uk-pagination > .uk-disabled > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-pagination > .uk-disabled > *,
.uk-overlay-primary .uk-pagination > .uk-disabled > *,
.uk-offcanvas-bar .uk-pagination > .uk-disabled > * {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-tab::before,
.uk-section-primary:not(.uk-preserve-color) .uk-tab::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-tab::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-tab::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-tab::before,
.uk-card-primary.uk-card-body .uk-tab::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-tab::before,
.uk-card-secondary.uk-card-body .uk-tab::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-tab::before,
.uk-overlay-primary .uk-tab::before,
.uk-offcanvas-bar .uk-tab::before {
  border-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-tab > * > a,
.uk-section-primary:not(.uk-preserve-color) .uk-tab > * > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-tab > * > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-tab > * > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-tab > * > a,
.uk-card-primary.uk-card-body .uk-tab > * > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-tab > * > a,
.uk-card-secondary.uk-card-body .uk-tab > * > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-tab > * > a,
.uk-overlay-primary .uk-tab > * > a,
.uk-offcanvas-bar .uk-tab > * > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-tab > * > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-tab > * > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-tab > * > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-tab > * > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-tab > * > a:hover,
.uk-card-primary.uk-card-body .uk-tab > * > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-tab > * > a:hover,
.uk-card-secondary.uk-card-body .uk-tab > * > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-tab > * > a:hover,
.uk-overlay-primary .uk-tab > * > a:hover,
.uk-offcanvas-bar .uk-tab > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-tab > .uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-tab > .uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-tab > .uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-tab > .uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-tab > .uk-active > a,
.uk-card-primary.uk-card-body .uk-tab > .uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-tab > .uk-active > a,
.uk-card-secondary.uk-card-body .uk-tab > .uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-tab > .uk-active > a,
.uk-overlay-primary .uk-tab > .uk-active > a,
.uk-offcanvas-bar .uk-tab > .uk-active > a {
  color: #fff;
  border-color: #fff;
}
.uk-light .uk-tab > .uk-disabled > a,
.uk-section-primary:not(.uk-preserve-color) .uk-tab > .uk-disabled > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-tab > .uk-disabled > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-tab > .uk-disabled > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-tab > .uk-disabled > a,
.uk-card-primary.uk-card-body .uk-tab > .uk-disabled > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-tab > .uk-disabled > a,
.uk-card-secondary.uk-card-body .uk-tab > .uk-disabled > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-tab > .uk-disabled > a,
.uk-overlay-primary .uk-tab > .uk-disabled > a,
.uk-offcanvas-bar .uk-tab > .uk-disabled > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-slidenav,
.uk-section-primary:not(.uk-preserve-color) .uk-slidenav,
.uk-section-secondary:not(.uk-preserve-color) .uk-slidenav,
.uk-tile-primary:not(.uk-preserve-color) .uk-slidenav,
.uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav,
.uk-card-primary.uk-card-body .uk-slidenav,
.uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav,
.uk-card-secondary.uk-card-body .uk-slidenav,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav,
.uk-overlay-primary .uk-slidenav,
.uk-offcanvas-bar .uk-slidenav {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-slidenav:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-slidenav:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-slidenav:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-slidenav:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav:hover,
.uk-card-primary.uk-card-body .uk-slidenav:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav:hover,
.uk-card-secondary.uk-card-body .uk-slidenav:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav:hover,
.uk-overlay-primary .uk-slidenav:hover,
.uk-offcanvas-bar .uk-slidenav:hover {
  color: rgba(255, 255, 255, 0.95);
}
.uk-light .uk-slidenav:active,
.uk-section-primary:not(.uk-preserve-color) .uk-slidenav:active,
.uk-section-secondary:not(.uk-preserve-color) .uk-slidenav:active,
.uk-tile-primary:not(.uk-preserve-color) .uk-slidenav:active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-slidenav:active,
.uk-card-primary.uk-card-body .uk-slidenav:active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-slidenav:active,
.uk-card-secondary.uk-card-body .uk-slidenav:active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-slidenav:active,
.uk-overlay-primary .uk-slidenav:active,
.uk-offcanvas-bar .uk-slidenav:active {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-dotnav > * > *,
.uk-section-primary:not(.uk-preserve-color) .uk-dotnav > * > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-dotnav > * > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-dotnav > * > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-dotnav > * > *,
.uk-card-primary.uk-card-body .uk-dotnav > * > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-dotnav > * > *,
.uk-card-secondary.uk-card-body .uk-dotnav > * > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-dotnav > * > *,
.uk-overlay-primary .uk-dotnav > * > *,
.uk-offcanvas-bar .uk-dotnav > * > * {
  background-color: transparent;
  border-color: rgba(255, 255, 255, 0.9);
}
.uk-light .uk-dotnav > * > :hover,
.uk-section-primary:not(.uk-preserve-color) .uk-dotnav > * > :hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-dotnav > * > :hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-dotnav > * > :hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-dotnav > * > :hover,
.uk-card-primary.uk-card-body .uk-dotnav > * > :hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-dotnav > * > :hover,
.uk-card-secondary.uk-card-body .uk-dotnav > * > :hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-dotnav > * > :hover,
.uk-overlay-primary .uk-dotnav > * > :hover,
.uk-offcanvas-bar .uk-dotnav > * > :hover {
  background-color: rgba(255, 255, 255, 0.9);
  border-color: transparent;
}
.uk-light .uk-dotnav > * > :active,
.uk-section-primary:not(.uk-preserve-color) .uk-dotnav > * > :active,
.uk-section-secondary:not(.uk-preserve-color) .uk-dotnav > * > :active,
.uk-tile-primary:not(.uk-preserve-color) .uk-dotnav > * > :active,
.uk-tile-secondary:not(.uk-preserve-color) .uk-dotnav > * > :active,
.uk-card-primary.uk-card-body .uk-dotnav > * > :active,
.uk-card-primary > :not([class*='uk-card-media']) .uk-dotnav > * > :active,
.uk-card-secondary.uk-card-body .uk-dotnav > * > :active,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-dotnav > * > :active,
.uk-overlay-primary .uk-dotnav > * > :active,
.uk-offcanvas-bar .uk-dotnav > * > :active {
  background-color: rgba(255, 255, 255, 0.5);
  border-color: transparent;
}
.uk-light .uk-dotnav > .uk-active > *,
.uk-section-primary:not(.uk-preserve-color) .uk-dotnav > .uk-active > *,
.uk-section-secondary:not(.uk-preserve-color) .uk-dotnav > .uk-active > *,
.uk-tile-primary:not(.uk-preserve-color) .uk-dotnav > .uk-active > *,
.uk-tile-secondary:not(.uk-preserve-color) .uk-dotnav > .uk-active > *,
.uk-card-primary.uk-card-body .uk-dotnav > .uk-active > *,
.uk-card-primary > :not([class*='uk-card-media']) .uk-dotnav > .uk-active > *,
.uk-card-secondary.uk-card-body .uk-dotnav > .uk-active > *,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-dotnav > .uk-active > *,
.uk-overlay-primary .uk-dotnav > .uk-active > *,
.uk-offcanvas-bar .uk-dotnav > .uk-active > * {
  background-color: rgba(255, 255, 255, 0.9);
  border-color: transparent;
}
.uk-light .uk-iconnav > * > a,
.uk-section-primary:not(.uk-preserve-color) .uk-iconnav > * > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-iconnav > * > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-iconnav > * > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-iconnav > * > a,
.uk-card-primary.uk-card-body .uk-iconnav > * > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-iconnav > * > a,
.uk-card-secondary.uk-card-body .uk-iconnav > * > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-iconnav > * > a,
.uk-overlay-primary .uk-iconnav > * > a,
.uk-offcanvas-bar .uk-iconnav > * > a {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-iconnav > * > a:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-iconnav > * > a:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-iconnav > * > a:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-iconnav > * > a:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-iconnav > * > a:hover,
.uk-card-primary.uk-card-body .uk-iconnav > * > a:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-iconnav > * > a:hover,
.uk-card-secondary.uk-card-body .uk-iconnav > * > a:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-iconnav > * > a:hover,
.uk-overlay-primary .uk-iconnav > * > a:hover,
.uk-offcanvas-bar .uk-iconnav > * > a:hover {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-iconnav > .uk-active > a,
.uk-section-primary:not(.uk-preserve-color) .uk-iconnav > .uk-active > a,
.uk-section-secondary:not(.uk-preserve-color) .uk-iconnav > .uk-active > a,
.uk-tile-primary:not(.uk-preserve-color) .uk-iconnav > .uk-active > a,
.uk-tile-secondary:not(.uk-preserve-color) .uk-iconnav > .uk-active > a,
.uk-card-primary.uk-card-body .uk-iconnav > .uk-active > a,
.uk-card-primary > :not([class*='uk-card-media']) .uk-iconnav > .uk-active > a,
.uk-card-secondary.uk-card-body .uk-iconnav > .uk-active > a,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-iconnav > .uk-active > a,
.uk-overlay-primary .uk-iconnav > .uk-active > a,
.uk-offcanvas-bar .uk-iconnav > .uk-active > a {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-text-lead,
.uk-section-primary:not(.uk-preserve-color) .uk-text-lead,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-lead,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-lead,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-lead,
.uk-card-primary.uk-card-body .uk-text-lead,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-lead,
.uk-card-secondary.uk-card-body .uk-text-lead,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-lead,
.uk-overlay-primary .uk-text-lead,
.uk-offcanvas-bar .uk-text-lead {
  color: rgba(255, 255, 255, 0.7);
}
.uk-light .uk-text-meta,
.uk-section-primary:not(.uk-preserve-color) .uk-text-meta,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-meta,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-meta,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-meta,
.uk-card-primary.uk-card-body .uk-text-meta,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-meta,
.uk-card-secondary.uk-card-body .uk-text-meta,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-meta,
.uk-overlay-primary .uk-text-meta,
.uk-offcanvas-bar .uk-text-meta {
  color: rgba(255, 255, 255, 0.5);
}
.uk-light .uk-text-muted,
.uk-section-primary:not(.uk-preserve-color) .uk-text-muted,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-muted,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-muted,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-muted,
.uk-card-primary.uk-card-body .uk-text-muted,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-muted,
.uk-card-secondary.uk-card-body .uk-text-muted,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-muted,
.uk-overlay-primary .uk-text-muted,
.uk-offcanvas-bar .uk-text-muted {
  color: rgba(255, 255, 255, 0.5) !important;
}
.uk-light .uk-text-emphasis,
.uk-section-primary:not(.uk-preserve-color) .uk-text-emphasis,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-emphasis,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-emphasis,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-emphasis,
.uk-card-primary.uk-card-body .uk-text-emphasis,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-emphasis,
.uk-card-secondary.uk-card-body .uk-text-emphasis,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-emphasis,
.uk-overlay-primary .uk-text-emphasis,
.uk-offcanvas-bar .uk-text-emphasis {
  color: #fff !important;
}
.uk-light .uk-text-primary,
.uk-section-primary:not(.uk-preserve-color) .uk-text-primary,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-primary,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-primary,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-primary,
.uk-card-primary.uk-card-body .uk-text-primary,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-primary,
.uk-card-secondary.uk-card-body .uk-text-primary,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-primary,
.uk-overlay-primary .uk-text-primary,
.uk-offcanvas-bar .uk-text-primary {
  color: #fff !important;
}
.uk-light .uk-text-secondary,
.uk-section-primary:not(.uk-preserve-color) .uk-text-secondary,
.uk-section-secondary:not(.uk-preserve-color) .uk-text-secondary,
.uk-tile-primary:not(.uk-preserve-color) .uk-text-secondary,
.uk-tile-secondary:not(.uk-preserve-color) .uk-text-secondary,
.uk-card-primary.uk-card-body .uk-text-secondary,
.uk-card-primary > :not([class*='uk-card-media']) .uk-text-secondary,
.uk-card-secondary.uk-card-body .uk-text-secondary,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-text-secondary,
.uk-overlay-primary .uk-text-secondary,
.uk-offcanvas-bar .uk-text-secondary {
  color: #fff !important;
}
.uk-light .uk-column-divider,
.uk-section-primary:not(.uk-preserve-color) .uk-column-divider,
.uk-section-secondary:not(.uk-preserve-color) .uk-column-divider,
.uk-tile-primary:not(.uk-preserve-color) .uk-column-divider,
.uk-tile-secondary:not(.uk-preserve-color) .uk-column-divider,
.uk-card-primary.uk-card-body .uk-column-divider,
.uk-card-primary > :not([class*='uk-card-media']) .uk-column-divider,
.uk-card-secondary.uk-card-body .uk-column-divider,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-column-divider,
.uk-overlay-primary .uk-column-divider,
.uk-offcanvas-bar .uk-column-divider {
  column-rule-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-logo,
.uk-section-primary:not(.uk-preserve-color) .uk-logo,
.uk-section-secondary:not(.uk-preserve-color) .uk-logo,
.uk-tile-primary:not(.uk-preserve-color) .uk-logo,
.uk-tile-secondary:not(.uk-preserve-color) .uk-logo,
.uk-card-primary.uk-card-body .uk-logo,
.uk-card-primary > :not([class*='uk-card-media']) .uk-logo,
.uk-card-secondary.uk-card-body .uk-logo,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-logo,
.uk-overlay-primary .uk-logo,
.uk-offcanvas-bar .uk-logo {
  color: #fff;
}
.uk-light .uk-logo:hover,
.uk-section-primary:not(.uk-preserve-color) .uk-logo:hover,
.uk-section-secondary:not(.uk-preserve-color) .uk-logo:hover,
.uk-tile-primary:not(.uk-preserve-color) .uk-logo:hover,
.uk-tile-secondary:not(.uk-preserve-color) .uk-logo:hover,
.uk-card-primary.uk-card-body .uk-logo:hover,
.uk-card-primary > :not([class*='uk-card-media']) .uk-logo:hover,
.uk-card-secondary.uk-card-body .uk-logo:hover,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-logo:hover,
.uk-overlay-primary .uk-logo:hover,
.uk-offcanvas-bar .uk-logo:hover {
  color: #fff;
}
.uk-light .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-light .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-section-primary:not(.uk-preserve-color) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-section-primary:not(.uk-preserve-color) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-section-secondary:not(.uk-preserve-color) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-section-secondary:not(.uk-preserve-color) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-tile-primary:not(.uk-preserve-color) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-tile-primary:not(.uk-preserve-color) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-tile-secondary:not(.uk-preserve-color) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-tile-secondary:not(.uk-preserve-color) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-card-primary.uk-card-body .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-card-primary.uk-card-body .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-card-primary > :not([class*='uk-card-media']) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-card-primary > :not([class*='uk-card-media']) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-card-secondary.uk-card-body .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-card-secondary.uk-card-body .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-card-secondary > :not([class*='uk-card-media']) .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-overlay-primary .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-overlay-primary .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type),
.uk-offcanvas-bar .uk-logo > picture:not(:only-of-type) > :not(.uk-logo-inverse),
.uk-offcanvas-bar .uk-logo > :not(picture):not(.uk-logo-inverse):not(:only-of-type) {
  display: none;
}
.uk-light .uk-logo-inverse,
.uk-section-primary:not(.uk-preserve-color) .uk-logo-inverse,
.uk-section-secondary:not(.uk-preserve-color) .uk-logo-inverse,
.uk-tile-primary:not(.uk-preserve-color) .uk-logo-inverse,
.uk-tile-secondary:not(.uk-preserve-color) .uk-logo-inverse,
.uk-card-primary.uk-card-body .uk-logo-inverse,
.uk-card-primary > :not([class*='uk-card-media']) .uk-logo-inverse,
.uk-card-secondary.uk-card-body .uk-logo-inverse,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-logo-inverse,
.uk-overlay-primary .uk-logo-inverse,
.uk-offcanvas-bar .uk-logo-inverse {
  display: block;
}
.uk-light .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-light .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-section-primary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-section-primary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-section-secondary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-section-secondary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-tile-primary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-tile-primary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-tile-secondary:not(.uk-preserve-color) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-card-primary.uk-card-body .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-card-primary.uk-card-body .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-card-primary > :not([class*='uk-card-media']) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-card-secondary.uk-card-body .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-card-secondary.uk-card-body .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-overlay-primary .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-overlay-primary .uk-table-striped tbody tr:nth-of-type(even):last-child,
.uk-offcanvas-bar .uk-table-striped > tr:nth-of-type(even):last-child,
.uk-offcanvas-bar .uk-table-striped tbody tr:nth-of-type(even):last-child {
  border-bottom-color: rgba(255, 255, 255, 0.2);
}
.uk-light .uk-accordion-title::before,
.uk-section-primary:not(.uk-preserve-color) .uk-accordion-title::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-accordion-title::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-accordion-title::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-accordion-title::before,
.uk-card-primary.uk-card-body .uk-accordion-title::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-accordion-title::before,
.uk-card-secondary.uk-card-body .uk-accordion-title::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-accordion-title::before,
.uk-overlay-primary .uk-accordion-title::before,
.uk-offcanvas-bar .uk-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20width%3D%221%22%20height%3D%2213%22%20x%3D%226%22%20y%3D%220%22%20%2F%3E%0A%3C%2Fsvg%3E");
}
.uk-light .uk-open > .uk-accordion-title::before,
.uk-section-primary:not(.uk-preserve-color) .uk-open > .uk-accordion-title::before,
.uk-section-secondary:not(.uk-preserve-color) .uk-open > .uk-accordion-title::before,
.uk-tile-primary:not(.uk-preserve-color) .uk-open > .uk-accordion-title::before,
.uk-tile-secondary:not(.uk-preserve-color) .uk-open > .uk-accordion-title::before,
.uk-card-primary.uk-card-body .uk-open > .uk-accordion-title::before,
.uk-card-primary > :not([class*='uk-card-media']) .uk-open > .uk-accordion-title::before,
.uk-card-secondary.uk-card-body .uk-open > .uk-accordion-title::before,
.uk-card-secondary > :not([class*='uk-card-media']) .uk-open > .uk-accordion-title::before,
.uk-overlay-primary .uk-open > .uk-accordion-title::before,
.uk-offcanvas-bar .uk-open > .uk-accordion-title::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2213%22%20height%3D%2213%22%20viewBox%3D%220%200%2013%2013%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Crect%20fill%3D%22rgba%28255,%20255,%20255,%200.7%29%22%20width%3D%2213%22%20height%3D%221%22%20x%3D%220%22%20y%3D%226%22%20%2F%3E%0A%3C%2Fsvg%3E");
}

@media print {
  *,
  *::before,
  *::after {
    background: transparent !important;
    color: black !important;
    box-shadow: none !important;
    text-shadow: none !important;
  }
  a,
  a:visited {
    text-decoration: underline;
  }
  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }
  thead {
    display: table-header-group;
  }
  tr,
  img {
    page-break-inside: avoid;
  }
  img {
    max-width: 100% !important;
  }
  @page {
    margin: 0.5cm;
  }
  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }
  h2,
  h3 {
    page-break-after: avoid;
  }
}
.uk-opacity-11-12 { opacity: 91.6667%; }.uk-opacity-10-12 { opacity: 83.3333%; }.uk-opacity-9-12 { opacity: 75%; }.uk-opacity-8-12 { opacity: 66.6667%; }.uk-opacity-7-12 { opacity: 58.3333%; }.uk-opacity-6-12 { opacity: 50%; }.uk-opacity-5-12 { opacity: 41.6667%; }.uk-opacity-4-12 { opacity: 33.3333%; }.uk-opacity-3-12 { opacity: 25%; }.uk-opacity-2-12 { opacity: 16.6667%; }.uk-opacity-1-12 { opacity: 8.3333%; }.uk-opacity-10-11 { opacity: 90.9091%; }.uk-opacity-9-11 { opacity: 81.8182%; }.uk-opacity-8-11 { opacity: 72.7273%; }.uk-opacity-7-11 { opacity: 63.6364%; }.uk-opacity-6-11 { opacity: 54.5455%; }.uk-opacity-5-11 { opacity: 45.4545%; }.uk-opacity-4-11 { opacity: 36.3636%; }.uk-opacity-3-11 { opacity: 27.2727%; }.uk-opacity-2-11 { opacity: 18.1818%; }.uk-opacity-1-11 { opacity: 9.0909%; }.uk-opacity-9-10 { opacity: 90%; }.uk-opacity-8-10 { opacity: 80%; }.uk-opacity-7-10 { opacity: 70%; }.uk-opacity-6-10 { opacity: 60%; }.uk-opacity-5-10 { opacity: 50%; }.uk-opacity-4-10 { opacity: 40%; }.uk-opacity-3-10 { opacity: 30%; }.uk-opacity-2-10 { opacity: 20%; }.uk-opacity-1-10 { opacity: 10%; }.uk-opacity-8-9 { opacity: 88.8889%; }.uk-opacity-7-9 { opacity: 77.7778%; }.uk-opacity-6-9 { opacity: 66.6667%; }.uk-opacity-5-9 { opacity: 55.5556%; }.uk-opacity-4-9 { opacity: 44.4444%; }.uk-opacity-3-9 { opacity: 33.3333%; }.uk-opacity-2-9 { opacity: 22.2222%; }.uk-opacity-1-9 { opacity: 11.1111%; }.uk-opacity-7-8 { opacity: 87.5%; }.uk-opacity-6-8 { opacity: 75%; }.uk-opacity-5-8 { opacity: 62.5%; }.uk-opacity-4-8 { opacity: 50%; }.uk-opacity-3-8 { opacity: 37.5%; }.uk-opacity-2-8 { opacity: 25%; }.uk-opacity-1-8 { opacity: 12.5%; }.uk-opacity-6-7 { opacity: 85.7143%; }.uk-opacity-5-7 { opacity: 71.4286%; }.uk-opacity-4-7 { opacity: 57.1429%; }.uk-opacity-3-7 { opacity: 42.8571%; }.uk-opacity-2-7 { opacity: 28.5714%; }.uk-opacity-1-7 { opacity: 14.2857%; }.uk-opacity-5-6 { opacity: 83.3333%; }.uk-opacity-4-6 { opacity: 66.6667%; }.uk-opacity-3-6 { opacity: 50%; }.uk-opacity-2-6 { opacity: 33.3333%; }.uk-opacity-1-6 { opacity: 16.6667%; }.uk-opacity-4-5 { opacity: 80%; }.uk-opacity-3-5 { opacity: 60%; }.uk-opacity-2-5 { opacity: 40%; }.uk-opacity-1-5 { opacity: 20%; }.uk-opacity-3-4 { opacity: 75%; }.uk-opacity-2-4 { opacity: 50%; }.uk-opacity-1-4 { opacity: 25%; }.uk-opacity-2-3 { opacity: 66.6667%; }.uk-opacity-1-3 { opacity: 33.3333%; }.uk-opacity-1-2 { opacity: 50%; }.uk-opacity-1-1 { opacity: 100%; }

.uk-opacity-99 { opacity: 99%; }.uk-opacity-98 { opacity: 98%; }.uk-opacity-97 { opacity: 97%; }.uk-opacity-96 { opacity: 96%; }.uk-opacity-95 { opacity: 95%; }.uk-opacity-94 { opacity: 94%; }.uk-opacity-93 { opacity: 93%; }.uk-opacity-92 { opacity: 92%; }.uk-opacity-91 { opacity: 91%; }.uk-opacity-90 { opacity: 90%; }.uk-opacity-89 { opacity: 89%; }.uk-opacity-88 { opacity: 88%; }.uk-opacity-87 { opacity: 87%; }.uk-opacity-86 { opacity: 86%; }.uk-opacity-85 { opacity: 85%; }.uk-opacity-84 { opacity: 84%; }.uk-opacity-83 { opacity: 83%; }.uk-opacity-82 { opacity: 82%; }.uk-opacity-81 { opacity: 81%; }.uk-opacity-80 { opacity: 80%; }.uk-opacity-79 { opacity: 79%; }.uk-opacity-78 { opacity: 78%; }.uk-opacity-77 { opacity: 77%; }.uk-opacity-76 { opacity: 76%; }.uk-opacity-75 { opacity: 75%; }.uk-opacity-74 { opacity: 74%; }.uk-opacity-73 { opacity: 73%; }.uk-opacity-72 { opacity: 72%; }.uk-opacity-71 { opacity: 71%; }.uk-opacity-70 { opacity: 70%; }.uk-opacity-69 { opacity: 69%; }.uk-opacity-68 { opacity: 68%; }.uk-opacity-67 { opacity: 67%; }.uk-opacity-66 { opacity: 66%; }.uk-opacity-65 { opacity: 65%; }.uk-opacity-64 { opacity: 64%; }.uk-opacity-63 { opacity: 63%; }.uk-opacity-62 { opacity: 62%; }.uk-opacity-61 { opacity: 61%; }.uk-opacity-60 { opacity: 60%; }.uk-opacity-59 { opacity: 59%; }.uk-opacity-58 { opacity: 58%; }.uk-opacity-57 { opacity: 57%; }.uk-opacity-56 { opacity: 56%; }.uk-opacity-55 { opacity: 55%; }.uk-opacity-54 { opacity: 54%; }.uk-opacity-53 { opacity: 53%; }.uk-opacity-52 { opacity: 52%; }.uk-opacity-51 { opacity: 51%; }.uk-opacity-50 { opacity: 50%; }.uk-opacity-49 { opacity: 49%; }.uk-opacity-48 { opacity: 48%; }.uk-opacity-47 { opacity: 47%; }.uk-opacity-46 { opacity: 46%; }.uk-opacity-45 { opacity: 45%; }.uk-opacity-44 { opacity: 44%; }.uk-opacity-43 { opacity: 43%; }.uk-opacity-42 { opacity: 42%; }.uk-opacity-41 { opacity: 41%; }.uk-opacity-40 { opacity: 40%; }.uk-opacity-39 { opacity: 39%; }.uk-opacity-38 { opacity: 38%; }.uk-opacity-37 { opacity: 37%; }.uk-opacity-36 { opacity: 36%; }.uk-opacity-35 { opacity: 35%; }.uk-opacity-34 { opacity: 34%; }.uk-opacity-33 { opacity: 33%; }.uk-opacity-32 { opacity: 32%; }.uk-opacity-31 { opacity: 31%; }.uk-opacity-30 { opacity: 30%; }.uk-opacity-29 { opacity: 29%; }.uk-opacity-28 { opacity: 28%; }.uk-opacity-27 { opacity: 27%; }.uk-opacity-26 { opacity: 26%; }.uk-opacity-25 { opacity: 25%; }.uk-opacity-24 { opacity: 24%; }.uk-opacity-23 { opacity: 23%; }.uk-opacity-22 { opacity: 22%; }.uk-opacity-21 { opacity: 21%; }.uk-opacity-20 { opacity: 20%; }.uk-opacity-19 { opacity: 19%; }.uk-opacity-18 { opacity: 18%; }.uk-opacity-17 { opacity: 17%; }.uk-opacity-16 { opacity: 16%; }.uk-opacity-15 { opacity: 15%; }.uk-opacity-14 { opacity: 14%; }.uk-opacity-13 { opacity: 13%; }.uk-opacity-12 { opacity: 12%; }.uk-opacity-11 { opacity: 11%; }.uk-opacity-10 { opacity: 10%; }.uk-opacity-9 { opacity: 9%; }.uk-opacity-8 { opacity: 8%; }.uk-opacity-7 { opacity: 7%; }.uk-opacity-6 { opacity: 6%; }.uk-opacity-5 { opacity: 5%; }.uk-opacity-4 { opacity: 4%; }.uk-opacity-3 { opacity: 3%; }.uk-opacity-2 { opacity: 2%; }.uk-opacity-1 { opacity: 1%; }.uk-opacity-0 { opacity: 0%; }/*-──────────────────────────────────────────────────────────────────────────-*/

.uk-index-initial { z-index: initial }
.uk-index-inherit { z-index: inherit }
.uk-index-auto { z-index: auto }
.uk-index-middle { z-index: 0; }
.uk-index-back { z-index: -1; }
.uk-index-top { z-index: 1; }

/*-──────────────────────────────────────────────────────────────────────────-*/
        .uk-align-self-auto { align-self: auto; margin: 0px !important; }
        .uk-align-items-auto { align-items: auto; margin: 0px !important; }
        .uk-align-content-auto { align-content: auto; margin: 0px !important; }
    
        .uk-align-self-baseline { align-self: baseline; margin: 0px !important; }
        .uk-align-items-baseline { align-items: baseline; margin: 0px !important; }
        .uk-align-content-baseline { align-content: baseline; margin: 0px !important; }
    
        .uk-align-self-center { align-self: center; margin: 0px !important; }
        .uk-align-items-center { align-items: center; margin: 0px !important; }
        .uk-align-content-center { align-content: center; margin: 0px !important; }
    
        .uk-align-self-end { align-self: end; margin: 0px !important; }
        .uk-align-items-end { align-items: end; margin: 0px !important; }
        .uk-align-content-end { align-content: end; margin: 0px !important; }
    
        .uk-align-self-flex-end { align-self: flex-end; margin: 0px !important; }
        .uk-align-items-flex-end { align-items: flex-end; margin: 0px !important; }
        .uk-align-content-flex-end { align-content: flex-end; margin: 0px !important; }
    
        .uk-align-self-flex-start { align-self: flex-start; margin: 0px !important; }
        .uk-align-items-flex-start { align-items: flex-start; margin: 0px !important; }
        .uk-align-content-flex-start { align-content: flex-start; margin: 0px !important; }
    
        .uk-align-self-initial { align-self: initial; margin: 0px !important; }
        .uk-align-items-initial { align-items: initial; margin: 0px !important; }
        .uk-align-content-initial { align-content: initial; margin: 0px !important; }
    
        .uk-align-self-inherit { align-self: inherit; margin: 0px !important; }
        .uk-align-items-inherit { align-items: inherit; margin: 0px !important; }
        .uk-align-content-inherit { align-content: inherit; margin: 0px !important; }
    
        .uk-align-self-normal { align-self: normal; margin: 0px !important; }
        .uk-align-items-normal { align-items: normal; margin: 0px !important; }
        .uk-align-content-normal { align-content: normal; margin: 0px !important; }
    
        .uk-align-self-revert { align-self: revert; margin: 0px !important; }
        .uk-align-items-revert { align-items: revert; margin: 0px !important; }
        .uk-align-content-revert { align-content: revert; margin: 0px !important; }
    
        .uk-align-self-self-end { align-self: self-end; margin: 0px !important; }
        .uk-align-items-self-end { align-items: self-end; margin: 0px !important; }
        .uk-align-content-self-end { align-content: self-end; margin: 0px !important; }
    
        .uk-align-self-self-start { align-self: self-start; margin: 0px !important; }
        .uk-align-items-self-start { align-items: self-start; margin: 0px !important; }
        .uk-align-content-self-start { align-content: self-start; margin: 0px !important; }
    
        .uk-align-self-start { align-self: start; margin: 0px !important; }
        .uk-align-items-start { align-items: start; margin: 0px !important; }
        .uk-align-content-start { align-content: start; margin: 0px !important; }
    
        .uk-align-self-stretch { align-self: stretch; margin: 0px !important; }
        .uk-align-items-stretch { align-items: stretch; margin: 0px !important; }
        .uk-align-content-stretch { align-content: stretch; margin: 0px !important; }
    
        .uk-align-self-unset { align-self: unset; margin: 0px !important; }
        .uk-align-items-unset { align-items: unset; margin: 0px !important; }
        .uk-align-content-unset { align-content: unset; margin: 0px !important; }
    

@media (min-width: 640px) {

        .uk-align-self-auto\@s { align-self: auto; margin: 0px !important; }
        .uk-align-items-auto\@s { align-items: auto; margin: 0px !important; }
        .uk-align-content-auto\@s { align-content: auto; margin: 0px !important; }
    
        .uk-align-self-baseline\@s { align-self: baseline; margin: 0px !important; }
        .uk-align-items-baseline\@s { align-items: baseline; margin: 0px !important; }
        .uk-align-content-baseline\@s { align-content: baseline; margin: 0px !important; }
    
        .uk-align-self-center\@s { align-self: center; margin: 0px !important; }
        .uk-align-items-center\@s { align-items: center; margin: 0px !important; }
        .uk-align-content-center\@s { align-content: center; margin: 0px !important; }
    
        .uk-align-self-end\@s { align-self: end; margin: 0px !important; }
        .uk-align-items-end\@s { align-items: end; margin: 0px !important; }
        .uk-align-content-end\@s { align-content: end; margin: 0px !important; }
    
        .uk-align-self-flex-end\@s { align-self: flex-end; margin: 0px !important; }
        .uk-align-items-flex-end\@s { align-items: flex-end; margin: 0px !important; }
        .uk-align-content-flex-end\@s { align-content: flex-end; margin: 0px !important; }
    
        .uk-align-self-flex-start\@s { align-self: flex-start; margin: 0px !important; }
        .uk-align-items-flex-start\@s { align-items: flex-start; margin: 0px !important; }
        .uk-align-content-flex-start\@s { align-content: flex-start; margin: 0px !important; }
    
        .uk-align-self-initial\@s { align-self: initial; margin: 0px !important; }
        .uk-align-items-initial\@s { align-items: initial; margin: 0px !important; }
        .uk-align-content-initial\@s { align-content: initial; margin: 0px !important; }
    
        .uk-align-self-inherit\@s { align-self: inherit; margin: 0px !important; }
        .uk-align-items-inherit\@s { align-items: inherit; margin: 0px !important; }
        .uk-align-content-inherit\@s { align-content: inherit; margin: 0px !important; }
    
        .uk-align-self-normal\@s { align-self: normal; margin: 0px !important; }
        .uk-align-items-normal\@s { align-items: normal; margin: 0px !important; }
        .uk-align-content-normal\@s { align-content: normal; margin: 0px !important; }
    
        .uk-align-self-revert\@s { align-self: revert; margin: 0px !important; }
        .uk-align-items-revert\@s { align-items: revert; margin: 0px !important; }
        .uk-align-content-revert\@s { align-content: revert; margin: 0px !important; }
    
        .uk-align-self-self-end\@s { align-self: self-end; margin: 0px !important; }
        .uk-align-items-self-end\@s { align-items: self-end; margin: 0px !important; }
        .uk-align-content-self-end\@s { align-content: self-end; margin: 0px !important; }
    
        .uk-align-self-self-start\@s { align-self: self-start; margin: 0px !important; }
        .uk-align-items-self-start\@s { align-items: self-start; margin: 0px !important; }
        .uk-align-content-self-start\@s { align-content: self-start; margin: 0px !important; }
    
        .uk-align-self-start\@s { align-self: start; margin: 0px !important; }
        .uk-align-items-start\@s { align-items: start; margin: 0px !important; }
        .uk-align-content-start\@s { align-content: start; margin: 0px !important; }
    
        .uk-align-self-stretch\@s { align-self: stretch; margin: 0px !important; }
        .uk-align-items-stretch\@s { align-items: stretch; margin: 0px !important; }
        .uk-align-content-stretch\@s { align-content: stretch; margin: 0px !important; }
    
        .uk-align-self-unset\@s { align-self: unset; margin: 0px !important; }
        .uk-align-items-unset\@s { align-items: unset; margin: 0px !important; }
        .uk-align-content-unset\@s { align-content: unset; margin: 0px !important; }
    
}

@media (min-width: 960px) {

        .uk-align-self-auto\@m { align-self: auto; margin: 0px !important; }
        .uk-align-items-auto\@m { align-items: auto; margin: 0px !important; }
        .uk-align-content-auto\@m { align-content: auto; margin: 0px !important; }
    
        .uk-align-self-baseline\@m { align-self: baseline; margin: 0px !important; }
        .uk-align-items-baseline\@m { align-items: baseline; margin: 0px !important; }
        .uk-align-content-baseline\@m { align-content: baseline; margin: 0px !important; }
    
        .uk-align-self-center\@m { align-self: center; margin: 0px !important; }
        .uk-align-items-center\@m { align-items: center; margin: 0px !important; }
        .uk-align-content-center\@m { align-content: center; margin: 0px !important; }
    
        .uk-align-self-end\@m { align-self: end; margin: 0px !important; }
        .uk-align-items-end\@m { align-items: end; margin: 0px !important; }
        .uk-align-content-end\@m { align-content: end; margin: 0px !important; }
    
        .uk-align-self-flex-end\@m { align-self: flex-end; margin: 0px !important; }
        .uk-align-items-flex-end\@m { align-items: flex-end; margin: 0px !important; }
        .uk-align-content-flex-end\@m { align-content: flex-end; margin: 0px !important; }
    
        .uk-align-self-flex-start\@m { align-self: flex-start; margin: 0px !important; }
        .uk-align-items-flex-start\@m { align-items: flex-start; margin: 0px !important; }
        .uk-align-content-flex-start\@m { align-content: flex-start; margin: 0px !important; }
    
        .uk-align-self-initial\@m { align-self: initial; margin: 0px !important; }
        .uk-align-items-initial\@m { align-items: initial; margin: 0px !important; }
        .uk-align-content-initial\@m { align-content: initial; margin: 0px !important; }
    
        .uk-align-self-inherit\@m { align-self: inherit; margin: 0px !important; }
        .uk-align-items-inherit\@m { align-items: inherit; margin: 0px !important; }
        .uk-align-content-inherit\@m { align-content: inherit; margin: 0px !important; }
    
        .uk-align-self-normal\@m { align-self: normal; margin: 0px !important; }
        .uk-align-items-normal\@m { align-items: normal; margin: 0px !important; }
        .uk-align-content-normal\@m { align-content: normal; margin: 0px !important; }
    
        .uk-align-self-revert\@m { align-self: revert; margin: 0px !important; }
        .uk-align-items-revert\@m { align-items: revert; margin: 0px !important; }
        .uk-align-content-revert\@m { align-content: revert; margin: 0px !important; }
    
        .uk-align-self-self-end\@m { align-self: self-end; margin: 0px !important; }
        .uk-align-items-self-end\@m { align-items: self-end; margin: 0px !important; }
        .uk-align-content-self-end\@m { align-content: self-end; margin: 0px !important; }
    
        .uk-align-self-self-start\@m { align-self: self-start; margin: 0px !important; }
        .uk-align-items-self-start\@m { align-items: self-start; margin: 0px !important; }
        .uk-align-content-self-start\@m { align-content: self-start; margin: 0px !important; }
    
        .uk-align-self-start\@m { align-self: start; margin: 0px !important; }
        .uk-align-items-start\@m { align-items: start; margin: 0px !important; }
        .uk-align-content-start\@m { align-content: start; margin: 0px !important; }
    
        .uk-align-self-stretch\@m { align-self: stretch; margin: 0px !important; }
        .uk-align-items-stretch\@m { align-items: stretch; margin: 0px !important; }
        .uk-align-content-stretch\@m { align-content: stretch; margin: 0px !important; }
    
        .uk-align-self-unset\@m { align-self: unset; margin: 0px !important; }
        .uk-align-items-unset\@m { align-items: unset; margin: 0px !important; }
        .uk-align-content-unset\@m { align-content: unset; margin: 0px !important; }
    
}

@media (min-width: 1200px) {

        .uk-align-self-auto\@l { align-self: auto; margin: 0px !important; }
        .uk-align-items-auto\@l { align-items: auto; margin: 0px !important; }
        .uk-align-content-auto\@l { align-content: auto; margin: 0px !important; }
    
        .uk-align-self-baseline\@l { align-self: baseline; margin: 0px !important; }
        .uk-align-items-baseline\@l { align-items: baseline; margin: 0px !important; }
        .uk-align-content-baseline\@l { align-content: baseline; margin: 0px !important; }
    
        .uk-align-self-center\@l { align-self: center; margin: 0px !important; }
        .uk-align-items-center\@l { align-items: center; margin: 0px !important; }
        .uk-align-content-center\@l { align-content: center; margin: 0px !important; }
    
        .uk-align-self-end\@l { align-self: end; margin: 0px !important; }
        .uk-align-items-end\@l { align-items: end; margin: 0px !important; }
        .uk-align-content-end\@l { align-content: end; margin: 0px !important; }
    
        .uk-align-self-flex-end\@l { align-self: flex-end; margin: 0px !important; }
        .uk-align-items-flex-end\@l { align-items: flex-end; margin: 0px !important; }
        .uk-align-content-flex-end\@l { align-content: flex-end; margin: 0px !important; }
    
        .uk-align-self-flex-start\@l { align-self: flex-start; margin: 0px !important; }
        .uk-align-items-flex-start\@l { align-items: flex-start; margin: 0px !important; }
        .uk-align-content-flex-start\@l { align-content: flex-start; margin: 0px !important; }
    
        .uk-align-self-initial\@l { align-self: initial; margin: 0px !important; }
        .uk-align-items-initial\@l { align-items: initial; margin: 0px !important; }
        .uk-align-content-initial\@l { align-content: initial; margin: 0px !important; }
    
        .uk-align-self-inherit\@l { align-self: inherit; margin: 0px !important; }
        .uk-align-items-inherit\@l { align-items: inherit; margin: 0px !important; }
        .uk-align-content-inherit\@l { align-content: inherit; margin: 0px !important; }
    
        .uk-align-self-normal\@l { align-self: normal; margin: 0px !important; }
        .uk-align-items-normal\@l { align-items: normal; margin: 0px !important; }
        .uk-align-content-normal\@l { align-content: normal; margin: 0px !important; }
    
        .uk-align-self-revert\@l { align-self: revert; margin: 0px !important; }
        .uk-align-items-revert\@l { align-items: revert; margin: 0px !important; }
        .uk-align-content-revert\@l { align-content: revert; margin: 0px !important; }
    
        .uk-align-self-self-end\@l { align-self: self-end; margin: 0px !important; }
        .uk-align-items-self-end\@l { align-items: self-end; margin: 0px !important; }
        .uk-align-content-self-end\@l { align-content: self-end; margin: 0px !important; }
    
        .uk-align-self-self-start\@l { align-self: self-start; margin: 0px !important; }
        .uk-align-items-self-start\@l { align-items: self-start; margin: 0px !important; }
        .uk-align-content-self-start\@l { align-content: self-start; margin: 0px !important; }
    
        .uk-align-self-start\@l { align-self: start; margin: 0px !important; }
        .uk-align-items-start\@l { align-items: start; margin: 0px !important; }
        .uk-align-content-start\@l { align-content: start; margin: 0px !important; }
    
        .uk-align-self-stretch\@l { align-self: stretch; margin: 0px !important; }
        .uk-align-items-stretch\@l { align-items: stretch; margin: 0px !important; }
        .uk-align-content-stretch\@l { align-content: stretch; margin: 0px !important; }
    
        .uk-align-self-unset\@l { align-self: unset; margin: 0px !important; }
        .uk-align-items-unset\@l { align-items: unset; margin: 0px !important; }
        .uk-align-content-unset\@l { align-content: unset; margin: 0px !important; }
    
}

@media (min-width: 1600px) {

        .uk-align-self-auto\@xl { align-self: auto; margin: 0px !important; }
        .uk-align-items-auto\@xl { align-items: auto; margin: 0px !important; }
        .uk-align-content-auto\@xl { align-content: auto; margin: 0px !important; }
    
        .uk-align-self-baseline\@xl { align-self: baseline; margin: 0px !important; }
        .uk-align-items-baseline\@xl { align-items: baseline; margin: 0px !important; }
        .uk-align-content-baseline\@xl { align-content: baseline; margin: 0px !important; }
    
        .uk-align-self-center\@xl { align-self: center; margin: 0px !important; }
        .uk-align-items-center\@xl { align-items: center; margin: 0px !important; }
        .uk-align-content-center\@xl { align-content: center; margin: 0px !important; }
    
        .uk-align-self-end\@xl { align-self: end; margin: 0px !important; }
        .uk-align-items-end\@xl { align-items: end; margin: 0px !important; }
        .uk-align-content-end\@xl { align-content: end; margin: 0px !important; }
    
        .uk-align-self-flex-end\@xl { align-self: flex-end; margin: 0px !important; }
        .uk-align-items-flex-end\@xl { align-items: flex-end; margin: 0px !important; }
        .uk-align-content-flex-end\@xl { align-content: flex-end; margin: 0px !important; }
    
        .uk-align-self-flex-start\@xl { align-self: flex-start; margin: 0px !important; }
        .uk-align-items-flex-start\@xl { align-items: flex-start; margin: 0px !important; }
        .uk-align-content-flex-start\@xl { align-content: flex-start; margin: 0px !important; }
    
        .uk-align-self-initial\@xl { align-self: initial; margin: 0px !important; }
        .uk-align-items-initial\@xl { align-items: initial; margin: 0px !important; }
        .uk-align-content-initial\@xl { align-content: initial; margin: 0px !important; }
    
        .uk-align-self-inherit\@xl { align-self: inherit; margin: 0px !important; }
        .uk-align-items-inherit\@xl { align-items: inherit; margin: 0px !important; }
        .uk-align-content-inherit\@xl { align-content: inherit; margin: 0px !important; }
    
        .uk-align-self-normal\@xl { align-self: normal; margin: 0px !important; }
        .uk-align-items-normal\@xl { align-items: normal; margin: 0px !important; }
        .uk-align-content-normal\@xl { align-content: normal; margin: 0px !important; }
    
        .uk-align-self-revert\@xl { align-self: revert; margin: 0px !important; }
        .uk-align-items-revert\@xl { align-items: revert; margin: 0px !important; }
        .uk-align-content-revert\@xl { align-content: revert; margin: 0px !important; }
    
        .uk-align-self-self-end\@xl { align-self: self-end; margin: 0px !important; }
        .uk-align-items-self-end\@xl { align-items: self-end; margin: 0px !important; }
        .uk-align-content-self-end\@xl { align-content: self-end; margin: 0px !important; }
    
        .uk-align-self-self-start\@xl { align-self: self-start; margin: 0px !important; }
        .uk-align-items-self-start\@xl { align-items: self-start; margin: 0px !important; }
        .uk-align-content-self-start\@xl { align-content: self-start; margin: 0px !important; }
    
        .uk-align-self-start\@xl { align-self: start; margin: 0px !important; }
        .uk-align-items-start\@xl { align-items: start; margin: 0px !important; }
        .uk-align-content-start\@xl { align-content: start; margin: 0px !important; }
    
        .uk-align-self-stretch\@xl { align-self: stretch; margin: 0px !important; }
        .uk-align-items-stretch\@xl { align-items: stretch; margin: 0px !important; }
        .uk-align-content-stretch\@xl { align-content: stretch; margin: 0px !important; }
    
        .uk-align-self-unset\@xl { align-self: unset; margin: 0px !important; }
        .uk-align-items-unset\@xl { align-items: unset; margin: 0px !important; }
        .uk-align-content-unset\@xl { align-content: unset; margin: 0px !important; }
    
}
/*
 * 1. Reset default `hr`
 * 2. Set margin if a `div` is used for semantical reason
 */
[class*='uk-divider'] {
  margin-bottom: 20px;
  border: none;
}
/* Add margin if adjacent element */
* + [class*='uk-divider'] {
  margin-top: 20px;
}
/* Icon
 ========================================================================== */
.uk-divider-icon {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%2220%22%20height%3D%2220%22%20viewBox%3D%220%200%2020%2020%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22none%22%20stroke%3D%22%23e5e5e5%22%20stroke-width%3D%222%22%20cx%3D%2210%22%20cy%3D%2210%22%20r%3D%227%22%20%2F%3E%0A%3C%2Fsvg%3E%0A");
  position: relative; height: 20px;
  background-repeat: no-repeat;
  background-position: 50% 50%;
}
.uk-divider-icon::before,
.uk-divider-icon::after {
  border-bottom: 1px solid #e5e5e5;
  max-width: calc(50% - (50px / 2));
  content: ""; top: 50%;
  position: absolute;
}
.uk-divider-icon::before {
  right: calc(50% + (50px / 2));
  width: 100%;
}
.uk-divider-icon::after {
  left: calc(50% + (50px / 2));
  width: 100%;
}
/* Small
 ========================================================================== */
/*
 * 1. Fix height because of `inline-block`
 * 2. Using ::after and inline-block to make `text-align` work
 */
/* 1 */
.uk-divider-small {
  line-height: 0;
}
/* 2 */
.uk-divider-small::after {
  border-top: 1px solid #e5e5e5;
  display: inline-block;
  vertical-align: top;
  max-width: 100%;
  width: 100px;
  content: "";
}
/* Vertical
 ========================================================================== */
.uk-divider-vertical {
  border-left: 1px solid #e5e5e5;
  margin-right: auto;
  width: max-content;
  margin-left: auto;
  height: 100px;
}

.uk-list {
  list-style: none;
  padding: 0;
}
/*
 * Remove margin from the last-child
 */
.uk-list > * > :last-child {
  margin-bottom: 0;
}
/*
 * Style
 */
.uk-list > :nth-child(n+2),
.uk-list > * > ul {
  margin-top: 10px;
}
/* Marker modifiers
 * Moving `::marker` inside `::before` to style it differently
 * To style the `::marker` is currently only supported in Firefox and Safari
 ========================================================================== */
.uk-list-disc > *,
.uk-list-circle > *,
.uk-list-square > *,
.uk-list-decimal > *,
.uk-list-hyphen > * {
  padding-left: 30px;
}
/*
 * Type modifiers
 */
.uk-list-decimal {
  counter-reset: decimal;
}
.uk-list-decimal > * {
  counter-increment: decimal;
}
.uk-list-disc > ::before,
.uk-list-circle > ::before,
.uk-list-square > ::before,
.uk-list-decimal > ::before,
.uk-list-hyphen > ::before {
  list-style-position: inside;
  margin-bottom: -1.5em;
  position: relative;
  display: list-item;
  text-align: right;
  height: 1.5em;
  left: -30px;
  width: 30px;
  content: "";
}
.uk-list-disc > ::before {
  list-style-type: disc;
}
.uk-list-circle > ::before {
  list-style-type: circle;
}
.uk-list-square > ::before {
  list-style-type: square;
}
.uk-list-decimal > ::before {
  content: counter(decimal, decimal) '\200A.\00A0';
}
.uk-list-hyphen > ::before {
  content: '–\00A0\00A0';
}

/*
 * Color modifiers
 */

/* TODO: Compiled uk-border-color */

        .uk-list-mute > ::before { color: var(--color-mute) !important; }
      

        .uk-list-danger > ::before { color: var(--color-danger) !important; }
      

        .uk-list-success > ::before { color: var(--color-success) !important; }
      

        .uk-list-default > ::before { color: var(--color-default) !important; }
      

        .uk-list-primary > ::before { color: var(--color-primary) !important; }
      

        .uk-list-warning > ::before { color: var(--color-warning) !important; }
      

        .uk-list-secondary > ::before { color: var(--color-secondary) !important; }
      
/* TODO: Compiled uk-border-color */

/* Image bullet modifier
 ========================================================================== */
.uk-list-bullet > * {
  padding-left: 30px;
}
.uk-list-bullet > ::before {
  background-image: url("data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%226%22%20height%3D%226%22%20viewBox%3D%220%200%206%206%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Ccircle%20fill%3D%22%23666%22%20cx%3D%223%22%20cy%3D%223%22%20r%3D%223%22%20%2F%3E%0A%3C%2Fsvg%3E");
  background-repeat: no-repeat;
  background-position: 50% 50%;
  margin-bottom: -1.5em;
  position: relative;
  display: list-item;
  height: 1.5em;
  left: -30px;
  width: 30px;
  content: "";
}
/* Style modifiers
 ========================================================================== */
/*
 * Divider
 */
.uk-list-divider > :nth-child(n+2) {
  margin-top: 10px; padding-top: 10px;
  border-top: 1px solid #e5e5e5;
}
/*
 * Striped
 */
.uk-list-striped > * {
  padding: 10px 10px;
}
.uk-list-striped > *:nth-of-type(odd) {
  border-bottom: 1px solid #e5e5e5;
  border-top: 1px solid #e5e5e5;
}
.uk-list-striped > :nth-of-type(odd) {
  background: #f8f8f8;
}
.uk-list-striped > :nth-child(n+2) {
  margin-top: 0;
}
/* Size modifier
 ========================================================================== */
.uk-list-large > :nth-child(n+2),
.uk-list-large > * > ul {
  margin-top: 20px;
}
.uk-list-collapse > :nth-child(n+2),
.uk-list-collapse > * > ul {
  margin-top: 0;
}
/*
 * Divider
 */
.uk-list-large.uk-list-divider > :nth-child(n+2) {
  margin-top: 20px; padding-top: 20px;
}
.uk-list-collapse.uk-list-divider > :nth-child(n+2) {
  margin-top: 0; padding-top: 0;
}
/*
 * Striped
 */
.uk-list-large.uk-list-striped > * {
  padding: 20px 10px;
}
.uk-list-collapse.uk-list-striped > * {
  padding-top: 0; padding-bottom: 0;
}
.uk-list-large.uk-list-striped > :nth-child(n+2),
.uk-list-collapse.uk-list-striped > :nth-child(n+2) {
  margin-top: 0;
}

/*
 * Term
 */
.uk-description-list > dt {
  font-size: 0.875rem;
  font-weight: normal;
  text-transform: uppercase;
  color: var(--color-secondary-click);
}
.uk-description-list > dt:nth-child(n+2) {
  margin-top: 20px;
}
/*
 * Description
 */
/* Style modifier
 ========================================================================== */
/*
 * Line
 */
.uk-description-list-divider > dt:nth-child(n+2) {
  margin-top: 20px; padding-top: 20px;
  border-top: 1px solid uk-mute;
}
